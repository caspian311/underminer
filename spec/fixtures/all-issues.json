[
  {
    "id": 54499,
    "subject": "Only Run Selected KERs (Dependent on 54496 & 54498)",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 213829,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-06T17:22:31Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "When selecting Run KERs, only the KERs that are selected in the table are processed in the backend.\r\n\r\n*Design Links*\r\nhttps://sketch.cloud/s/Y8ylZ/a/Ojq9bm\r\n\r\n*Notes:*\r\n* All profiles are shared with everyone in this iteration.\r\n* Global Profile Type is added by QAC Team and will be the only option for the first iteration.\r\n* Do not add ability to create new profiles to frontend in this iteration.",
            "new_value": "When selecting Run KERs, only the KERs that are selected in the table are processed in the backend.\r\n\r\nDependent on #54496 & #54498\r\n\r\n*Design Links*\r\nhttps://sketch.cloud/s/Y8ylZ/a/Ojq9bm\r\n\r\n*Notes:*\r\n* All profiles are shared with everyone in this iteration.\r\n* Global Profile Type is added by QAC Team and will be the only option for the first iteration.\r\n* Do not add ability to create new profiles to frontend in this iteration."
          }
        ]
      },
      {
        "id": 213830,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-06T17:22:53Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Only Run Selected KERs",
            "new_value": "Only Run Selected KERs (Dependent on 54496 & 54498)"
          }
        ]
      },
      {
        "id": 213879,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T18:59:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      }
    ]
  },
  {
    "id": 54498,
    "subject": "Update KERs Profile Endpoint to save in Database (Dependent on 54495)",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 213832,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-06T17:23:48Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Update KERs Profile Endpoint to save in Database",
            "new_value": "Update KERs Profile Endpoint to save in Database (Dependent on 54495)"
          }
        ]
      },
      {
        "id": 213878,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T18:59:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      }
    ]
  },
  {
    "id": 54497,
    "subject": "Move BNDRYUNDERSHT KER into DB",
    "category": "KER team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 213833,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-06T17:27:11Z",
        "details": [
          {
            "property": "attachment",
            "name": "5616",
            "new_value": "bndryundersht-Good-2020-02-06-0703.zip"
          },
          {
            "property": "attachment",
            "name": "5617",
            "new_value": "bndryundersht-Bad-2020-02-06-0704.zip"
          }
        ]
      }
    ]
  },
  {
    "id": 54496,
    "subject": "KERs Profile Endpoint (Dependent on 54495)",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 213831,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-06T17:23:36Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KERs Profile Endpoint",
            "new_value": "KERs Profile Endpoint (Dependent on 54495)"
          }
        ]
      },
      {
        "id": 213877,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T18:59:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      }
    ]
  },
  {
    "id": 54495,
    "subject": "Add KERs Selection Table",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 213876,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T18:59:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      }
    ]
  },
  {
    "id": 54462,
    "subject": "Add Storybook to PCF environment",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 213723,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-05T18:46:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54454,
    "subject": "Formatting QAC-R ",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 213722,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-05T18:46:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54362,
    "subject": "Move ANOCOVERLA KER into DB",
    "category": "KER team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 213324,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-02-03T20:41:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move ANOCOVERLA KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* Mary is alerted via RocketChat that the ANOCOVERLA KER needs to be moved into the DB\r\n* QAC dev team retrieves her changes (via git or Mary sending file updates)\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the ANOCOVERLA KER from the KER wrapper",
            "new_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move ANOCOVERLA KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* Mary is alerted via RocketChat that the ANOCOVERLA KER needs to be moved into the DB\r\n--- ask Mary if she wants to generate upload statements from Ker Wrapper SQL\r\n--- then take upload statements from Mary (or existing Ker Wrapper SQL) and transplant it into the database as a new .sql file.\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the ANOCOVERLA KER from the KER wrapper\r\n* new ANOCOVERLA data is obtained from Chris Welch\r\n* new test dataset may contain different number of conditions per part than existing test dataset. Feature tests may need to be updated.\r\n"
          }
        ]
      },
      {
        "id": 213325,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T20:42:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 54334,
    "subject": "[Architecture] Change how QAC schema is handled",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 213074,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-02-03T15:06:23Z",
        "details": [
          {
            "property": "relation",
            "name": "blocks",
            "new_value": "52413"
          }
        ]
      }
    ]
  },
  {
    "id": 54321,
    "subject": "Update Jenkinsfile to use unique Docker tags",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 213052,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-02-03T14:42:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "1657"
          }
        ]
      }
    ]
  },
  {
    "id": 54309,
    "subject": "Tech Debt: Setup Global Styling & variables",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 213230,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:53:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54307,
    "subject": "Validate implementation of long-polling",
    "category": "Web App team",
    "status": "Analysis",
    "journals": []
  },
  {
    "id": 54301,
    "subject": "SPIKE: Configure Jenkins to run E2E Tests in build",
    "category": "Web App team",
    "status": "In Progress",
    "journals": [
      {
        "id": 212768,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-30T16:28:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 212796,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T18:35:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Needs AC",
            "new_value": "Get E2E tests to run in Jenkins. "
          }
        ]
      },
      {
        "id": 213094,
        "user": {
          "id": 3857,
          "name": "Olsen.Erik.1572615312"
        },
        "notes": "",
        "created_on": "2020-02-03T15:31:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      }
    ]
  },
  {
    "id": 54146,
    "subject": "Summary Widget: Load Time Widget",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 212579,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T18:57:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54145,
    "subject": "Update Endpoint Data Being Used",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 212578,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T18:57:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54141,
    "subject": "File Upload Input does not have focus when tabbing with a keyboard",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 212577,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T18:57:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54138,
    "subject": "Schema Check Summary: Total Exceptions Chart",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 212576,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T18:57:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 54074,
    "subject": "Update Fortify to omit test files.",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 213335,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-03T21:04:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 54036,
    "subject": "Remove the \"Reset Button\" on KERs Summary",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211676,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "There is a branch 54036-remove-reset-button that exists with this code in gitlab.\r\n\r\nWe decided to remove a redundant piece of navigation in the application. When the KER results are complete, we previously had an additional action button that navigated the user to the \"Start New QAC\" screen. Since this link already exists in the main navigation, we felt that this button was redundant and could cause confusion. So, we're removing it.",
        "created_on": "2020-01-27T16:22:57Z",
        "details": []
      },
      {
        "id": 211690,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212797,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T18:38:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN the user has completed processing a valid shapefile for KER conditions\r\nWHEN the user wants to conduct QA on a new valid shapefile\r\nAND WHEN the user clicks the \"Start QAC\"navigation tab\r\nTHEN the application URL should be \"/\"\r\nAND THEN \"Start a New QAC\" should display",
            "new_value": "GIVEN the user has completed processing a valid shapefile for KER conditions\r\nWHEN the user wants to conduct QA on a new valid shapefile\r\nAND WHEN the user clicks the \"Start QAC\"navigation tab\r\nTHEN the application URL should be \"/\"\r\nAND THEN \"Start a New QAC\" should display\r\n\r\nAcceptance Criteria:\r\n*Remove the 'Upload new QAC' button\r\n "
          }
        ]
      },
      {
        "id": 212814,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-30T20:14:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212974,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T18:30:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213085,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T15:11:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 213155,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-03T17:12:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 54035,
    "subject": "E2E Test: User can access application support documentation",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211689,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212812,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-30T20:11:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN application support is required\r\nWHEN user clicks the \"Support\" navigation tab\r\nTHEN the application URL should be \"/support\"\r\nAND THEN the \"QAC Support\" should display",
            "new_value": "GIVEN application support is required\r\nWHEN user clicks the \"Support\" navigation tab\r\nTHEN the application URL should be \"/support\"\r\nAND THEN the \"QAC Support\" should display\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 213421,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-04T14:56:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213476,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-02-04T16:04:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN application support is required\r\nWHEN user clicks the \"Support\" navigation tab\r\nTHEN the application URL should be \"/support\"\r\nAND THEN the \"QAC Support\" should display\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN application support is required\r\nWHEN user clicks the \"Support\" navigation tab\r\nTHEN the application URL should end with \"/support\"\r\nAND THEN the \"QAC Support\" should display\r\n\r\nGIVEN application support is required\r\nWHEN user appends the QAC url with \"/support\"\r\nTHEN the application URL should end with \"/support\"\r\nAND THEN the \"QAC Support\" should display\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 213673,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-05T14:32:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 54031,
    "subject": "E2E Test - Sad Path: User can run KERs and download results",
    "category": "Web App team",
    "status": "In Progress",
    "journals": [
      {
        "id": 211668,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-27T15:47:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN KER checks have been processed on a valid shape file\r\nAND GIVEN KER check conditions exist on the valid shape file\r\nWHEN user clicks the \"Download Results\" button\r\nTHEN a dropdown menu appears\r\n\r\nAND WHEN user clicks the \"Download All\" button in the dropdown\r\nTHEN a shapefile .zip and a .csv file containing the KER check conditions are generated and downloads to the user's computer",
            "new_value": "GIVEN KER checks have been processed on a valid shape file\r\nAND GIVEN KER check conditions exist on the valid shape file\r\nWHEN user clicks the \"Download Results\" button\r\nTHEN a dropdown menu appears\r\n\r\nAND WHEN user clicks the \"Download All\" button in the dropdown\r\nTHEN a .docx QACR, a shapefile .zip, and a .csv file containing the KER check conditions are generated and downloads to the user's computer"
          }
        ]
      },
      {
        "id": 211685,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212808,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-30T20:10:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN KER checks have been processed on a valid shape file\r\nAND GIVEN KER check conditions exist on the valid shape file\r\nWHEN user clicks the \"Download Results\" button\r\nTHEN a dropdown menu appears\r\n\r\nAND WHEN user clicks the \"Download All\" button in the dropdown\r\nTHEN a .docx QACR, a shapefile .zip, and a .csv file containing the KER check conditions are generated and downloads to the user's computer",
            "new_value": "GIVEN KER checks have been processed on a valid shape file\r\nAND GIVEN KER check conditions exist on the valid shape file\r\nWHEN user clicks the \"Download Results\" button\r\nTHEN a dropdown menu appears\r\n\r\nAND WHEN user clicks the \"Download All\" button in the dropdown\r\nTHEN a .docx QACR, a shapefile .zip, and a .csv file containing the KER check conditions are generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 212992,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T20:54:42Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "E2E Test: User can download KER results in all file types",
            "new_value": "E2E Test Sad Path: User can run KERs and download results"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN KER checks have been processed on a valid shape file\r\nAND GIVEN KER check conditions exist on the valid shape file\r\nWHEN user clicks the \"Download Results\" button\r\nTHEN a dropdown menu appears\r\n\r\nAND WHEN user clicks the \"Download All\" button in the dropdown\r\nTHEN a .docx QACR, a shapefile .zip, and a .csv file containing the KER check conditions are generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN user has completed running schema checks on a shape file that has conditions\r\nWHEN user clicks the \"Run KERs\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the KER checks are complete\r\nTHEN the application URL should be \"/running-qac/ker-results\"\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"KER Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is a completed step and provide a link to \" /running-qac/schema-check-results\"\r\nAND THEN the QAC side navigation should show the KER Summary as active by default\r\nAND THEN the KER Results area should show the KER Summary\r\n\r\nAND WHEN the KER Summary screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of conditions displays in the results content area\r\nAND THEN the \"Download Results\" button exists in the summary header\r\n\r\nWHEN user clicks on a condition from the left nav under the summary item\r\nTHEN the results for that condition shows in the results content area\r\n\r\nAND GIVEN user clicks on an condition from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nGIVEN KER checks have been processed on a shape file with conditions\r\nWHEN user clicks the \"Download Results\" button in the summary header\r\nTHEN a dropdown menu appears\r\n\r\nAND WHEN user clicks the \"Download All\" button in the dropdown\r\nTHEN a .docx QACR, a shapefile .zip, and a .csv file containing the KER check conditions are generated and downloads to the user's computer\r\n\r\nAND WHEN user clicks the \"Download CSV\" button in the dropdown\r\nTHEN a .csv file containing the KER check conditions is generated and downloads to the user's computer\r\n\r\nAND WHEN user clicks the \"Download SHP\" button in the dropdown\r\nTHEN a shapefile .zip file containing the KER check conditions is generated and downloads to the user's computer\r\n\r\nAND WHEN user clicks the \"Download QACR\" button in the dropdown\r\nTHEN a .docx file containing the KER check conditions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 212997,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T21:33:14Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "E2E Test Sad Path: User can run KERs and download results",
            "new_value": "E2E Test - Sad Path: User can run KERs and download results"
          }
        ]
      },
      {
        "id": 213420,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-04T14:55:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213529,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-04T19:22:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 213533,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-04T19:24:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "3"
          }
        ]
      }
    ]
  },
  {
    "id": 54030,
    "subject": "E2E Test: User can run KER checks on valid shape file",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211684,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212807,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-30T20:10:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has completed running schema checks on a valid shape\r\nWHEN user clicks the \"Run KERs\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the KER checks are complete\r\nTHEN the application URL should be \"/running-qac/ker-results\"\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"KER Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is a completed step and provide a link to \" /running-qac/schema-check-results\"\r\nAND THEN the QAC side navigation should indicate \"KER Results Summary\" is currently active\r\nAND THEN the \"KER Result Summary\" should display",
            "new_value": "GIVEN user has completed running schema checks on a valid shape\r\nWHEN user clicks the \"Run KERs\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the KER checks are complete\r\nTHEN the application URL should be \"/running-qac/ker-results\"\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"KER Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is a completed step and provide a link to \" /running-qac/schema-check-results\"\r\nAND THEN the QAC side navigation should indicate \"KER Results Summary\" is currently active\r\nAND THEN the \"KER Result Summary\" should display\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 212985,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T19:22:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212987,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T19:43:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has completed running schema checks on a valid shape\r\nWHEN user clicks the \"Run KERs\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the KER checks are complete\r\nTHEN the application URL should be \"/running-qac/ker-results\"\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"KER Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is a completed step and provide a link to \" /running-qac/schema-check-results\"\r\nAND THEN the QAC side navigation should indicate \"KER Results Summary\" is currently active\r\nAND THEN the \"KER Result Summary\" should display\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN user has completed running schema checks on a valid shape\r\nWHEN user clicks the \"Run KERs\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the KER checks are complete\r\nTHEN the application URL should be \"/running-qac/ker-results\"\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"KER Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is a completed step and provide a link to \" /running-qac/schema-check-results\"\r\nAND THEN the QAC side navigation should show the empty results list in the side navigation\r\nAND THEN the KER Results area should show a success alert\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 212991,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T20:46:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213055,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-02-03T14:47:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213056,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-02-03T14:47:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213373,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-02-03T21:48:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213433,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-04T15:28:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 54027,
    "subject": "E2E Test - Sad Path: User can run Schema Checks",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211683,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212806,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-30T20:09:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN schema checks have been processed on a valid shape file\r\nAND GIVEN schema check exceptions exist on the valid shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer",
            "new_value": "GIVEN schema checks have been processed on a valid shape file\r\nAND GIVEN schema check exceptions exist on the valid shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 212977,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T18:31:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212984,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T19:22:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 212988,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T20:32:18Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "E2E Test: User can download a Schema Check CSV",
            "new_value": "E2E Test - Sad Path: User can run Schema Checks"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN schema checks have been processed on a valid shape file\r\nAND GIVEN schema check exceptions exist on the valid shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 212989,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T20:36:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the results for that exception shows in the results content area\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nAND GIVEN user clicks on an exception from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 212995,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T20:57:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the results for that exception shows in the results content area\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nAND GIVEN user clicks on an exception from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\n\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the results for that exception shows in the results content area\r\n\r\nAND GIVEN user clicks on an exception from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context."
          }
        ]
      },
      {
        "id": 213057,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-02-03T14:47:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213148,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-02-03T17:01:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\n\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the results for that exception shows in the results content area\r\n\r\nAND GIVEN user clicks on an exception from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.",
            "new_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\n\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the results for that exception shows in the results content area\r\n\r\nAND GIVEN user clicks on an exception from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.\r\n\r\n*Note:* The E2E tests cannot test whether the CSV is downloaded properly in the browser. This is currently covered by the integration Cypress tests, which mock that function."
          }
        ]
      },
      {
        "id": 213338,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-02-03T21:09:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\n\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the results for that exception shows in the results content area\r\n\r\nAND GIVEN user clicks on an exception from the left nav under the summary item\r\nWHEN user clicks on summary item in the left nav\r\nTHEN the results area shows the summary\r\n\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.\r\n\r\n*Note:* The E2E tests cannot test whether the CSV is downloaded properly in the browser. This is currently covered by the integration Cypress tests, which mock that function.",
            "new_value": "GIVEN user has a shape file with exceptions and conditions in a .zip archive\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled\r\nAND THEN \"Run Schema Check\" is clicked to upload the file\r\n\r\n\r\nGIVEN schema checks have been processed on a shape file\r\nAND GIVEN schema check exceptions exist on the shape file\r\n\r\nWHEN the screen initially displays\r\nTHEN the summary item is selected in the left nav of the results screen\r\nAND THEN the application url is \"/running-qac/schema-check-results\"\r\nAND THEN the summary of exceptions displays in the results content area\r\nAND THEN the \"Schema Check CSV\" button exists in the summary header\r\nAND THEN the \"Run KERs\" button exists in the summary header\r\n\r\nWHEN user clicks on an exception from the left nav under the summary item\r\nTHEN the summary item is no longer selected in the left nav\r\nAND THEN that exception is selected in the left nav\r\nAND THEN the results for that exception shows in the results content area\r\n\r\nWHEN user clicks back on the summary item in the left nav\r\nTHEN the exception is no longer selected\r\nAND THEN the summary item is selected in the left nav\r\nAND THEN the results area shows the summary\r\n\r\nWHEN user clicks the \"Schema Check CSV\" button\r\nTHEN a .csv file containing the schema check exceptions is generated and downloads to the user's computer\r\n\r\n*Note:* E2E tests are all saved in the cypress/e2e test folder. They do not run on Jenkins. See https://gitlab.gs.mil/sfd/qac_fullstaq/merge_requests/161 for additional context.\r\n\r\n*Note:* The E2E tests cannot test whether the CSV is downloaded properly in the browser. This is currently covered by the integration Cypress tests, which mock that function."
          }
        ]
      },
      {
        "id": 213372,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-02-03T21:48:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213434,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-04T15:28:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 54026,
    "subject": "E2E Test: User can run schema checks on valid shape file",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211665,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-27T15:37:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has selected a valid shape file from their machine\r\nWHEN user clicks the \"Run Schema Check\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the schema checks are complete\r\nTHEN the application URL should be /running-qac/schema-check-results\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC side navigation should indicate \"Schema Check Results Summary\" is currently active\r\nAND THEN the \"Schema Result Summary\" should display\r\n",
            "new_value": "GIVEN user has selected a valid shape file from their machine\r\nWHEN user clicks the \"Run Schema Check\" button\r\nTHEN a loading screen appears while the file is being processed\r\n\r\nAND WHEN the schema checks are complete\r\nTHEN the application URL should be \"/running-qac/schema-check-results\"\r\nAND THEN the active navigation tab should be \"Running QAC\"\r\nAND THEN the QAC stepper should indicate that \"Schema Check Results\" is the currently active step\r\nAND THEN the QAC stepper should indicate that \"Upload File\" is a completed step and provide a link to \"/\"\r\nAND THEN the QAC side navigation should indicate \"Schema Check Results Summary\" is currently active\r\nAND THEN the \"Schema Result Summary\" should display\r\n"
          }
        ]
      },
      {
        "id": 211682,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212175,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-28T19:44:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212972,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T18:29:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213531,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-04T19:23:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 54023,
    "subject": "E2E Test: User can upload a shapefile to QAC",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211658,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-27T15:13:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has a valid shapefile in a .zip archive (valid_shapefile.zip)\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled",
            "new_value": "GIVEN user has a valid shapefile in a .zip archive (valid_shapefile.zip)\r\nAND GIVEN the application URL is \"/\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled"
          }
        ]
      },
      {
        "id": 211662,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-27T15:15:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN user has a valid shapefile in a .zip archive (valid_shapefile.zip)\r\nAND GIVEN the application URL is \"/\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled",
            "new_value": "GIVEN user has a valid shapefile in a .zip archive (valid_shapefile.zip)\r\nAND GIVEN the application URL is \"/\"\r\nAND GIVEN the active navigation tab is \"Start QAC\"\r\nWHEN user clicks the file input / \"Choose File\" button and opens a file on their machine\r\nTHEN the name of the file is displayed in the file input label\r\nAND THEN the \"Run Schema Check\" button is no longer disabled"
          }
        ]
      },
      {
        "id": 211681,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 211923,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-28T16:18:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212973,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T18:29:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213530,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-04T19:23:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53944,
    "subject": "Intermittent Auth Test Failure ",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 211321,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-24T16:14:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3825"
          }
        ]
      },
      {
        "id": 211327,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-24T16:50:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211898,
        "user": {
          "id": 4026,
          "name": "Hoekzema.James.1586806579"
        },
        "notes": "",
        "created_on": "2020-01-28T15:13:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213330,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-03T21:03:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53925,
    "subject": "[TECH DEBT] Fix OBJECTWITHOUT SQL",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 211223,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-23T19:47:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 211224,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-01-23T19:55:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Fix OBJECTWITHOUT SQL to no longer combine by intersection in python code",
            "new_value": "Fix OBJECTWITHOUT SQL to no longer combine by intersection in python code.\r\n\r\nAS A QAC developer\r\nI WANT to be able to run OBJECTWITHOUT KERs without having to combine conditions by intersection\r\nSO THAT that all legacy combination code can be removed from the application and KerWrapper is simplified\r\n\r\n\r\n*Notes:*\r\nShould take advantage of the 'union' method to merge features on layer two.\r\n"
          }
        ]
      },
      {
        "id": 213086,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T15:11:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 213151,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-03T17:11:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53743,
    "subject": "Update GDAL",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 211060,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-22T14:31:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 211680,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211691,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T16:26:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213231,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:53:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 213909,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-06T19:46:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "The request for GDAL 2.4.3 was disapproved by the SWAP team, due to CVE 2019-17545: https://nvd.nist.gov/vuln/detail/CVE-2019-17545. It looks like all versions up to 3.0.1 are affected. They recommended requesting 3.0.3",
            "new_value": "The request for GDAL 2.4.3 was disapproved by the SWAP team, due to CVE 2019-17545: https://nvd.nist.gov/vuln/detail/CVE-2019-17545. It looks like all versions up to 3.0.1 are affected. They recommended requesting 3.0.3\r\n\r\n\r\nh2. Steps to Take\r\nh3. 1. Update gdal in local dev env\r\n- get new image for qacbackend/base\r\n- install gdal >= 3.0.3 locally\r\n- update codebase as needed for new version of library\r\n- ensure app still works\r\nh3. 2. Update gdal for PCF\r\n- once #1 is finished, update environment.yml for gdal >= 3.0.3\r\n- deploy via feature branch and make sure that the app still works\r\n\r\n\r\nqacbackend/base on dockerhub: https://hub.docker.com/r/qacbackend/base/tags\r\nlib gdal matching python gdal: https://stackoverflow.com/a/31618858/1113872\r\nconda's environment.yml: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-file-manually"
          }
        ]
      },
      {
        "id": 213912,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-06T19:51:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "The request for GDAL 2.4.3 was disapproved by the SWAP team, due to CVE 2019-17545: https://nvd.nist.gov/vuln/detail/CVE-2019-17545. It looks like all versions up to 3.0.1 are affected. They recommended requesting 3.0.3\r\n\r\n\r\nh2. Steps to Take\r\nh3. 1. Update gdal in local dev env\r\n- get new image for qacbackend/base\r\n- install gdal >= 3.0.3 locally\r\n- update codebase as needed for new version of library\r\n- ensure app still works\r\nh3. 2. Update gdal for PCF\r\n- once #1 is finished, update environment.yml for gdal >= 3.0.3\r\n- deploy via feature branch and make sure that the app still works\r\n\r\n\r\nqacbackend/base on dockerhub: https://hub.docker.com/r/qacbackend/base/tags\r\nlib gdal matching python gdal: https://stackoverflow.com/a/31618858/1113872\r\nconda's environment.yml: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-file-manually",
            "new_value": "The request for GDAL 2.4.3 was disapproved by the SWAP team, due to CVE 2019-17545: https://nvd.nist.gov/vuln/detail/CVE-2019-17545. It looks like all versions up to 3.0.1 are affected. They recommended requesting 3.0.3\r\n\r\n\r\nh2. Steps to Take\r\n\r\nh3. 1. Update gdal in local dev env\r\n\r\n* get new image for qacbackend/base (*how?*)\r\n* install gdal >= 3.0.3 in local dev env\r\n* update codebase as needed for new version of library\r\n* ensure app still works in local dev env\r\n\r\nh3. 2. Update gdal for PCF\r\n\r\n* once #1 is finished, update environment.yml for gdal >= 3.0.3\r\n* deploy via feature branch and make sure that the app still works\r\n\r\n\r\n*Resources*\r\nlib gdal matching python gdal: https://stackoverflow.com/a/31618858/1113872\r\nqacbackend/base on dockerhub: https://hub.docker.com/r/qacbackend/base/tags\r\nconda's environment.yml: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-file-manually"
          }
        ]
      },
      {
        "id": 213913,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-06T19:52:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "The request for GDAL 2.4.3 was disapproved by the SWAP team, due to CVE 2019-17545: https://nvd.nist.gov/vuln/detail/CVE-2019-17545. It looks like all versions up to 3.0.1 are affected. They recommended requesting 3.0.3\r\n\r\n\r\nh2. Steps to Take\r\n\r\nh3. 1. Update gdal in local dev env\r\n\r\n* get new image for qacbackend/base (*how?*)\r\n* install gdal >= 3.0.3 in local dev env\r\n* update codebase as needed for new version of library\r\n* ensure app still works in local dev env\r\n\r\nh3. 2. Update gdal for PCF\r\n\r\n* once #1 is finished, update environment.yml for gdal >= 3.0.3\r\n* deploy via feature branch and make sure that the app still works\r\n\r\n\r\n*Resources*\r\nlib gdal matching python gdal: https://stackoverflow.com/a/31618858/1113872\r\nqacbackend/base on dockerhub: https://hub.docker.com/r/qacbackend/base/tags\r\nconda's environment.yml: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-file-manually",
            "new_value": "The request for GDAL 2.4.3 was disapproved by the SWAP team, due to CVE 2019-17545: https://nvd.nist.gov/vuln/detail/CVE-2019-17545. It looks like all versions up to 3.0.1 are affected. They recommended requesting 3.0.3\r\n\r\n\r\nh2. Steps to Take\r\n\r\nh3. 1. Update gdal in local dev env\r\n\r\n* get new image for qacbackend/base (*how?*) that has lib gdal >= 3.x. lib gdal must match python gdal at the major version.\r\n* install gdal >= 3.0.3 in local dev env\r\n* update codebase as needed for new version of library\r\n* ensure app still works in local dev env\r\n\r\nh3. 2. Update gdal for PCF\r\n\r\n* once #1 is finished, update environment.yml for gdal >= 3.0.3\r\n* deploy via feature branch and make sure that the app still works\r\n\r\n\r\n*Resources*\r\nlib gdal matching python gdal: https://stackoverflow.com/a/31618858/1113872\r\nqacbackend/base on dockerhub: https://hub.docker.com/r/qacbackend/base/tags\r\nconda's environment.yml: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#create-env-file-manually"
          }
        ]
      }
    ]
  },
  {
    "id": 53720,
    "subject": "Schema Check Summary: Passed Toggle & Widget",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 211059,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-22T14:31:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 211912,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-28T16:07:44Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER Summary: Passed KERs Toggle",
            "new_value": "Schema Check Summary: Passed Toggle & Widget"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I have KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can see a toggle to view KERs with no conditions\r\n\r\nGiven I am on the KER Summary\r\nWhen I selected PASSED\r\nThen I can view a list of KERs with no conditions",
            "new_value": "Given I have a file to run\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can see a toggle to view Schema Checks with no exceptions\r\n\r\nGiven I am on the Schema Check Summary\r\nWhen I select PASSED\r\nThen I can view a list of Schema Checks with no exceptions in a widget\r\n\r\n"
          }
        ]
      },
      {
        "id": 212024,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-28T18:29:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I have a file to run\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can see a toggle to view Schema Checks with no exceptions\r\n\r\nGiven I am on the Schema Check Summary\r\nWhen I select PASSED\r\nThen I can view a list of Schema Checks with no exceptions in a widget\r\n\r\n",
            "new_value": "Given I have a file to run\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can see a toggle to view Schema Checks with no exceptions\r\n\r\nGiven I am on the Schema Check Summary\r\nWhen I select PASSED\r\nThen I can view a list of Schema Checks with no exceptions in a widget\r\n\r\n*Design Link*\r\nhttps://sketch.cloud/s/ZRP53/a/KzlGJ2\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 53718,
    "subject": "KER Summary: Pie Chart",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 210989,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-21T21:01:21Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 211005,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-21T22:45:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I have KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I see a pie chart of the conditions broken down by KER category\r\nAnd I see the total number of conditions above the chart\r\n\r\n",
            "new_value": "Given I have KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I see a pie chart of the conditions broken down by KER category\r\nAnd I see the total number of conditions above the chart\r\n\r\nNote: AnySameID needs to be grouped using the groupBy method for the total number of conditions.\r\n\r\n"
          }
        ]
      },
      {
        "id": 211058,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-22T14:31:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 211899,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-28T15:14:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I have KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I see a pie chart of the conditions broken down by KER category\r\nAnd I see the total number of conditions above the chart\r\n\r\nNote: AnySameID needs to be grouped using the groupBy method for the total number of conditions.\r\n\r\n",
            "new_value": "Given I have KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I see a pie chart of the conditions broken down by KER category\r\nAnd I see the total number of conditions above the chart\r\n\r\n*Note:* AnySameID needs to be grouped using the groupBy method for the total number of conditions.\r\n\r\n*Design Links*\r\n* https://sketch.cloud/s/OYjqG/a/rn0L0D \r\n* https://zpl.io/aR7EKkg \r\n\r\n*Possible React Chart Libraries:*\r\n* http://recharts.org/en-US/examples/TwoSimplePieChart \r\n* https://nivo.rocks/pie\r\n\r\nSee Schema Check chart story https://redmine.gs.mil/issues/54138\r\n\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 53716,
    "subject": "KER Summary: KERs Not Selected Widget",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 210984,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-21T20:52:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "Given I have selected specific KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can view a list of KERs that were not selected to run"
          }
        ]
      },
      {
        "id": 211057,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-22T14:31:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212692,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-29T20:16:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I have selected specific KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can view a list of KERs that were not selected to run",
            "new_value": "Given I have selected specific KERs to process\r\nWhen the run is complete\r\nAnd I view the summary\r\nThen I can view a list of KERs that were not selected to run\r\n\r\nDependent on #53134"
          }
        ]
      }
    ]
  },
  {
    "id": 53715,
    "subject": "Keyboard Navigation To Disabled Elements",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 211056,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-22T14:31:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53704,
    "subject": "Update frontend to long poll on job status and then send user to results",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 210830,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:14:16Z",
        "details": [
          {
            "property": "attachment",
            "name": "5449",
            "new_value": "Architecture stories for KER team.docx"
          }
        ]
      }
    ]
  },
  {
    "id": 53702,
    "subject": "Setup Database to hold job status (Architecture story)",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 210816,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:06:44Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "53696"
          }
        ]
      },
      {
        "id": 210823,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:12:20Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 210829,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:13:59Z",
        "details": [
          {
            "property": "attachment",
            "name": "5448",
            "new_value": "Architecture stories for KER team.docx"
          }
        ]
      },
      {
        "id": 212595,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T19:10:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53699,
    "subject": "Create an entity to process KERs: Modify current API to process all KERs",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 210822,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:12:09Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 210828,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:13:42Z",
        "details": [
          {
            "property": "attachment",
            "name": "5447",
            "new_value": "Architecture stories for KER team.docx"
          }
        ]
      },
      {
        "id": 212594,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T19:09:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53698,
    "subject": "Create an entity to process KERs: Create a queue listener",
    "category": "Web App team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 210813,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:01:34Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "53696"
          }
        ]
      },
      {
        "id": 210821,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:11:53Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 210827,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:13:24Z",
        "details": [
          {
            "property": "attachment",
            "name": "5446",
            "new_value": "Architecture stories for KER team.docx"
          }
        ]
      },
      {
        "id": 212593,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T19:09:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213677,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-02-05T14:53:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213678,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-02-05T14:53:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      }
    ]
  },
  {
    "id": 53697,
    "subject": "Implement queuing service based on SPIKE 53696",
    "category": "Web App team",
    "status": "In Progress",
    "journals": [
      {
        "id": 210820,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:11:40Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 210826,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:13:10Z",
        "details": [
          {
            "property": "attachment",
            "name": "5445",
            "new_value": "Architecture stories for KER team.docx"
          }
        ]
      },
      {
        "id": 212591,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-29T19:09:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213424,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-02-04T14:59:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      }
    ]
  },
  {
    "id": 53696,
    "subject": "SPIKE: Decide which queuing service to use",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 210819,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:11:29Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 210825,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T19:12:55Z",
        "details": [
          {
            "property": "attachment",
            "name": "5444",
            "new_value": "Architecture stories for KER team.docx"
          }
        ]
      },
      {
        "id": 211097,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-22T18:40:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3850"
          }
        ]
      },
      {
        "id": 211098,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-22T18:40:40Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE; Decide which queuing service to use",
            "new_value": "SPIKE: Decide which queuing service to use"
          }
        ]
      },
      {
        "id": 211156,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-23T17:34:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212990,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-31T20:37:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Decide which queuing service to use\r\ni.\tRabbit MQ (Celery)\r\n     1.\tA lot of setup, but work\r\n     2.\tDeploy to PCF\r\n             a.1.\tSetup separate queuing service\tCan deploy locally through CF CLI (may need NGA credentials). \r\n     3.\tGet docker running on local instance of the app\r\nii.\tRedis Q [RQ]\r\n     1.\tOut of the box setup\r\n     2.\tDeploy to PCF\r\n             a.\tCan deploy locally through CF CLI (may need NGA credentials). \r\n     3.\tGet docker running on local instance of the app\r\n\r\n",
            "new_value": "Decide which queuing service to use\r\ni.\tRabbit MQ (Celery)\r\n     1.\tA lot of setup, but work\r\n     2.\tDeploy to PCF\r\n             a.1.\tSetup separate queuing service\tCan deploy locally through CF CLI (may need NGA credentials). \r\n     3.\tGet docker running on local instance of the app\r\nii.\tRedis Q [RQ]\r\n     1.\tOut of the box setup\r\n     2.\tDeploy to PCF\r\n             a.\tCan deploy locally through CF CLI (may need NGA credentials). \r\n     3.\tGet docker running on local instance of the app\r\n\r\nNotes:\r\n - Celery with RabbitMQ deployment to PCF was successful but with many unknowns requesting job status and result storage\r\n - RQ with Redis was not successful as the uri was not available to the app to route RQ to the redis storage and messaging\r\n - PCF requires an app for PCF to ping for Heart beats, running the task only is not sufficient"
          }
        ]
      },
      {
        "id": 213532,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-04T19:24:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53692,
    "subject": "Update Logging",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 210805,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-21T18:31:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "File: <code>/backend/src/logger/formatted_logger.py</code>\r\nClass: <code>ICSFormatter</code>\r\n \r\nReplace the <code>'\\n'</code> characters with a <code>' '</code> (space). This will allow the message to be on one line which will keep output together; as the below shows output from our logger and others streamed together. \r\n\r\n\r\nLogs on PCF are output through STDERR and should be using STDIN.\r\n\r\nBelow if from PCF:\r\n\r\n<pre><code class=\"text\">\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] message: Created Database Schema\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] outcome: success,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] object: <FileStorage: 'awithouta_2019-12-06.zip' ('application/x-zip-compressed')>,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] actor: eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vYWVyby51YWEuc3lzdGVtLmRldi5lYXN0LnBhYXMubmdhLm1pbC90b2tlbl9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiIzZTVmZDEyNTFjNmY0NzNiOTQwNmQ3ZTVkMDcyMTNlYiIsInN1YiI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsInNjb3BlIjpbIm9wZW5pZCJdLCJjbGllbnRfaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJjaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJhenAiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJncmFudF90eXBlIjoiYXV0aG9yaXphdGlvbl9jb2RlIiwidXNlcl9pZCI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsIm9yaWdpbiI6Imdlb2F4aXMiLCJ1c2VyX25hbWUiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiZW1haWwiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiYXV0aF90aW1lIjoxNTc5NjIxNDQwLCJyZXZfc2lnIjoiYWZiMWEyMyIsImlhdCI6MTU3OTYyMTQ0MSwiZXhwIjoxNTc5NjI1MDQxLCJpc3MiOiJodHRwczovL2Flcm8udWFhLnN5c3RlbS5kZXYuZWFzdC5wYWFzLm5nYS5taWwvb2F1dGgvdG9rZW4iLCJ6aWQiOiJiMWNkNjA0Yi04MmJjLTQwYzAtOGZkNy02NDUyNzlhNzc5NzIiLCJhdWQiOlsib3BlbmlkIiwiNTVhY2FjYTgtOTNkNS00OWY0LTk4MGQtNjgyOWRiODVlYzcwIl19.Ej0MKRDRJEXM0s1WAklWmzPo9aD32glaZ5gxWvLhBqCrPHWvQO4lWa_nmCpkcCyv5hwWn6zSTCF80U8thsZ1WUzx4RE0Jym4n5Am08D0acLqFD9D7zD0P5FZ7_c_54YkkBYuhJsZApUfKIJ_ZVw3cD4DE4F2ddVgGOwzbjYmNbmQl5VZ61Bx_k6cUoSOeQAwzc5MMTSicygNnNFK2T57xsG4p8Y5bJnUJxV4gFHrRq_aAY4V3WXK5NBEhf75Hze0SFE1I_pp9WdCKR3pWC1X8rXaK3r7XJ5WRJvpKe08155zCMA8WpFs5t1rORvjb7tUtWJdnoBTy9Wcb9D0KwCUAQ,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] function: get_ker_response_json,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] source: 10.255.6.3,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] log_level: INFO,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] app_name: QAC_APP,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] date_time: 2020-01-21 15:44:30,974,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] InsecureRequestWarning)\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] /home/vcap/deps/0/conda/envs/dep_env/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:30] \"OPTIONS /kers HTTP/1.1\" 200 348 0.000793\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:28] \"POST /prechecks HTTP/1.1\" 200 1255 1.727451\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:26] \"OPTIONS /prechecks HTTP/1.1\" 200 348 0.000935\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:01] \"GET /auth/token?code=lhv9Et43Su&redirect_uri=https%3A%2F%2Fqac-development.dev.east.paas.nga.mil%2F HTTP/1.1\" 200 1525 0.181682\r\n2020-01-21T09:44:31.610-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n</code></pre>\r\n",
            "new_value": "File: <code>/backend/src/logger/formatted_logger.py</code>\r\nClass: <code>ICSFormatter</code>\r\n \r\n1. Replace the <code>'\\n'</code> characters with a <code>' '</code> (space). This will allow the message to be on one line which will keep output together; as the below shows output from our logger and others streamed together. \r\n\r\n2. Update the <code>actor</code> to remove the large unhelpful string of characters. \r\n\r\n3. Logs on PCF are output through STDERR and should be using STDIN.\r\n\r\nBelow if from PCF:\r\n\r\n<pre><code class=\"text\">\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] message: Created Database Schema\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] outcome: success,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] object: <FileStorage: 'awithouta_2019-12-06.zip' ('application/x-zip-compressed')>,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] actor: eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vYWVyby51YWEuc3lzdGVtLmRldi5lYXN0LnBhYXMubmdhLm1pbC90b2tlbl9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiIzZTVmZDEyNTFjNmY0NzNiOTQwNmQ3ZTVkMDcyMTNlYiIsInN1YiI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsInNjb3BlIjpbIm9wZW5pZCJdLCJjbGllbnRfaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJjaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJhenAiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJncmFudF90eXBlIjoiYXV0aG9yaXphdGlvbl9jb2RlIiwidXNlcl9pZCI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsIm9yaWdpbiI6Imdlb2F4aXMiLCJ1c2VyX25hbWUiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiZW1haWwiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiYXV0aF90aW1lIjoxNTc5NjIxNDQwLCJyZXZfc2lnIjoiYWZiMWEyMyIsImlhdCI6MTU3OTYyMTQ0MSwiZXhwIjoxNTc5NjI1MDQxLCJpc3MiOiJodHRwczovL2Flcm8udWFhLnN5c3RlbS5kZXYuZWFzdC5wYWFzLm5nYS5taWwvb2F1dGgvdG9rZW4iLCJ6aWQiOiJiMWNkNjA0Yi04MmJjLTQwYzAtOGZkNy02NDUyNzlhNzc5NzIiLCJhdWQiOlsib3BlbmlkIiwiNTVhY2FjYTgtOTNkNS00OWY0LTk4MGQtNjgyOWRiODVlYzcwIl19.Ej0MKRDRJEXM0s1WAklWmzPo9aD32glaZ5gxWvLhBqCrPHWvQO4lWa_nmCpkcCyv5hwWn6zSTCF80U8thsZ1WUzx4RE0Jym4n5Am08D0acLqFD9D7zD0P5FZ7_c_54YkkBYuhJsZApUfKIJ_ZVw3cD4DE4F2ddVgGOwzbjYmNbmQl5VZ61Bx_k6cUoSOeQAwzc5MMTSicygNnNFK2T57xsG4p8Y5bJnUJxV4gFHrRq_aAY4V3WXK5NBEhf75Hze0SFE1I_pp9WdCKR3pWC1X8rXaK3r7XJ5WRJvpKe08155zCMA8WpFs5t1rORvjb7tUtWJdnoBTy9Wcb9D0KwCUAQ,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] function: get_ker_response_json,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] source: 10.255.6.3,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] log_level: INFO,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] app_name: QAC_APP,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] date_time: 2020-01-21 15:44:30,974,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] InsecureRequestWarning)\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] /home/vcap/deps/0/conda/envs/dep_env/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:30] \"OPTIONS /kers HTTP/1.1\" 200 348 0.000793\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:28] \"POST /prechecks HTTP/1.1\" 200 1255 1.727451\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:26] \"OPTIONS /prechecks HTTP/1.1\" 200 348 0.000935\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:01] \"GET /auth/token?code=lhv9Et43Su&redirect_uri=https%3A%2F%2Fqac-development.dev.east.paas.nga.mil%2F HTTP/1.1\" 200 1525 0.181682\r\n2020-01-21T09:44:31.610-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n</code></pre>\r\n"
          }
        ]
      },
      {
        "id": 210806,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-21T18:31:22Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "File: <code>/backend/src/logger/formatted_logger.py</code>\r\nClass: <code>ICSFormatter</code>\r\n \r\n1. Replace the <code>'\\n'</code> characters with a <code>' '</code> (space). This will allow the message to be on one line which will keep output together; as the below shows output from our logger and others streamed together. \r\n\r\n2. Update the <code>actor</code> to remove the large unhelpful string of characters. \r\n\r\n3. Logs on PCF are output through STDERR and should be using STDIN.\r\n\r\nBelow if from PCF:\r\n\r\n<pre><code class=\"text\">\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] message: Created Database Schema\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] outcome: success,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] object: <FileStorage: 'awithouta_2019-12-06.zip' ('application/x-zip-compressed')>,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] actor: eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vYWVyby51YWEuc3lzdGVtLmRldi5lYXN0LnBhYXMubmdhLm1pbC90b2tlbl9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiIzZTVmZDEyNTFjNmY0NzNiOTQwNmQ3ZTVkMDcyMTNlYiIsInN1YiI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsInNjb3BlIjpbIm9wZW5pZCJdLCJjbGllbnRfaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJjaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJhenAiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJncmFudF90eXBlIjoiYXV0aG9yaXphdGlvbl9jb2RlIiwidXNlcl9pZCI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsIm9yaWdpbiI6Imdlb2F4aXMiLCJ1c2VyX25hbWUiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiZW1haWwiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiYXV0aF90aW1lIjoxNTc5NjIxNDQwLCJyZXZfc2lnIjoiYWZiMWEyMyIsImlhdCI6MTU3OTYyMTQ0MSwiZXhwIjoxNTc5NjI1MDQxLCJpc3MiOiJodHRwczovL2Flcm8udWFhLnN5c3RlbS5kZXYuZWFzdC5wYWFzLm5nYS5taWwvb2F1dGgvdG9rZW4iLCJ6aWQiOiJiMWNkNjA0Yi04MmJjLTQwYzAtOGZkNy02NDUyNzlhNzc5NzIiLCJhdWQiOlsib3BlbmlkIiwiNTVhY2FjYTgtOTNkNS00OWY0LTk4MGQtNjgyOWRiODVlYzcwIl19.Ej0MKRDRJEXM0s1WAklWmzPo9aD32glaZ5gxWvLhBqCrPHWvQO4lWa_nmCpkcCyv5hwWn6zSTCF80U8thsZ1WUzx4RE0Jym4n5Am08D0acLqFD9D7zD0P5FZ7_c_54YkkBYuhJsZApUfKIJ_ZVw3cD4DE4F2ddVgGOwzbjYmNbmQl5VZ61Bx_k6cUoSOeQAwzc5MMTSicygNnNFK2T57xsG4p8Y5bJnUJxV4gFHrRq_aAY4V3WXK5NBEhf75Hze0SFE1I_pp9WdCKR3pWC1X8rXaK3r7XJ5WRJvpKe08155zCMA8WpFs5t1rORvjb7tUtWJdnoBTy9Wcb9D0KwCUAQ,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] function: get_ker_response_json,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] source: 10.255.6.3,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] log_level: INFO,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] app_name: QAC_APP,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] date_time: 2020-01-21 15:44:30,974,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] InsecureRequestWarning)\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] /home/vcap/deps/0/conda/envs/dep_env/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:30] \"OPTIONS /kers HTTP/1.1\" 200 348 0.000793\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:28] \"POST /prechecks HTTP/1.1\" 200 1255 1.727451\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:26] \"OPTIONS /prechecks HTTP/1.1\" 200 348 0.000935\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:01] \"GET /auth/token?code=lhv9Et43Su&redirect_uri=https%3A%2F%2Fqac-development.dev.east.paas.nga.mil%2F HTTP/1.1\" 200 1525 0.181682\r\n2020-01-21T09:44:31.610-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n</code></pre>\r\n",
            "new_value": "File: <code>/backend/src/logger/formatted_logger.py</code>\r\nClass: <code>ICSFormatter</code>\r\n \r\n1. Replace the <code>'\\n'</code> characters with a <code>' '</code> (space). This will allow the message to be on one line which will keep output together; as the below shows output from our logger and others streamed together. \r\n\r\n2. Update the <code>actor</code> to remove the large unhelpful string of characters. \r\n\r\n3. Logs on PCF are output through STDERR and should be using STDIN.\r\n\r\nBelow is from PCF:\r\n\r\n<pre><code class=\"text\">\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] message: Created Database Schema\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] outcome: success,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] object: <FileStorage: 'awithouta_2019-12-06.zip' ('application/x-zip-compressed')>,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] actor: eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vYWVyby51YWEuc3lzdGVtLmRldi5lYXN0LnBhYXMubmdhLm1pbC90b2tlbl9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiIzZTVmZDEyNTFjNmY0NzNiOTQwNmQ3ZTVkMDcyMTNlYiIsInN1YiI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsInNjb3BlIjpbIm9wZW5pZCJdLCJjbGllbnRfaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJjaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJhenAiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJncmFudF90eXBlIjoiYXV0aG9yaXphdGlvbl9jb2RlIiwidXNlcl9pZCI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsIm9yaWdpbiI6Imdlb2F4aXMiLCJ1c2VyX25hbWUiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiZW1haWwiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiYXV0aF90aW1lIjoxNTc5NjIxNDQwLCJyZXZfc2lnIjoiYWZiMWEyMyIsImlhdCI6MTU3OTYyMTQ0MSwiZXhwIjoxNTc5NjI1MDQxLCJpc3MiOiJodHRwczovL2Flcm8udWFhLnN5c3RlbS5kZXYuZWFzdC5wYWFzLm5nYS5taWwvb2F1dGgvdG9rZW4iLCJ6aWQiOiJiMWNkNjA0Yi04MmJjLTQwYzAtOGZkNy02NDUyNzlhNzc5NzIiLCJhdWQiOlsib3BlbmlkIiwiNTVhY2FjYTgtOTNkNS00OWY0LTk4MGQtNjgyOWRiODVlYzcwIl19.Ej0MKRDRJEXM0s1WAklWmzPo9aD32glaZ5gxWvLhBqCrPHWvQO4lWa_nmCpkcCyv5hwWn6zSTCF80U8thsZ1WUzx4RE0Jym4n5Am08D0acLqFD9D7zD0P5FZ7_c_54YkkBYuhJsZApUfKIJ_ZVw3cD4DE4F2ddVgGOwzbjYmNbmQl5VZ61Bx_k6cUoSOeQAwzc5MMTSicygNnNFK2T57xsG4p8Y5bJnUJxV4gFHrRq_aAY4V3WXK5NBEhf75Hze0SFE1I_pp9WdCKR3pWC1X8rXaK3r7XJ5WRJvpKe08155zCMA8WpFs5t1rORvjb7tUtWJdnoBTy9Wcb9D0KwCUAQ,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] function: get_ker_response_json,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] source: 10.255.6.3,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] log_level: INFO,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] app_name: QAC_APP,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] date_time: 2020-01-21 15:44:30,974,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] InsecureRequestWarning)\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] /home/vcap/deps/0/conda/envs/dep_env/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:30] \"OPTIONS /kers HTTP/1.1\" 200 348 0.000793\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:28] \"POST /prechecks HTTP/1.1\" 200 1255 1.727451\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:26] \"OPTIONS /prechecks HTTP/1.1\" 200 348 0.000935\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:01] \"GET /auth/token?code=lhv9Et43Su&redirect_uri=https%3A%2F%2Fqac-development.dev.east.paas.nga.mil%2F HTTP/1.1\" 200 1525 0.181682\r\n2020-01-21T09:44:31.610-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n</code></pre>\r\n"
          }
        ]
      },
      {
        "id": 210808,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T18:33:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 210958,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-21T19:48:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "File: <code>/backend/src/logger/formatted_logger.py</code>\r\nClass: <code>ICSFormatter</code>\r\n \r\n1. Replace the <code>'\\n'</code> characters with a <code>' '</code> (space). This will allow the message to be on one line which will keep output together; as the below shows output from our logger and others streamed together. \r\n\r\n2. Update the <code>actor</code> to remove the large unhelpful string of characters. \r\n\r\n3. Logs on PCF are output through STDERR and should be using STDIN.\r\n\r\nBelow is from PCF:\r\n\r\n<pre><code class=\"text\">\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] message: Created Database Schema\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] outcome: success,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] object: <FileStorage: 'awithouta_2019-12-06.zip' ('application/x-zip-compressed')>,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] actor: eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vYWVyby51YWEuc3lzdGVtLmRldi5lYXN0LnBhYXMubmdhLm1pbC90b2tlbl9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiIzZTVmZDEyNTFjNmY0NzNiOTQwNmQ3ZTVkMDcyMTNlYiIsInN1YiI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsInNjb3BlIjpbIm9wZW5pZCJdLCJjbGllbnRfaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJjaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJhenAiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJncmFudF90eXBlIjoiYXV0aG9yaXphdGlvbl9jb2RlIiwidXNlcl9pZCI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsIm9yaWdpbiI6Imdlb2F4aXMiLCJ1c2VyX25hbWUiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiZW1haWwiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiYXV0aF90aW1lIjoxNTc5NjIxNDQwLCJyZXZfc2lnIjoiYWZiMWEyMyIsImlhdCI6MTU3OTYyMTQ0MSwiZXhwIjoxNTc5NjI1MDQxLCJpc3MiOiJodHRwczovL2Flcm8udWFhLnN5c3RlbS5kZXYuZWFzdC5wYWFzLm5nYS5taWwvb2F1dGgvdG9rZW4iLCJ6aWQiOiJiMWNkNjA0Yi04MmJjLTQwYzAtOGZkNy02NDUyNzlhNzc5NzIiLCJhdWQiOlsib3BlbmlkIiwiNTVhY2FjYTgtOTNkNS00OWY0LTk4MGQtNjgyOWRiODVlYzcwIl19.Ej0MKRDRJEXM0s1WAklWmzPo9aD32glaZ5gxWvLhBqCrPHWvQO4lWa_nmCpkcCyv5hwWn6zSTCF80U8thsZ1WUzx4RE0Jym4n5Am08D0acLqFD9D7zD0P5FZ7_c_54YkkBYuhJsZApUfKIJ_ZVw3cD4DE4F2ddVgGOwzbjYmNbmQl5VZ61Bx_k6cUoSOeQAwzc5MMTSicygNnNFK2T57xsG4p8Y5bJnUJxV4gFHrRq_aAY4V3WXK5NBEhf75Hze0SFE1I_pp9WdCKR3pWC1X8rXaK3r7XJ5WRJvpKe08155zCMA8WpFs5t1rORvjb7tUtWJdnoBTy9Wcb9D0KwCUAQ,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] function: get_ker_response_json,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] source: 10.255.6.3,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] log_level: INFO,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] app_name: QAC_APP,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] date_time: 2020-01-21 15:44:30,974,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] InsecureRequestWarning)\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] /home/vcap/deps/0/conda/envs/dep_env/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:30] \"OPTIONS /kers HTTP/1.1\" 200 348 0.000793\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:28] \"POST /prechecks HTTP/1.1\" 200 1255 1.727451\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:26] \"OPTIONS /prechecks HTTP/1.1\" 200 348 0.000935\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:01] \"GET /auth/token?code=lhv9Et43Su&redirect_uri=https%3A%2F%2Fqac-development.dev.east.paas.nga.mil%2F HTTP/1.1\" 200 1525 0.181682\r\n2020-01-21T09:44:31.610-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n</code></pre>\r\n",
            "new_value": "File: <code>/backend/src/logger/formatted_logger.py</code>\r\nClass: <code>ICSFormatter</code>\r\n \r\n1. Replace the <code>'\\n'</code> characters with a <code>' '</code> (space). This will allow the message to be on one line which will keep output together; as the below shows output from our logger and others streamed together. \r\n\r\n2. Update the <code>actor</code> to remove the large unhelpful string of characters. \r\n\r\n3. Logs on PCF are output through STDERR and should be using STDOUT.\r\n\r\nBelow is from PCF:\r\n\r\n<pre><code class=\"text\">\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] message: Created Database Schema\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] outcome: success,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] object: <FileStorage: 'awithouta_2019-12-06.zip' ('application/x-zip-compressed')>,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] actor: eyJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vYWVyby51YWEuc3lzdGVtLmRldi5lYXN0LnBhYXMubmdhLm1pbC90b2tlbl9rZXlzIiwia2lkIjoia2V5LTEiLCJ0eXAiOiJKV1QifQ.eyJqdGkiOiIzZTVmZDEyNTFjNmY0NzNiOTQwNmQ3ZTVkMDcyMTNlYiIsInN1YiI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsInNjb3BlIjpbIm9wZW5pZCJdLCJjbGllbnRfaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJjaWQiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJhenAiOiI1NWFjYWNhOC05M2Q1LTQ5ZjQtOTgwZC02ODI5ZGI4NWVjNzAiLCJncmFudF90eXBlIjoiYXV0aG9yaXphdGlvbl9jb2RlIiwidXNlcl9pZCI6IjU0MzlkMDI1LTVhNDktNDFjNS05NDE2LTZlNDcwZmZmNzc2NiIsIm9yaWdpbiI6Imdlb2F4aXMiLCJ1c2VyX25hbWUiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiZW1haWwiOiJKZWZmcmV5LkEuTWF5b0BuZ2EubWlsIiwiYXV0aF90aW1lIjoxNTc5NjIxNDQwLCJyZXZfc2lnIjoiYWZiMWEyMyIsImlhdCI6MTU3OTYyMTQ0MSwiZXhwIjoxNTc5NjI1MDQxLCJpc3MiOiJodHRwczovL2Flcm8udWFhLnN5c3RlbS5kZXYuZWFzdC5wYWFzLm5nYS5taWwvb2F1dGgvdG9rZW4iLCJ6aWQiOiJiMWNkNjA0Yi04MmJjLTQwYzAtOGZkNy02NDUyNzlhNzc5NzIiLCJhdWQiOlsib3BlbmlkIiwiNTVhY2FjYTgtOTNkNS00OWY0LTk4MGQtNjgyOWRiODVlYzcwIl19.Ej0MKRDRJEXM0s1WAklWmzPo9aD32glaZ5gxWvLhBqCrPHWvQO4lWa_nmCpkcCyv5hwWn6zSTCF80U8thsZ1WUzx4RE0Jym4n5Am08D0acLqFD9D7zD0P5FZ7_c_54YkkBYuhJsZApUfKIJ_ZVw3cD4DE4F2ddVgGOwzbjYmNbmQl5VZ61Bx_k6cUoSOeQAwzc5MMTSicygNnNFK2T57xsG4p8Y5bJnUJxV4gFHrRq_aAY4V3WXK5NBEhf75Hze0SFE1I_pp9WdCKR3pWC1X8rXaK3r7XJ5WRJvpKe08155zCMA8WpFs5t1rORvjb7tUtWJdnoBTy9Wcb9D0KwCUAQ,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] function: get_ker_response_json,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] source: 10.255.6.3,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] log_level: INFO,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] app_name: QAC_APP,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] date_time: 2020-01-21 15:44:30,974,\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] InsecureRequestWarning)\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] /home/vcap/deps/0/conda/envs/dep_env/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:30] \"OPTIONS /kers HTTP/1.1\" 200 348 0.000793\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:28] \"POST /prechecks HTTP/1.1\" 200 1255 1.727451\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:26] \"OPTIONS /prechecks HTTP/1.1\" 200 348 0.000935\r\n2020-01-21T09:44:30.974-06:00 [APP/PROC/WEB/0] [ERR] 10.255.6.3 - - [2020-01-21 15:44:01] \"GET /auth/token?code=lhv9Et43Su&redirect_uri=https%3A%2F%2Fqac-development.dev.east.paas.nga.mil%2F HTTP/1.1\" 200 1525 0.181682\r\n2020-01-21T09:44:31.610-06:00 [APP/PROC/WEB/0] [ERR] ---\r\n</code></pre>\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 53542,
    "subject": "[TECH DEBT] Change KERs that use combine by intersection to use union variable",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 210127,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-15T19:10:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53522,
    "subject": "Update psycopg2-binary to version 2.8.4",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 210521,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2020-01-17T15:18:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Needs acceptance criteria: updating psycopg2-binary to version 2.8.4",
            "new_value": "Update psycopg2-binary to version 2.8.4"
          }
        ]
      },
      {
        "id": 210527,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2020-01-17T15:33:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211267,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-01-24T12:44:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53433,
    "subject": "Move ANOCOVERA KER into DB",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 211092,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-22T17:22:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211291,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-24T14:58:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211345,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-24T17:17:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211661,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-27T15:14:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53432,
    "subject": "Move ANY_SAMEID KER into DB",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 211072,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-22T15:43:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211290,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-24T14:58:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211346,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-24T17:17:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211659,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-27T15:14:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53356,
    "subject": "Correctly check auth token on initial load",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 209350,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T21:11:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 209445,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-10T16:52:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Currently the auth check returns 401 every time the page is refreshed. \r\n\r\nThis is because the current check on the backend expects the token to come in as a query parameter while the frontend is sending a request with an authorization header.\r\n\r\nNote:\r\nWould prefer to keep the authorization token in the header and not be a query parameter.",
            "new_value": "GIVEN I have valid token available\r\nWHEN the token is passed in an XHR request to the server\r\nTHEN the server returns a 200 status\r\n\r\nAcceptance Criteria: See checklist below"
          }
        ]
      },
      {
        "id": 210495,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-17T14:54:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 210871,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-21T19:19:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211159,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T17:39:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211220,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T19:31:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53347,
    "subject": "Dynamically build KER list with an end point",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 209256,
        "user": {
          "id": 3857,
          "name": "Olsen.Erik.1572615312"
        },
        "notes": "",
        "created_on": "2020-01-09T18:08:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Needs AC (Erik Olsen will update). ",
            "new_value": "Ensure that new KERs are displayed with the correct full name in the load table(table shown while running the KER checks).\r\n\r\nAC:\r\n\r\nGIVEN the KER checks are running\r\nWHEN the user views the loading table\r\nTHEN all existing KERS title and full name are displayed in the loading table\r\n\r\nGIVEN a new KER has been added to the database\r\nWHEN a KER is run\r\nTHEN the new KERs title and full name appear on the loading table\r\n\r\nGIVEN a KERS title or full name is changed in the database\r\nWHEN a KER is run\r\nTHEN the changed KERs title and full name display correctly on the loading table\r\n\r\nFOR PO APPROVAL:\r\n-This is a tech debt card so the only AC to be verified is that the loading table displays as normal since the implementation\tof how that table data is generated will have been changed\r\n\r\n\r\nAdditional information:\r\n\r\nCurrently the Ker list for the loading table is stored in the the /frontend/src/const/kersList.js. We would like to not have to manually update this list whenever a change is made to a KER title or full name. We would also like to not have to manually update this list whenever a KER is added. Based on the discussion in planning on 1/09 the implementation suggestion was to create an endpoint that fetches that necessary information from the database and returns it as a JSON object to be used in the LoadingTable component essentially replacing the hardcoded values in the kersList.js.\r\n\r\n"
          }
        ]
      },
      {
        "id": 209258,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T18:18:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 209259,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T18:20:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 209681,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-14T19:10:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 210798,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-21T17:04:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211160,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T17:39:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211219,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T19:31:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 53338,
    "subject": "[Security] Add URL validation logic to config.js",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 209208,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:25:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53279,
    "subject": "File name in QAC Header 'QACs' Dropdown",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 209212,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:26:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53278,
    "subject": "Sorting Side Navigation",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 209211,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:26:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213837,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2020-02-06T17:40:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user\r\nI want to be able to sort the side navigation\r\nso that I will be able to navigate easier\r\n\r\nGiven there is a side navigation\r\nWhen a user selects Sort\r\nThen they will be able to sort by: Condition Count (Asc and Desc), Sort Alphabetically (Asc and Desc).\r\nThen it will be fixed to the bottom of the side nav with a drop down button with toggling between sorting options.\r\n",
            "new_value": "As a user\r\nI want to be able to sort the side navigation\r\nso that I will be able to navigate easier\r\n\r\nGiven there is a side navigation\r\nWhen a user selects Sort\r\nThen they will be able to sort by: Condition Count (Asc and Desc), Sort Alphabetically (Asc and Desc).\r\nThen it will be fixed to the bottom of the side nav with a drop down button with toggling between sorting options.\r\n\r\nKer Sorting: https://zpl.io/awXzXPd\r\nSchema Sorting: https://zpl.io/aMNENeN"
          }
        ]
      }
    ]
  },
  {
    "id": 53277,
    "subject": "Filtering Side Navigation",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 209060,
        "user": {
          "id": 1510,
          "name": "Pilz.Chelsea.1400208421"
        },
        "notes": "",
        "created_on": "2020-01-08T16:35:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user\r\nI want to be able to filter side navigation results\r\nso that I can navigate them easier.\r\n\r\nGiven I have a side navigation\r\nWhen I select Filter\r\nThen I will be able to filter by: Duplication, Containment, Connectivity, Feature Size, Feature Composition, Undershoot or Overshoot, \"Kinks, Kickbacks, or Loops\", Overlap or Covering Relationships, Attribute Values",
            "new_value": "As a user\r\nI want to be able to filter side navigation results\r\nso that I can navigate them easier.\r\n\r\nGiven I have a side navigation\r\nWhen I select Filter\r\nThen I will be able to filter by: Duplication, Containment, Connectivity, Feature Size, Feature Composition, Undershoot or Overshoot, \"Kinks, Kickbacks, or Loops\", Overlap or Covering Relationships, Attribute Values\r\nThen it will be fixed to the bottom of the side nav functioning as a drawer"
          }
        ]
      },
      {
        "id": 209210,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:26:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213836,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2020-02-06T17:39:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user\r\nI want to be able to filter side navigation results\r\nso that I can navigate them easier.\r\n\r\nGiven I have a side navigation\r\nWhen I select Filter\r\nThen I will be able to filter by: Duplication, Containment, Connectivity, Feature Size, Feature Composition, Undershoot or Overshoot, \"Kinks, Kickbacks, or Loops\", Overlap or Covering Relationships, Attribute Values\r\nThen it will be fixed to the bottom of the side nav functioning as a drawer",
            "new_value": "As a user\r\nI want to be able to filter side navigation results\r\nso that I can navigate them easier.\r\n\r\nGiven I have a side navigation\r\nWhen I select Filter\r\nThen I will be able to filter by: Duplication, Containment, Connectivity, Feature Size, Feature Composition, Undershoot or Overshoot, \"Kinks, Kickbacks, or Loops\", Overlap or Covering Relationships, Attribute Values\r\nThen it will be fixed to the bottom of the side nav functioning as a drawer\r\n\r\nKER Filtering : https://zpl.io/a3O4OWQ\r\nSchema Filtering: https://zpl.io/2vkRelY"
          }
        ]
      }
    ]
  },
  {
    "id": 53275,
    "subject": "New Side Navigation",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 209209,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:25:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213835,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2020-02-06T17:39:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user\r\nI want a minimized side navigation \r\nso the space is utilized better.\r\n\r\nGiven a schema check or KER returns Conditions\r\nWhen those results are returned\r\nThen a functional side navigation exists for me to access details.",
            "new_value": "As a user\r\nI want a minimized side navigation \r\nso the space is utilized better.\r\n\r\nGiven a schema check or KER returns Conditions\r\nWhen those results are returned\r\nThen a functional side navigation exists for me to access details.\r\n\r\nKer Side nav Design collapsed: zpl.io/awXzXPd\r\nKer Side nav Design expanded: zpl.io/a3O4OWQ\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 53220,
    "subject": "[Tech Debt] Backend: Deprecate legacy KER code",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 208481,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-07T19:55:10Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "53141"
          }
        ]
      }
    ]
  },
  {
    "id": 53211,
    "subject": "display error message if user uploads polar data (outside UTM range)",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 208485,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T20:02:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 212685,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-29T20:10:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\n\r\n*AC*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range)",
            "new_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*AC*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range)"
          }
        ]
      },
      {
        "id": 212799,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T18:46:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*AC*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range)",
            "new_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*Acceptance Criteria*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range)\r\n* We need the language for the error message that will display\r\n* This is similar to prechecks (file check) which prevent the KERs from running. "
          }
        ]
      },
      {
        "id": 213797,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T13:35:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 213798,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T13:35:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213936,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T20:41:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*Acceptance Criteria*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range)\r\n* We need the language for the error message that will display\r\n* This is similar to prechecks (file check) which prevent the KERs from running. ",
            "new_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*Acceptance Criteria*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range - the outside range is 84 North and 80 South)\r\n* We need the language for the error message that will display\r\n* This is similar to prechecks (file check) which prevent the KERs from running. "
          }
        ]
      },
      {
        "id": 213937,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T20:43:09Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "display error message if user uploads polar data (outside UTM range) [depends on 53197]",
            "new_value": "display error message if user uploads polar data (outside UTM range)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*Acceptance Criteria*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range - the outside range is 84 North and 80 South)\r\n* We need the language for the error message that will display\r\n* This is similar to prechecks (file check) which prevent the KERs from running. ",
            "new_value": "As a user,\r\nI would like to receive a specific error message if I upload polar data (outside UTM range),\r\nso that I know why the QAC tool won't process my data.\r\n\r\nGiven I upload polar data (outside of UTM range),\r\nWhen I run the prechecks,\r\nThen I expect to see an error message telling me my data can't be processed because it's not within the UTM range.\r\n\r\nNote: This should look like the schema check errors that pop up on file upload (Try uploading the empty_directory.zip in QAC for an example)\r\n\r\n*Acceptance Criteria*\r\n* specific error message is displayed to the user if they upload polar data (outside of UTM range - the outside range is 84 North and 80 South)\r\n* We need the language for the error message that will display\r\n* This is similar to prechecks (file check) which prevent the KERs from running. \r\n\r\nNotes:\r\n* This does depend on converting the user's data to UTM because their data is outside is outside of the UTM zone. Talk to Kevin D. if you have questions."
          }
        ]
      }
    ]
  },
  {
    "id": 53210,
    "subject": "export shapefile data in proper projection [depends on 53197]",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 208474,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T19:45:08Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "convert shapefile export data back to WGS84 (depends on 53197)",
            "new_value": "convert shapefile export data back to WGS84 [depends on 53197]"
          }
        ]
      },
      {
        "id": 208484,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T20:02:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 208509,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T20:25:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to receive my shapefile export data in the WGS84 projection,\r\nso that I can easily compare my shapefile export data to my uploaded data.\r\n\r\nGiven I have shapefile data to export after a KER has been run,\r\nWhen I click download shapefile,\r\nThen I should receive shapefile data in the WGS84 projection.\r\n\r\n\r\n*AC*\r\n* Exported shapefile data is converted (\"back\") to WGS84 before being sent back to the user",
            "new_value": "As a user,\r\nI would like to receive my shapefile export data in the proper projection,\r\nso that I can easily compare my shapefile export data to my uploaded data.\r\n\r\nGiven I have shapefile data to export after a KER has been run,\r\nWhen I click download shapefile,\r\nThen I should receive shapefile data with the proper projection.\r\n\r\n\r\n*AC*\r\n* Shapefile data is exported with the proper projection\r\n\r\nImplementation details\r\n* SRID will be calculated as part of data ingest. We need to use this same SRID value when exporting the shapefile data."
          }
        ]
      },
      {
        "id": 208981,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-08T13:48:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 208987,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-08T14:58:58Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "convert shapefile export data back to WGS84 [depends on 53197]",
            "new_value": "export shapefile data in proper projection [depends on 53197]"
          }
        ]
      },
      {
        "id": 210037,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-15T15:37:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 53207,
    "subject": "remove PLLPROXFAIL inline UTM conversion [depends on 53197]",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 208473,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T19:44:49Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "remove PLLPROXFAIL UTM conversion (depends on 53197)",
            "new_value": "remove PLLPROXFAIL UTM conversion [depends on 53197]"
          }
        ]
      },
      {
        "id": 208475,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T19:45:44Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "remove PLLPROXFAIL UTM conversion [depends on 53197]",
            "new_value": "remove PLLPROXFAIL inline UTM conversion [depends on 53197]"
          }
        ]
      },
      {
        "id": 208477,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T19:47:53Z",
        "details": [
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "5",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 208483,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T20:02:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 53197,
    "subject": "convert to UTM as part of data ingest",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 208420,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T17:59:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\nSteps to Complete\r\n* include Python utm module in both requirements.txt and environment.yml\r\n* use the utm module to determine utm zone of the uploaded data\r\n    * MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n    * take the centerpoint of the 1x1 degree cell\r\n    * polar data (outside of UTM range) will be handled in another story, if needed\r\n* convert UTM zone to WKID/SRID\r\n    * [not sure exactly how to do this yet]\r\n* use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n* throw an error is data outside of UTM range is provided\r\n\r\n\r\nOther things (made be separate stories?)\r\n* revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n* regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n* Steps to Complete* for conversion to UTM\r\n* include Python utm module in both requirements.txt and environment.yml\r\n* use the utm module to determine utm zone of the uploaded data\r\n    * MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n    * take the centerpoint of the 1x1 degree cell\r\n    * polar data (outside of UTM range) will be handled in another story, if needed\r\n* convert UTM zone to WKID/SRID\r\n    * [not sure exactly how to do this yet]\r\n* use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n* throw an error if data outside of UTM range is uploaded\r\n\r\n\r\nMisc. (may be separate stories?)\r\n* revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n* regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208421,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:01:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n* Steps to Complete* for conversion to UTM\r\n* include Python utm module in both requirements.txt and environment.yml\r\n* use the utm module to determine utm zone of the uploaded data\r\n    * MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n    * take the centerpoint of the 1x1 degree cell\r\n    * polar data (outside of UTM range) will be handled in another story, if needed\r\n* convert UTM zone to WKID/SRID\r\n    * [not sure exactly how to do this yet]\r\n* use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n* throw an error if data outside of UTM range is uploaded\r\n\r\n\r\nMisc. (may be separate stories?)\r\n* revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n* regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n  * [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\nMisc. (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208422,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:03:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n  * [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\nMisc. (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n* [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\nMisc. (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208423,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:04:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n* [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\nMisc. (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n* [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208437,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:39:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n* [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601-32660\r\n* UTM South Zones are 32701-32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n* [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208457,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:45:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601-32660\r\n* UTM South Zones are 32701-32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- convert UTM zone to WKID/SRID\r\n* [not sure exactly how to do this yet]\r\n\r\n- use SRID when doing conversion from shapefiles to PostGIS tables\r\n    * see method insert_shapefile_into_database in shapefile_database_loader.py\r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601-32660\r\n* UTM South Zones are 32701-32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208458,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:56:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601-32660\r\n* UTM South Zones are 32701-32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208459,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T18:57:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n"
          }
        ]
      },
      {
        "id": 208463,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T19:14:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 208466,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T19:22:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n\r\n\r\n*Misc.* (may be separate stories?)\r\n- revisit PLLPROXFAIL KER (doesn't need to do inline conversion anymore)\r\n- regarding shapefile export, will data need to be converted back to WGS84?\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n* generic error is fine for now. will write another story to inform user of polar data uploaded\r\n"
          }
        ]
      },
      {
        "id": 208467,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T19:23:11Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "6",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 208519,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T20:51:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208983,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-08T14:52:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 208984,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-08T14:54:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n* generic error is fine for now. will write another story to inform user of polar data uploaded\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Note*\r\nWork has been started on this story. See branch 53197-convert-to-utm\r\nAlso, please ensure someone from NGA validates that the work done so far makes sense.\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n* generic error is fine for now. will write another story to inform user of polar data uploaded\r\n"
          }
        ]
      },
      {
        "id": 208985,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-08T14:54:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Note*\r\nWork has been started on this story. See branch 53197-convert-to-utm\r\nAlso, please ensure someone from NGA validates that the work done so far makes sense.\r\n\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n* generic error is fine for now. will write another story to inform user of polar data uploaded\r\n",
            "new_value": "*Tech Debt*\r\n\r\nAs a developer,\r\nI would like to start work on the UTM-related KERs.\r\n\r\nGiven I upload a set of data in WGS84,\r\nWhen the data is converted from shapefiles to PostGIS tables\r\nThen we automatically specify an SRID as part of that conversion process\r\n\r\n\r\n*Note*\r\n_Work has been started on this story. See branch 53197-convert-to-utm\r\nAlso, please ensure someone from NGA validates that the work done so far makes sense.\r\n_\r\n*Steps to Complete* for conversion to UTM\r\n\r\n- create a lookup table mapping UTM zone to WKID/SRID\r\n* see https://spatialreference.org/ref/epsg/32600\r\n* see https://developers.arcgis.com/rest/services-reference/projected-coordinate-systems.htm\r\n* UTM North Zones are 32601 - 32660\r\n* UTM South Zones are 32701 - 32760\r\n\r\n- include Python utm module in both requirements.txt and environment.yml\r\n- use the utm module to determine utm zone of the uploaded data\r\n* MGCP data should be in 1x1 degree cells and should fall within one UTM zone\r\n* take the centerpoint of the 1x1 degree cell\r\n* polar data (outside of UTM range) will be handled in another story, if needed\r\n\r\n- when creating layers and features, convert source layer spatial reference to UTM\r\n* see https://pcjericks.github.io/py-gdalogr-cookbook/projection.html for some examples\r\n* see method insert_shapefile_into_database in shapefile_database_loader.py\r\n* exact set of steps will need to be determined, but the link above should be pretty helpful\r\n    \r\n\r\n*Other*\r\n- throw an error if data outside of UTM range is uploaded\r\n* generic error is fine for now. will write another story to inform user of polar data uploaded\r\n"
          }
        ]
      },
      {
        "id": 209021,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2020-01-08T15:52:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 210038,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-15T15:38:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213241,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:55:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 213735,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-05T20:31:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213799,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T13:35:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 213938,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T20:43:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 53166,
    "subject": "[Tech Debt] Frontend: Add StyleLint",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 208233,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T20:52:36Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "[Tech Debt] Add StyleLint",
            "new_value": "[Tech Debt] Frontend: Add StyleLint"
          }
        ]
      },
      {
        "id": 208307,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T13:20:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 211908,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-28T15:52:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "There are a number of SonarQube findings for the .scss files. Instead of fixing them one by one and potentially re-introducing errors in the future, we can add StyleLint to the project to enforce standards. Maybe a turnaround or meeting to discuss the desired rules should happen.\r\n\r\nResources:\r\nUsage: https://stylelint.io/user-guide/cli\r\nExample @.stylelintrc@: https://stylelint.io/user-guide/example-config\r\n",
            "new_value": "There are a number of SonarQube findings for the .scss files. Instead of fixing them one by one and potentially re-introducing errors in the future, we can add StyleLint to the project to enforce standards. Maybe a turnaround or meeting to discuss the desired rules should happen.\r\n\r\nResources:\r\nUsage: https://stylelint.io/user-guide/cli\r\nExample @.stylelintrc@: https://stylelint.io/user-guide/example-config\r\n\r\n*Note:* Several of the SonarQube findings were coming from the uswds stylesheet which we can not change."
          }
        ]
      },
      {
        "id": 213234,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:53:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 53146,
    "subject": "[Tech Debt] Frontend: Refactor `Results/index.jsx`",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 208189,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:31:44Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "53141"
          }
        ]
      },
      {
        "id": 208306,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T13:20:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213235,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:53:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 53141,
    "subject": "[Tech Debt] Backend: Refactor `ker_wrapper.py`",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 208176,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:19:33Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "52409"
          }
        ]
      },
      {
        "id": 208178,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:19:49Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "[Tech Debt] Backend: Refactor `precheck_engine`",
            "new_value": "[Tech Debt] Backend: Refactor `ker_wrapper.py`"
          }
        ]
      },
      {
        "id": 208188,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:31:44Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "53146"
          }
        ]
      },
      {
        "id": 208193,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:32:25Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "52409"
          }
        ]
      },
      {
        "id": 208305,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T13:20:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 208480,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-07T19:55:10Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "53220"
          }
        ]
      },
      {
        "id": 213233,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:53:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 53134,
    "subject": "Select one or multiple KERs to run",
    "category": "Web App team",
    "status": "In Progress",
    "journals": [
      {
        "id": 208313,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T13:25:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213744,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-05T21:24:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213828,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-06T17:15:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Needs AC",
            "new_value": "*Design Links*\r\nhttps://sketch.cloud/s/Y8ylZ/a/Ojq9bm"
          }
        ]
      },
      {
        "id": 213880,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2020-02-06T19:00:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Design Links*\r\nhttps://sketch.cloud/s/Y8ylZ/a/Ojq9bm",
            "new_value": "*Zeplin Link First Vertical Slice Without User Profile*\r\nhttps://zpl.io/2pX86L8\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 53131,
    "subject": "Display Classification Banner based on Environment",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 208315,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T13:29:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213734,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-05T20:30:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213737,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-02-05T20:42:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 53059,
    "subject": "QAC Application loads at any URL route",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 207471,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-02T15:50:16Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 207472,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T15:51:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207476,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-02T16:00:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207775,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-02T21:29:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN a user has navigated to `{rootUrl}/abcdefg`\r\nWHEN the server handles the request to load the QAC app\r\nTHEN the QAC application loads in the appropriate state\r\n\r\n*Acceptance Criteria*\r\n- The QAC App loads at any url route\r\n- A NotFound component handles 404 errors derived from visits to urls that the application is not yet aware of\r\n- A NotFound component displays a title \"404 Not Found\"\r\n- A NotFound component displays the paragraph below the title \"The page you're looking for doesn't exist\"\r\n- A NotFound component displays a button styled link with a \"Go Home\" label that goes to the \"/\" route\r\n\r\n*NOTES*\r\n- Design/style example exists in the Support component",
            "new_value": "GIVEN a user has navigated to `{rootUrl}/abcdefg`\r\nWHEN the server handles the request to load the QAC app\r\nTHEN the QAC application loads in the appropriate state\r\n\r\n*Acceptance Criteria*\r\n- The QAC App loads at any url route\r\n- Update webpack configuration to handle 404 errors derived from visits to urls that the application is not yet aware of, and redirect them to see the NotFound Component.\r\n- A NotFound component displays a title \"404 Not Found\"\r\n- A NotFound component displays the paragraph below the title \"The page you're looking for doesn't exist\"\r\n- A NotFound component displays a button styled link with a \"Go Home\" label that goes to the \"/\" route\r\n\r\n*NOTES*\r\n- Design/style example exists in the Support component"
          }
        ]
      },
      {
        "id": 210592,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-17T17:03:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211157,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T17:38:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211221,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T19:31:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52952,
    "subject": "KER: FEATOUTSIDE Magnitude",
    "category": "KER team",
    "status": "In Progress",
    "journals": [
      {
        "id": 206788,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-19T23:55:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36330"
          }
        ]
      },
      {
        "id": 206905,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-20T15:12:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 209213,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:31:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213239,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:55:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 213483,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-04T16:40:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified of FEATOUTSIDE magnitude results\r\n\r\nAC #1:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal)\r\nAND the KER shall return previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal).\r\n\r\nNotes:\r\n\r\nThis is a placeholder story until we determine what information is needed for magnitude from the MGCP community.\r\n\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified of FEATOUTSIDE magnitude results\r\n\r\nAC #1:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal)\r\nAND the KER shall return previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal).\r\n\r\nNotes:\r\n\r\nThis is a placeholder story until we determine what information is needed for magnitude from the MGCP community.\r\n\r\nFEATOUTSIDE:\r\nPart.......Good.......Bad.....Total\r\n_________________________\r\n...1.........25........27........52\r\n_________________________\r\n.Sum.........25........27........52\r\n"
          }
        ]
      },
      {
        "id": 213485,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-04T16:42:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified of FEATOUTSIDE magnitude results\r\n\r\nAC #1:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal)\r\nAND the KER shall return previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal).\r\n\r\nNotes:\r\n\r\nThis is a placeholder story until we determine what information is needed for magnitude from the MGCP community.\r\n\r\nFEATOUTSIDE:\r\nPart.......Good.......Bad.....Total\r\n_________________________\r\n...1.........25........27........52\r\n_________________________\r\n.Sum.........25........27........52\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified of FEATOUTSIDE magnitude results\r\n\r\nAC #1:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal)\r\nAND the KER shall return previous data (UID, Feature Name, FCODE) and Magnitude (meters to the 6th decimal).\r\n\r\nNotes:\r\n\r\nThis is a placeholder story until we determine what information is needed for magnitude from the MGCP community.\r\n\r\nFEATOUTSIDE:\r\nPart.......Good.......Bad.....Total\r\n_________________________\r\n...1.........25........27........52\r\n_________________________\r\n.Sum.........25........27........52\r\n\r\n\r\n*From GAIT:* \r\n\r\n*Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE)*\r\n\r\nVertex of an area Soil Surface Region feature extends below the whole degree minimum coordinate of the project.\r\n\r\nThis inspection can be applied to identify any vertices of point, area or line features (described by the primary participant specification) that lie outside the whole-degree boundaries of the project. This inspection can be applied to either 2D or 3D features; however, the “outside” test is always applied as a 2D test. The inspection first calculates the whole-degree latitude parallels and longitude meridians that are closest to the maximum and minimum longitude and latitude coordinates of features included in the project. Then it compares the latitude and longitude coordinates of each feature vertex (described by the primary participant specification) to identify those that are (a) greater than the maximum parallel or meridian or (b) less than the minimum parallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nIn this example, GAIT has identified a case where a single vertex of a Soil Surface Region area feature (circled in red) is 3.8 m below the minimum whole-degree latitude parallel in the project.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align to whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The inspection may return unwanted results when applied to projects that are not designed to align with whole-degree lines of latitude and longitude.\r\n\r\n"
          }
        ]
      },
      {
        "id": 213809,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-06T15:01:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      }
    ]
  },
  {
    "id": 52947,
    "subject": "Investigate Corrupt DB Issue",
    "category": "KER team",
    "status": "New",
    "journals": [
      {
        "id": 206768,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-19T19:21:15Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "524",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 206769,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-19T19:24:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 207155,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-23T15:07:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207462,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-02T15:48:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Debt*\r\n\r\nRecently, on both dev and acceptance PCF environments, the database has become corrupt, rendering the app unusable. The purpose of this card is to investigate why this is happening, and perhaps try out alternative databases.\r\nQuestions to consider or answer\r\n# What is causing the database to become corrupted and how do we know when this happens?\r\n# What alternatives to CrunchDB do we have, and are they more reliable? Tim has mentioned an RDS service tile that may be able to serve as an alternative to the CrunchyDB tile.\r\n",
            "new_value": "*Tech Debt*\r\n\r\nRecently, on both dev and acceptance PCF environments, the database has become corrupt, rendering the app unusable. The purpose of this card is to investigate why this is happening, and perhaps try out alternative databases.\r\nQuestions to consider or answer\r\n# What is causing the database to become corrupted and how do we know when this happens?\r\n# What alternatives to CrunchDB do we have, and are they more reliable? Tim has mentioned an RDS service tile that may be able to serve as an alternative to the CrunchyDB tile.\r\n\r\nNotes:\r\n - Since the corrupt database occurs randomly, we were not able to investigate it thoroughly. The investigation should occur next time the database is corrupt, because the logs are available to troubleshoot from.\r\n - We do not recommend looking into alternative options until the database can be investigated."
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 207509,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:45:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 210743,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T14:17:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213242,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:56:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 52938,
    "subject": "[Tech Debt] Backend: Break up LOAD_KERS.sql",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 206770,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-19T19:25:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207156,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-23T15:07:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207233,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-30T13:25:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207313,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-30T21:06:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207769,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-01-02T20:20:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52915,
    "subject": "KER Results Table Updates",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 207234,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-30T13:28:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207365,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-31T15:48:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207366,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-31T16:02:10Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* The KER results table should display the following fields:\r\n\r\nCondition #\r\nFeature Name\r\nFeature Name 2 (whenever necessary)\r\nFCODE\r\nFCODE 2 (whenever necessary)\r\nMagnitude\r\n\r\nGiven I am a KER results table\r\nI want to display the correct fields in the table\r\nSo that the QAC users see the exact fields needed for file validation\r\n\r\nAs a QAC user \r\nI want to see Condition #, Feature Name, Feature Name 2, FCODE, FCODE 2, and Magnitude in the KER Results table\r\nSo that I visually see what is necessary to validate the KER results",
            "new_value": "Acceptance Criteria:\r\n* The KER results table should display the following fields:\r\n\r\nCondition #\r\nFeature Name\r\nFeature Name 2 (whenever necessary)\r\nFCODE\r\nFCODE 2 (whenever necessary)\r\nMagnitude\r\n\r\nGiven I am a KER results table\r\nI want to display the correct fields in the table\r\nSo that the QAC users see the exact fields needed for file validation\r\n\r\nAs a QAC user \r\nI want to see Condition #, Feature Name, Feature Name 2, FCODE, FCODE 2, and Magnitude in the KER Results table\r\nSo that I visually see what is necessary to validate the KER results\r\n\r\n*NOTE*\r\nANYSAMEID will return results with multiple FNAME and FCODES"
          }
        ]
      },
      {
        "id": 207765,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-02T19:42:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207973,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-06T13:54:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208198,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-06T19:34:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208216,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-06T19:54:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 208353,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:26:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52914,
    "subject": "KER short names should be in capital letters throughout the web app",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 206510,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "The idea being that the KER short names are consistent with GAIT, and all relevant documentation.",
        "created_on": "2019-12-18T15:43:15Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER names should be in capital letters throughout the web app",
            "new_value": "KER short names should be in capital letters throughout the web app"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* All KER names should be in capital letters throughout the web app \r\n* Example: Objectwithout should display as \"OBJECTWITHOUT\"\r\n\r\nGiven I am a KER name in the Web App\r\nWhen I display in the UI\r\nThen I will display in all capital letters\r\n\r\nAs a QAC user\r\nI want to see all KER names in capital letters\r\nSo that I the KER names stand out\r\nAnd the KER names display the same as they do in GAIT",
            "new_value": "Acceptance Criteria:\r\n* All KER short names should be in capital letters throughout the web app \r\n* Example: Objectwithout should display as \"OBJECTWITHOUT\"\r\n\r\nGiven I am a KER short name in the Web App\r\nWhen I display in the UI\r\nThen I will display in all capital letters\r\n\r\nAs a QAC user\r\nI want to see all KER short names in capital letters\r\nSo that the KER short names stand out\r\nAnd the KER short names display the same as they do in GAIT"
          }
        ]
      },
      {
        "id": 206588,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-18T21:50:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3835"
          }
        ]
      },
      {
        "id": 206723,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-19T16:59:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 206728,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T17:23:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52812,
    "subject": "create automated load tests",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 208986,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "priority changed to medium.\r\nwe need an estimate for when we're going to be 'done' with this app.\r\npart of that involves possibly re-architecting the application.\r\nbefore we do this, we want to demonstrate that the app will have trouble supporting around 100 simultaneous users.",
        "created_on": "2020-01-08T14:57:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 209151,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-08T20:55:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "TASK\r\n\r\nAs a QAC Team member,\r\nI would like to have a set of automated load tests,\r\nSo that I can know how well the QAC app scales under heavy user load.\r\n\r\n*Notes*\r\n* Gatlin and Artillery are two options for writing the load test scripts. there may be others\r\n* keep in mind the numbers from our previous story writing discussion regarding number of simultaneous users: maybe 100. it could be less than that.",
            "new_value": "TASK\r\n\r\nAs a QAC Team member,\r\nI would like to have a set of automated load tests,\r\nSo that I can know how well the QAC app scales under heavy user load.\r\n\r\n*Notes*\r\n* Gatlin and Artillery are two options for writing the load test scripts. there may be others\r\n* keep in mind the numbers from our previous story writing discussion regarding number of simultaneous users: maybe 100. it could be less than that.\r\n\r\n*Findings*\r\n* Initial load tests were run with 50 and 100 users over 50 and 100 seconds with error rates of 11% and 66%, respectively, using only KER test data.\r\n* Jeff mentioned in his RocketChat message on Dec 13th (qac_kers channel), that the largest production dataset he was able to run through QAC was 26 MB. A 40MB file errored out. For reference, the largest current test dataset is about 800 KB. And you can find production datasets of several hundred MB on redmine.\r\n* My opinion (Eric S.) is that this data is enough to demonstrate that the QAC app still does not scale and that rearchitecting the app is necessary."
          }
        ]
      },
      {
        "id": 209157,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-08T21:24:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "TASK\r\n\r\nAs a QAC Team member,\r\nI would like to have a set of automated load tests,\r\nSo that I can know how well the QAC app scales under heavy user load.\r\n\r\n*Notes*\r\n* Gatlin and Artillery are two options for writing the load test scripts. there may be others\r\n* keep in mind the numbers from our previous story writing discussion regarding number of simultaneous users: maybe 100. it could be less than that.\r\n\r\n*Findings*\r\n* Initial load tests were run with 50 and 100 users over 50 and 100 seconds with error rates of 11% and 66%, respectively, using only KER test data.\r\n* Jeff mentioned in his RocketChat message on Dec 13th (qac_kers channel), that the largest production dataset he was able to run through QAC was 26 MB. A 40MB file errored out. For reference, the largest current test dataset is about 800 KB. And you can find production datasets of several hundred MB on redmine.\r\n* My opinion (Eric S.) is that this data is enough to demonstrate that the QAC app still does not scale and that rearchitecting the app is necessary.",
            "new_value": "TASK\r\n\r\nAs a QAC Team member,\r\nI would like to have a set of automated load tests,\r\nSo that I can know how well the QAC app scales under heavy user load.\r\n\r\n*Notes*\r\n* Gatlin and Artillery are two options for writing the load test scripts. there may be others\r\n* keep in mind the numbers from our previous story writing discussion regarding number of simultaneous users: maybe 100. it could be less than that.\r\n\r\n*Findings*\r\n* Initial load tests were run with 50 and 100 users over 50 and 100 seconds with error rates of 11% and 66%, respectively, using only KER test data.\r\n* Jeff mentioned in his RocketChat message on Dec 13th (qac_kers channel), that the largest production dataset he was able to run through QAC was 26 MB. A 40MB file errored out, which I reproduced (Eric S.). For reference, the largest current test dataset is about 800 KB. And you can find production datasets of several hundred MB on redmine.\r\n* My opinion (Eric S.) is that this data is enough to demonstrate that the QAC app still does not scale and that rearchitecting the app is necessary."
          }
        ]
      },
      {
        "id": 209269,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-09T18:52:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3787"
          }
        ]
      },
      {
        "id": 209438,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-10T15:29:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52794,
    "subject": "[Tech Debt] Jenkins needs to parallelize frontend and backend builds",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 205794,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-13T19:25:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3825"
          }
        ]
      },
      {
        "id": 206075,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T14:10:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 206076,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T14:10:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 206566,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-18T20:08:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206611,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-12-18T22:48:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Jenkins currently builds the frontend and backend in separate steps. It would be nice to have the backend and frontend build in parallel, so that the build time decreases.",
            "new_value": "Jenkins currently builds the frontend and backend in separate steps. It would be nice to have the backend and frontend build in parallel, so that the build time decreases.\r\n\r\nAddes 3 parallel processes\r\nBuild (front, back)\r\nbackend (lint, test)\r\nfrontend (lint, test)\r\n\r\nseems to work, is this the correct logic or should tests and lints go together in parallel?\r\n"
          }
        ]
      },
      {
        "id": 206672,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-19T15:36:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 206675,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-19T15:58:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206772,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-19T19:31:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 206977,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-20T18:47:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 206985,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-20T18:56:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Jenkins currently builds the frontend and backend in separate steps. It would be nice to have the backend and frontend build in parallel, so that the build time decreases.\r\n\r\nAddes 3 parallel processes\r\nBuild (front, back)\r\nbackend (lint, test)\r\nfrontend (lint, test)\r\n\r\nseems to work, is this the correct logic or should tests and lints go together in parallel?\r\n",
            "new_value": "Jenkins currently builds the frontend and backend in separate steps. It would be nice to have the backend and frontend build in parallel, so that the build time decreases.\r\n\r\nBy using the below break out:\r\nparallel{\r\n  backend {\r\n    build{}\r\n    lint{}\r\n    test backend{}\r\n  }\r\n  frontend {\r\n    build{}\r\n    lint{}\r\n    test frontend{}\r\n  }\r\n  fortify{}\r\n  sonarqube{}\r\n  dependencyCheck{}\r\n}\r\n\r\nThe build fails when other branches are using similar resources.\r\n\r\nBy using the below (faster on average):\r\n\r\nparallel {\r\n  build {\r\n    build backend {}\r\n    build frontend {}\r\n  }\r\n  fortify{}\r\n  sonarqube{}\r\n  dependencyCheck{}\r\n}\r\nparallel {\r\n  lint and test {\r\n    backend lint {}\r\n    frontend lint {}\r\n    backend test {}\r\n    frontend test {}\r\n  }\r\n}\r\n\r\nThe pipeline runs into resource conflicts with other branches and randomly receives a \"could not connect\" error during the backend test stage. There may be a dependency on the stages that is causing this. The wait for database delay was raised to 30 seconds and the connection error continued.  "
          }
        ]
      },
      {
        "id": 206986,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-20T18:57:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Jenkins currently builds the frontend and backend in separate steps. It would be nice to have the backend and frontend build in parallel, so that the build time decreases.\r\n\r\nBy using the below break out:\r\nparallel{\r\n  backend {\r\n    build{}\r\n    lint{}\r\n    test backend{}\r\n  }\r\n  frontend {\r\n    build{}\r\n    lint{}\r\n    test frontend{}\r\n  }\r\n  fortify{}\r\n  sonarqube{}\r\n  dependencyCheck{}\r\n}\r\n\r\nThe build fails when other branches are using similar resources.\r\n\r\nBy using the below (faster on average):\r\n\r\nparallel {\r\n  build {\r\n    build backend {}\r\n    build frontend {}\r\n  }\r\n  fortify{}\r\n  sonarqube{}\r\n  dependencyCheck{}\r\n}\r\nparallel {\r\n  lint and test {\r\n    backend lint {}\r\n    frontend lint {}\r\n    backend test {}\r\n    frontend test {}\r\n  }\r\n}\r\n\r\nThe pipeline runs into resource conflicts with other branches and randomly receives a \"could not connect\" error during the backend test stage. There may be a dependency on the stages that is causing this. The wait for database delay was raised to 30 seconds and the connection error continued.  ",
            "new_value": "Jenkins currently builds the frontend and backend in separate steps. It would be nice to have the backend and frontend build in parallel, so that the build time decreases.\r\n\r\nBy using the below break out:\r\n<pre><code class=\"javascript\">\r\nparallel{\r\n  backend {\r\n    build{}\r\n    lint{}\r\n    test backend{}\r\n  }\r\n  frontend {\r\n    build{}\r\n    lint{}\r\n    test frontend{}\r\n  }\r\n  fortify{}\r\n  sonarqube{}\r\n  dependencyCheck{}\r\n}\r\n</code></pre>\r\n\r\n\r\nThe build fails when other branches are using similar resources.\r\n\r\nBy using the below (faster on average):\r\n\r\n<pre><code class=\"javascript\">\r\nparallel {\r\n  build {\r\n    build backend {}\r\n    build frontend {}\r\n  }\r\n  fortify{}\r\n  sonarqube{}\r\n  dependencyCheck{}\r\n}\r\nparallel {\r\n  lint and test {\r\n    backend lint {}\r\n    frontend lint {}\r\n    backend test {}\r\n    frontend test {}\r\n  }\r\n}\r\n</code></pre>\r\n\r\n\r\nThe pipeline runs into resource conflicts with other branches and randomly receives a \"could not connect\" error during the backend test stage. There may be a dependency on the stages that is causing this. The wait for database delay was raised to 30 seconds and the connection error continued.  "
          }
        ]
      },
      {
        "id": 207157,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-23T15:07:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207237,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-30T14:26:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208116,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T17:25:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208345,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:14:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52783,
    "subject": "[TECH DEBT] Add commands to restart specific containers to the run_dev script",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 205707,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T17:24:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 205762,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:55:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 206095,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T14:28:48Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "511",
            "new_value": "524"
          }
        ]
      },
      {
        "id": 206096,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T14:28:55Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "524",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 206359,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-17T20:12:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206654,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-19T14:45:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52707,
    "subject": "[Tech Debt] Threadfix: Address scan.py and frontend/dist issues and upload only protected branches.",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 205098,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-11T16:51:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205109,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-11T17:00:13Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "[Tech Debt] Threadfix: Address scan.py and frontend/dist issues",
            "new_value": "[Tech Debt] Threadfix: Address scan.py and frontend/dist issues and upload only protected branches."
          }
        ]
      },
      {
        "id": 206062,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:26:13Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206773,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-19T19:31:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52642,
    "subject": "Add magnitude to Shapefile export",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 204629,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T17:36:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 204630,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T17:37:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 204637,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-10T17:49:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205093,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-11T16:25:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205127,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T18:18:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205172,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T19:38:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52639,
    "subject": "Add Support Page",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 205186,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-12-11T21:28:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Bobby to write AC*",
            "new_value": "*Bobby to write AC*\r\nJacob:\r\nGIVEN I need help with QAC\r\nWHEN I click the support tab in the header navigation\r\nTHEN I should see a page providing links to the currently available documentation, help, FAQ (if any), Release notes, and contact info\r\n\r\n\r\nAs a user \r\nDesign: https://sketch.cloud/s/3Jooj/a/G7WWQ7\r\n"
          }
        ]
      },
      {
        "id": 205233,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "Can a link to the QAC Manual .doc file be added to this story? It would be ready for work at that point.",
        "created_on": "2019-12-11T23:58:42Z",
        "details": []
      },
      {
        "id": 205667,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-13T15:57:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 205674,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-13T16:16:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205702,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-13T17:08:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Bobby to write AC*\r\nJacob:\r\nGIVEN I need help with QAC\r\nWHEN I click the support tab in the header navigation\r\nTHEN I should see a page providing links to the currently available documentation, help, FAQ (if any), Release notes, and contact info\r\n\r\n\r\nAs a user \r\nDesign: https://sketch.cloud/s/3Jooj/a/G7WWQ7\r\n",
            "new_value": "*Bobby to write AC*\r\nJacob:\r\nGIVEN I need help with QAC\r\nWHEN I click the support tab in the header navigation\r\nTHEN I should see a page providing a title and description, with links to the QAC email address and the current version of the QAC manual.\r\n\r\n\r\nAs a user \r\nDesign: https://sketch.cloud/s/3Jooj/a/G7WWQ7\r\n\r\nNotes: The design included release notes, and a link to full release notes, which we could not locate. We decided to add this link in a future iteration of the page.\r\n"
          }
        ]
      },
      {
        "id": 206058,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:25:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 207364,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-31T15:44:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 207367,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-31T16:22:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52638,
    "subject": "Clean Up on Aisle UI",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 204610,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-10T16:51:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Bobby adds a list*",
            "new_value": "*Bobby adds a list*\r\n\r\n*CHECK IN INTERNET EXPLORER*"
          }
        ]
      },
      {
        "id": 204919,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-10T22:38:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Bobby adds a list*\r\n\r\n*CHECK IN INTERNET EXPLORER*",
            "new_value": "Upload Screen\r\n- Icon size (16x16)\r\n- Width of the schema select needs to match Zeplin: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5de823de0c68b7530067c81d\r\n\r\nLoader\r\n- Position of globe need to appear between the header and paragraph\r\n- Hover effect needs to be removed if it will overlap any UI elements\r\n\r\nError Messages\r\n- For both Schema and KERs errors, the error needs some section padding. Reference for padding: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSuccess Message\r\n- When there are no schema errors. There should be one like this: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSide Navigation\r\n- Active tab indicator needs roundness. Reference sidenav here: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddeccf18bb11810791f4abe\r\n\r\nResults\r\n- Alert toggle in header needs to be smaller. Reference: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddececb700be80618e0001f\r\n\r\n*CHECK ALL IN INTERNET EXPLODER*"
          }
        ]
      },
      {
        "id": 204921,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-10T22:40:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Upload Screen\r\n- Icon size (16x16)\r\n- Width of the schema select needs to match Zeplin: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5de823de0c68b7530067c81d\r\n\r\nLoader\r\n- Position of globe need to appear between the header and paragraph\r\n- Hover effect needs to be removed if it will overlap any UI elements\r\n\r\nError Messages\r\n- For both Schema and KERs errors, the error needs some section padding. Reference for padding: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSuccess Message\r\n- When there are no schema errors. There should be one like this: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSide Navigation\r\n- Active tab indicator needs roundness. Reference sidenav here: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddeccf18bb11810791f4abe\r\n\r\nResults\r\n- Alert toggle in header needs to be smaller. Reference: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddececb700be80618e0001f\r\n\r\n*CHECK ALL IN INTERNET EXPLODER*",
            "new_value": "Upload Screen\r\n- Icon size (16x16)\r\n- Width of the schema select needs to match Zeplin: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5de823de0c68b7530067c81d\r\n\r\nLoader\r\n- Position of globe need to appear between the header and paragraph\r\n- Hover effect needs to be removed if it will overlap any UI elements\r\n\r\nError Messages\r\n- For both Schema and KERs errors, the error needs some section padding. Reference for padding: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSuccess Message\r\n- When there are no schema errors. There should be one like this: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSide Navigation\r\n- Active tab indicator needs roundness. Reference sidenav here: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddeccf18bb11810791f4abe\r\n\r\nResults\r\n- Alert toggle in header needs to be smaller. Reference: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddececb700be80618e0001f\r\n\r\n\r\nAcceptance Criteria:\r\n* Add Sass Variables and default stylesheets\r\n\r\n*CHECK ALL IN INTERNET EXPLODER*"
          }
        ]
      },
      {
        "id": 205187,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-11T21:55:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 205232,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-11T23:57:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205540,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-12-12T18:27:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Upload Screen\r\n- Icon size (16x16)\r\n- Width of the schema select needs to match Zeplin: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5de823de0c68b7530067c81d\r\n\r\nLoader\r\n- Position of globe need to appear between the header and paragraph\r\n- Hover effect needs to be removed if it will overlap any UI elements\r\n\r\nError Messages\r\n- For both Schema and KERs errors, the error needs some section padding. Reference for padding: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSuccess Message\r\n- When there are no schema errors. There should be one like this: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSide Navigation\r\n- Active tab indicator needs roundness. Reference sidenav here: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddeccf18bb11810791f4abe\r\n\r\nResults\r\n- Alert toggle in header needs to be smaller. Reference: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddececb700be80618e0001f\r\n\r\n\r\nAcceptance Criteria:\r\n* Add Sass Variables and default stylesheets\r\n\r\n*CHECK ALL IN INTERNET EXPLODER*",
            "new_value": "Upload Screen\r\n- Icon size (16x16)\r\n- Width of the schema select needs to match Zeplin: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5de823de0c68b7530067c81d\r\n\r\nLoader\r\n- Position of globe need to appear between the header and paragraph\r\n- Hover effect needs to be removed if it will overlap any UI elements\r\n\r\nError Messages\r\n- For both Schema and KERs errors, the error needs some section padding. Reference for padding: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSuccess Message\r\n- When there are no schema errors. There should be one like this: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd307741990af61e36bb2ee\r\n\r\nSide Navigation\r\n- Active tab indicator needs roundness. Reference sidenav here: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddeccf18bb11810791f4abe\r\n\r\nResults\r\n- Alert toggle in header needs to be smaller. Reference: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5ddececb700be80618e0001f *THIS IS PART OF 52542*\r\n\r\n\r\nAcceptance Criteria:\r\n* Add Sass Variables and default stylesheets\r\n\r\n*CHECK ALL IN INTERNET EXPLODER*"
          }
        ]
      },
      {
        "id": 205561,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-12T19:46:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205648,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-13T15:33:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205698,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-13T16:54:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52626,
    "subject": "restructure ANY_SAMEID query to increase app performance",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 205061,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-11T15:43:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3413"
          }
        ]
      },
      {
        "id": 205174,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T20:23:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205175,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T20:30:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52619,
    "subject": "Move AWITHOUTA KER into DB",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 204454,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T14:02:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 204455,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T14:02:31Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3787"
          }
        ]
      },
      {
        "id": 204456,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-10T14:19:54Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 209619,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-14T15:26:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3787"
          }
        ]
      },
      {
        "id": 209620,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-14T15:28:00Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Move AIWTHOUTA KER into DB",
            "new_value": "Move AWITHOUTA KER into DB"
          }
        ]
      },
      {
        "id": 211123,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-22T21:09:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213087,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T15:12:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 213153,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-03T17:12:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52618,
    "subject": "clean up old dev scripts",
    "category": "KER team",
    "status": "New",
    "journals": [
      {
        "id": 204458,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-10T14:25:44Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510"
          }
        ]
      },
      {
        "id": 210745,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T14:18:10Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 213244,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:56:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 52593,
    "subject": "[Tech Debt] Add Custom QAC Logging Class to the backend",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 204310,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T20:05:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 205060,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-11T15:43:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205094,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-11T16:31:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52576,
    "subject": "[Tech Debt] PCF: Clean up old temporary schemas from database",
    "category": "Web App team",
    "status": "Analysis",
    "journals": [
      {
        "id": 204091,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-06T19:33:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "In the Development and Acceptance spaces within PCF, the temporary schemas from the shapefile imports remain after no longer being needed. These should be deleted. ",
            "new_value": "In the Development and Acceptance spaces within PCF, the temporary schemas from the shapefile imports remain after no longer being needed. These should be deleted. \r\n\r\nNote: Figure out how to access the databases, or ask Mary!"
          }
        ]
      },
      {
        "id": 205861,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:33:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 210739,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:39:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 212801,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T19:12:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 52557,
    "subject": "Setup Windows Machine for Developers",
    "category": "KER team",
    "status": "New",
    "journals": [
      {
        "id": 204012,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T15:16:02Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "6",
            "new_value": "7"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205857,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:33:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 210744,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T14:17:49Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 213243,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:56:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 52551,
    "subject": "Download KER .csv issue",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 203963,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T13:30:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 203997,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T14:31:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Details:",
            "new_value": "Details:\r\n* Due to the refactor, the payload coming from the back-end no longer contains an array of FIDs\r\n* Therefore, the generation of the .csv needs to remove iterating over the FIDs"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3825"
          }
        ]
      },
      {
        "id": 204014,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-06T15:40:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3850"
          }
        ]
      },
      {
        "id": 204181,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T17:05:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204204,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:16:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204205,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:16:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204507,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T15:41:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204652,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:39:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52548,
    "subject": "[Tech Debt] Jenkins: The build can fail if two different branches access shared resources",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 205856,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:33:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206647,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-12-19T14:12:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207762,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-01-02T19:30:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207768,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-01-02T20:20:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52542,
    "subject": "Display a tabular view of all the KERs that are running in the UI",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 204160,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T15:56:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n\r\nAND THEN a tabular view of all the KERs that are running should be displayed below the message.\r\n\r\n",
            "new_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now).\r\n"
          }
        ]
      },
      {
        "id": 204169,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T16:16:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3835"
          }
        ]
      },
      {
        "id": 204837,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-10T21:59:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now).\r\n",
            "new_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\nThe backend does not currently have an endpoint that passes a list of all the KERs that are being run. Frontend will need to create a hardcoded object that has the KER Title and Full Name to build out the table. You can find a mostly complete list of all kers in ker_config.py in the backend.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now).\r\n"
          }
        ]
      },
      {
        "id": 204838,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-10T22:00:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\nThe backend does not currently have an endpoint that passes a list of all the KERs that are being run. Frontend will need to create a hardcoded object that has the KER Title and Full Name to build out the table. You can find a mostly complete list of all kers in ker_config.py in the backend.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now).\r\n",
            "new_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\nThe backend does not currently have an endpoint that passes a list of all the KERs that are being run. To complete this story, Frontend will need to create a hardcoded object that has the KER Title and Full Name to build out the table. You can find a mostly complete list of all kers in ker_config.py in the backend folder.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now).\r\n"
          }
        ]
      },
      {
        "id": 204911,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-10T22:27:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\nThe backend does not currently have an endpoint that passes a list of all the KERs that are being run. To complete this story, Frontend will need to create a hardcoded object that has the KER Title and Full Name to build out the table. You can find a mostly complete list of all kers in ker_config.py in the backend folder.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now).\r\n",
            "new_value": "Acceptance Criteria:\r\n\r\n*GIVEN* KERs are running\r\n*WHEN* the KERs loading screen is being displayed\r\n*THEN* I will see a tabular view of all the KERs that are being run against displayed below the loading message.\r\n\r\nThe backend does not currently have an endpoint that passes a list of all the KERs that are being run. To complete this story, Frontend will need to create a hardcoded object that has the KER Title and Full Name to build out the table. You can find a mostly complete list of all kers in ker_config.py in the backend folder.\r\n\r\n*Zeplin Link:* https://zpl.io/2GR6qWj\r\n*Note:* Do not include link to \"About this KER\" in this iteration. Table will only be two columns (Title & Full Name for now). BRANCH IS ALREADY UP\r\n"
          }
        ]
      },
      {
        "id": 205024,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-11T14:45:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206060,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:25:49Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206064,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:33:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 206163,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-17T15:48:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52538,
    "subject": "Build download functional component (refactor results)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 203444,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:11:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 203496,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:19:28Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "6",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 204152,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T15:42:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n",
            "new_value": "Acceptance Criteria:\r\n* Create a component to hold the download functions used in Results.jsx (for better organization/maintainability)."
          }
        ]
      },
      {
        "id": 204159,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T15:49:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 204285,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-09T19:36:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205059,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-11T15:43:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205650,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-13T15:33:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52537,
    "subject": "Replace tabs/continue button header with reactive stepper",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 203453,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:15:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 203454,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "ac?",
        "created_on": "2019-12-05T18:16:23Z",
        "details": []
      },
      {
        "id": 203468,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-05T18:49:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria: \r\n",
            "new_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\n*GIVEN* I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion with a label,\r\nAND THEN My current step displayed an icon indicating active,\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link.\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND see that I am on the Running Schema Checks step in the process\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\" which shows a completed state,\r\nAND THEN the active step is \"Schema Check Results\".\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\" showing a completed state.\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\" showing a completed state\r\nAND THEN the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Visited links will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf"
          }
        ]
      },
      {
        "id": 203475,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-05T19:01:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\n*GIVEN* I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion with a label,\r\nAND THEN My current step displayed an icon indicating active,\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link.\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND see that I am on the Running Schema Checks step in the process\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\" which shows a completed state,\r\nAND THEN the active step is \"Schema Check Results\".\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\" showing a completed state.\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\" showing a completed state\r\nAND THEN the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Visited links will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf",
            "new_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process \r\n\r\n*Acceptance Criteria*\r\n\r\nGIVEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nWHEN the schema checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see a stepper\r\nAND see that I am on the Running Schema Checks step in the process\r\n\r\nGIVEN Schema Checks are complete\r\nWHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Upload a file\" which shows a completed state,\r\nAND the active step is \"Schema Check Results\".\r\n\r\nGIVEN I have clicked the \"Run KERs\" button\r\nWHEN the KER Checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state.\r\n\r\nGIVEN KER Checks are complete\r\nWHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state\r\nAND the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Visited links will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf"
          }
        ]
      },
      {
        "id": 203492,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:07:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process \r\n\r\n*Acceptance Criteria*\r\n\r\nGIVEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nWHEN the schema checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see a stepper\r\nAND see that I am on the Running Schema Checks step in the process\r\n\r\nGIVEN Schema Checks are complete\r\nWHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Upload a file\" which shows a completed state,\r\nAND the active step is \"Schema Check Results\".\r\n\r\nGIVEN I have clicked the \"Run KERs\" button\r\nWHEN the KER Checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state.\r\n\r\nGIVEN KER Checks are complete\r\nWHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state\r\nAND the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Visited links will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf",
            "new_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process \r\n\r\n*Acceptance Criteria*\r\n\r\nGIVEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nWHEN the schema checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see a stepper\r\nAND see that I am on the Running Schema Checks step in the process\r\n\r\nGIVEN Schema Checks are complete\r\nWHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Upload a file\" which shows a completed state,\r\nAND the active step is \"Schema Check Results\".\r\n\r\nGIVEN I have clicked the \"Run KERs\" button\r\nWHEN the KER Checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state.\r\n\r\nGIVEN KER Checks are complete\r\nWHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state\r\nAND the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Completed steps will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 204042,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T16:52:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205114,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-11T17:56:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205167,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-11T19:14:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process \r\n\r\n*Acceptance Criteria*\r\n\r\nGIVEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nWHEN the schema checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see a stepper\r\nAND see that I am on the Running Schema Checks step in the process\r\n\r\nGIVEN Schema Checks are complete\r\nWHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Upload a file\" which shows a completed state,\r\nAND the active step is \"Schema Check Results\".\r\n\r\nGIVEN I have clicked the \"Run KERs\" button\r\nWHEN the KER Checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state.\r\n\r\nGIVEN KER Checks are complete\r\nWHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state\r\nAND the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Completed steps will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf",
            "new_value": "*Rough Draft*\r\n\r\n*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process \r\n\r\n*Acceptance Criteria*\r\n\r\nGIVEN Schema Checks are complete\r\nWHEN the Schema Check Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Upload a file\" which shows a completed state,\r\nAND the active step is \"Schema Check Results\".\r\n\r\nGIVEN I have clicked the \"Run KERs\" button\r\nWHEN the KER Checks are running\r\nAND a loading screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state.\r\n\r\nGIVEN KER Checks are complete\r\nWHEN the KER Results screen is displayed\r\nTHEN I am able to see the stepper\r\nAND the previous step is \"Schema Check Results\" showing a completed state\r\nAND the active step is \"KER Results\"\r\n\r\nNotes:\r\n- There will be no links in the stepper\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Completed steps will display a check, indicating you have already completed that section\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf"
          }
        ]
      },
      {
        "id": 205647,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-13T15:32:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205697,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-13T16:54:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52536,
    "subject": "Remove Legacy sub-header (grey slate bar)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 203443,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:10:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 203452,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:15:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 203464,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-05T18:42:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n",
            "new_value": "Acceptance Criteria:\r\nFrom the QacHeader Component, remove the following \r\n* slate grey bar\r\n* file name & Icon\r\n* new dataset button (functionality is now in navbar)\r\n* Schema type"
          }
        ]
      },
      {
        "id": 203489,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:04:43Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Remove Legacy sub-header (blue slate bar)",
            "new_value": "Remove Legacy sub-header (gray slate bar)"
          }
        ]
      },
      {
        "id": 203490,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:04:57Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Remove Legacy sub-header (gray slate bar)",
            "new_value": "Remove Legacy sub-header (grey slate bar)"
          }
        ]
      },
      {
        "id": 203998,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-06T14:32:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204084,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-06T19:17:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204276,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T19:16:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204460,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T15:13:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52535,
    "subject": "Remove zip files from temp directory",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 204098,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-06T20:42:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3850"
          }
        ]
      },
      {
        "id": 204531,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T16:04:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204772,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T19:29:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204785,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T19:33:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52526,
    "subject": "App not deploying to Dev",
    "category": "Web App team",
    "status": "Done",
    "journals": []
  },
  {
    "id": 52525,
    "subject": "[Tech Debt] Stop concurrent builds in Jenkins",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 203517,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-05T21:22:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Currently, if a build is ran in Jenkins, and another build on the same branch starts and gets to a stage using Docker, Jenkins will fail both builds as the Docker resources are shared. In other words, if a build 4 is in the @Build Backend@ stage and build 5 makes it to the @Build Backend@ stage, then Jenkins will fail one or both builds. \r\n\r\nThe desired behavior is to not allow concurrent builds in order to stop the collision on shared resources. ",
            "new_value": "Currently, if a build is ran in Jenkins, and another build on the same branch starts and gets to a stage using Docker, Jenkins will fail both builds as the Docker resources are shared. In other words, if a build 4 is in the @Build Backend@ stage and build 5 makes it to the @Build Backend@ stage, then Jenkins will fail one or both builds. \r\n\r\nThe desired behavior is to not allow concurrent builds in order to stop the collision on shared resources. \r\n\r\nContainer names should use a standard starting to avoid special characters shifting to the front."
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1228",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 204086,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T19:25:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 52499,
    "subject": "[Tech Debt] Backend: PCF environment uses Miniconda and the development environment uses pip",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 205860,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:33:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206771,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-19T19:30:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206916,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T15:31:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.",
            "new_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n\r\nI found the following links to be helpful (ES).\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529"
          }
        ]
      },
      {
        "id": 206918,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T15:53:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n\r\nI found the following links to be helpful (ES).\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529",
            "new_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n\r\nI found the following links to be helpful (ES).\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/"
          }
        ]
      },
      {
        "id": 207033,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T21:24:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n\r\nI found the following links to be helpful (ES).\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/",
            "new_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n*Findings:*\r\npip fails to install gdal on PCF because the PCF stack (cflinuxfs3) does not contain the Debian-level dependencies require for pip to be able to install gdal. You can use apt-buildback to install Debian packages, and while that is technically an experimental buildpack, it works fine. However, there's a catch, after doing the apt-get install via apt.yml, there are a few environment variables that need to exported to the location where those Debian packages are installed. I'm not sure if this is possible in PCF because at this stage in the deploy process (installing Debian and Python dependencies) everything is installed to a temporary folder that is named differently for each attempted deploy. This makes using pip for the gdal install impractical. I'm not going to say it's not possible because maybe I just haven't found the right way to do this. But given that the miniconda install works, it seems like it wasn't worth spending any more time on this approach.\r\n\r\nI took an alternate approach of creating a Python script that compares the requirements.txt and environment.yml. This script will now be run near the beginning of the Jenkins pipeline and will fail at a specific step to inform the user of what is happening. This is slightly preferable to adding a new dependency to requirements.txt, but omitting it from environment.yml but not realizing that until the PCF deploy stage or later.\r\n\r\nThere is still at least one more approach we could try. We could use a Docker image as part of the PCF deploy. That Docker image would already have GDAL or the Debian-level deps already installed. My opinion on this approach is that this is also not worth the time at this point.\r\n\r\nThere are two branches for this story:\r\n* 52499-compare-deps (keep)\r\n* 52499-use-pip-in-pcf (for later if we get more information)\r\n\r\nI found the following links to be helpful (ES).\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/\r\n"
          }
        ]
      },
      {
        "id": 207035,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T21:30:22Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n*Findings:*\r\npip fails to install gdal on PCF because the PCF stack (cflinuxfs3) does not contain the Debian-level dependencies require for pip to be able to install gdal. You can use apt-buildback to install Debian packages, and while that is technically an experimental buildpack, it works fine. However, there's a catch, after doing the apt-get install via apt.yml, there are a few environment variables that need to exported to the location where those Debian packages are installed. I'm not sure if this is possible in PCF because at this stage in the deploy process (installing Debian and Python dependencies) everything is installed to a temporary folder that is named differently for each attempted deploy. This makes using pip for the gdal install impractical. I'm not going to say it's not possible because maybe I just haven't found the right way to do this. But given that the miniconda install works, it seems like it wasn't worth spending any more time on this approach.\r\n\r\nI took an alternate approach of creating a Python script that compares the requirements.txt and environment.yml. This script will now be run near the beginning of the Jenkins pipeline and will fail at a specific step to inform the user of what is happening. This is slightly preferable to adding a new dependency to requirements.txt, but omitting it from environment.yml but not realizing that until the PCF deploy stage or later.\r\n\r\nThere is still at least one more approach we could try. We could use a Docker image as part of the PCF deploy. That Docker image would already have GDAL or the Debian-level deps already installed. My opinion on this approach is that this is also not worth the time at this point.\r\n\r\nThere are two branches for this story:\r\n* 52499-compare-deps (keep)\r\n* 52499-use-pip-in-pcf (for later if we get more information)\r\n\r\nI found the following links to be helpful (ES).\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/\r\n",
            "new_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n*Findings:*\r\npip fails to install gdal on PCF because the PCF stack (cflinuxfs3) does not contain the Debian-level dependencies require for pip to be able to install gdal. You can use apt-buildback to install Debian packages, and while that is technically an experimental buildpack, it works fine. However, there's a catch, after doing the apt-get install via apt.yml, there are a few environment variables that need to exported to the location where those Debian packages are installed. I'm not sure if this is possible in PCF because at this stage in the deploy process (installing Debian and Python dependencies) everything is installed to a temporary folder that is named differently for each attempted deploy. This makes using pip for the gdal install impractical. I'm not going to say it's not possible because maybe I just haven't found the right way to do this. But given that the miniconda install works, it seems like it wasn't worth spending any more time on this approach.\r\n\r\nI took an alternate approach of creating a Python script that compares the requirements.txt and environment.yml. This script will now be run near the beginning of the Jenkins pipeline and will fail at a specific step to inform the user of what is happening. This is slightly preferable to adding a new dependency to requirements.txt, but omitting it from environment.yml but not realizing that until the PCF deploy stage or later.\r\n\r\nThere is still at least one more approach we could try. We could use a Docker image as part of the PCF deploy. That Docker image would already have GDAL or the Debian-level deps already installed. My opinion on this approach is that this is also not worth the time at this point.\r\n\r\nThere are two branches for this story:\r\n* 52499-compare-deps (keep)\r\n* 52499-use-pip-in-pcf (for later if we get more information)\r\n\r\nI found the following links to be helpful\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/\r\n"
          }
        ]
      },
      {
        "id": 207036,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T21:30:29Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "511",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 207037,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T21:32:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n*Findings:*\r\npip fails to install gdal on PCF because the PCF stack (cflinuxfs3) does not contain the Debian-level dependencies require for pip to be able to install gdal. You can use apt-buildback to install Debian packages, and while that is technically an experimental buildpack, it works fine. However, there's a catch, after doing the apt-get install via apt.yml, there are a few environment variables that need to exported to the location where those Debian packages are installed. I'm not sure if this is possible in PCF because at this stage in the deploy process (installing Debian and Python dependencies) everything is installed to a temporary folder that is named differently for each attempted deploy. This makes using pip for the gdal install impractical. I'm not going to say it's not possible because maybe I just haven't found the right way to do this. But given that the miniconda install works, it seems like it wasn't worth spending any more time on this approach.\r\n\r\nI took an alternate approach of creating a Python script that compares the requirements.txt and environment.yml. This script will now be run near the beginning of the Jenkins pipeline and will fail at a specific step to inform the user of what is happening. This is slightly preferable to adding a new dependency to requirements.txt, but omitting it from environment.yml but not realizing that until the PCF deploy stage or later.\r\n\r\nThere is still at least one more approach we could try. We could use a Docker image as part of the PCF deploy. That Docker image would already have GDAL or the Debian-level deps already installed. My opinion on this approach is that this is also not worth the time at this point.\r\n\r\nThere are two branches for this story:\r\n* 52499-compare-deps (keep)\r\n* 52499-use-pip-in-pcf (for later if we get more information)\r\n\r\nI found the following links to be helpful\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/\r\n",
            "new_value": "by having an @environment.yml@ within the backend directory, the PCF environment uses miniconda for housing our app. If we remove the @environment.yml@ then PCF will use pip. Currently pip install fails within PCF.\r\n\r\n*Findings:*\r\npip fails to install gdal on PCF because the PCF stack (cflinuxfs3) does not contain the Debian-level dependencies required for pip to be able to install gdal. You can use apt-buildback to install Debian packages, and while that is technically an experimental buildpack, it works fine. However, there's a catch. After doing the apt-get install via apt.yml, there are a few environment variables that need to be exported to the location where those Debian packages are installed. I'm not sure if this is possible in PCF because at this stage in the deploy process (installing Debian and Python dependencies) everything is installed to a temporary folder that is named differently for each attempted deploy. This makes using pip for the gdal install impractical. I'm not going to say it's not possible because maybe I just haven't found the right way to do this. But given that the miniconda install works, it seems like it wasn't worth spending any more time on this approach.\r\n\r\nI took an alternate approach of creating a Python script that compares the requirements.txt and environment.yml. This script will now be run near the beginning of the Jenkins pipeline and will fail at a specific step to inform the user of what is happening. This is slightly preferable to adding a new dependency to requirements.txt, omitting it from environment.yml, and then not realizing that until the PCF deploy stage or later.\r\n\r\nThere is still at least one more approach we could try. We could use a Docker image as part of the PCF deploy. That Docker image would already have GDAL or the Debian-level deps already installed. My opinion on this approach is that this is also not worth the time at this point.\r\n\r\nThere are two branches for this story:\r\n* 52499-compare-deps (approach we're going with for now)\r\n* 52499-use-pip-in-pcf (for later if we get more information)\r\n\r\nI found the following links to be helpful\r\n* https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html\r\n* https://starkandwayne.com/blog/install-any-debian-package-with-your-cloud-foundry-app\r\n* https://github.com/cloudfoundry/apt-buildpack/#using-a-ppa\r\n* https://askubuntu.com/a/496529\r\n* https://ajurasz.github.io/2018-09-09-adding-deb-packages-to-cloud-foundry-instances/\r\n"
          }
        ]
      },
      {
        "id": 207192,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-26T14:04:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 207825,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-03T16:13:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52492,
    "subject": "Build the Run Schema Checks (loading) View Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 203029,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-04T15:34:21Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51470"
          }
        ]
      },
      {
        "id": 203030,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-04T15:36:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203044,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-04T16:31:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN I have clicked the \"Schema Checks\" button\r\nWHEN Schema Checks are processing\r\nTHEN the URL path should be /schema-checks-running\r\nAND THEN the animated loader is displayed on screen\r\nAND THEN the \"Running Schema Checks...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, depending on the size of your data, this may take a minute.\" message is displayed below the loader\r\nAND THEN a tabular view of all the Schema Checks that are running should be displayed below the message.\r\n\r\n\r\nZeplin link:  https://zpl.io/VKQAdkE",
            "new_value": "GIVEN I have clicked the \"Schema Checks\" button\r\nWHEN Schema Checks are processing\r\nTHEN the animated loader is displayed on screen\r\nAND THEN the \"Running Schema Checks...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, depending on the size of your data, this may take a minute.\" message is displayed below the loader\r\nAND THEN a tabular view of all the Schema Checks that are running should be displayed below the message.\r\n\r\n\r\nZeplin link:  https://zpl.io/VKQAdkE"
          }
        ]
      },
      {
        "id": 204107,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-06T21:28:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204108,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-06T21:41:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN I have clicked the \"Schema Checks\" button\r\nWHEN Schema Checks are processing\r\nTHEN the animated loader is displayed on screen\r\nAND THEN the \"Running Schema Checks...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, depending on the size of your data, this may take a minute.\" message is displayed below the loader\r\nAND THEN a tabular view of all the Schema Checks that are running should be displayed below the message.\r\n\r\n\r\nZeplin link:  https://zpl.io/VKQAdkE",
            "new_value": "GIVEN I have clicked the \"Schema Checks\" button\r\nWHEN Schema Checks are processing\r\nTHEN the animated loader is displayed on screen\r\nAND THEN the \"Running Schema Checks...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, depending on the size of your data, this may take a minute.\" message is displayed below the loader.\r\n\r\n\r\nZeplin link:  https://zpl.io/VKQAdkE"
          }
        ]
      },
      {
        "id": 204277,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T19:16:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204327,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-09T20:56:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52485,
    "subject": "Remove shapefiles from tmp directory",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 202976,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-04T14:32:23Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50787"
          }
        ]
      },
      {
        "id": 203428,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T17:23:51Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Discussion Needed: Remove shapefiles from tmp directory",
            "new_value": "Remove shapefiles from tmp directory"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* Remove old shapefiles from tmp directory. These are the files generated and left on the file system when shapefiles are exported.\r\n\r\n*NOTES:*\r\n* Need to know what approach we want to take. ",
            "new_value": "*Acceptance Criteria:*\r\n* Remove old shapefiles from tmp directory. These are the files generated and left on the file system when shapefiles are exported.\r\n* Investigate using file handler destructor to clean up data immediately after download.\r\n\r\n*NOTES:*\r\n* We need to return the zip file, the file string is returned to the front-end, but we don't know the timing. \r\n*We can potentially setup a chron job if the approach above doesn't work."
          }
        ]
      },
      {
        "id": 204278,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T19:20:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204309,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T20:04:47Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* Remove old shapefiles from tmp directory. These are the files generated and left on the file system when shapefiles are exported.\r\n* Investigate using file handler destructor to clean up data immediately after download.\r\n\r\n*NOTES:*\r\n* We need to return the zip file, the file string is returned to the front-end, but we don't know the timing. \r\n*We can potentially setup a chron job if the approach above doesn't work.",
            "new_value": "*Acceptance Criteria:*\r\n* Remove old shapefiles from tmp directory. These are the shapefiles being uploaded and generated by the system.\r\n\r\n*NOTES:*\r\n* We need to return the zip file, the file string is returned to the front-end, but we don't know the timing. \r\n* We can potentially setup a chron job if the approach above doesn't work.\r\n* Investigate using file handler destructor to clean up data immediately after download."
          }
        ]
      },
      {
        "id": 204528,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T16:03:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* Remove old shapefiles from tmp directory. These are the shapefiles being uploaded and generated by the system.\r\n\r\n*NOTES:*\r\n* We need to return the zip file, the file string is returned to the front-end, but we don't know the timing. \r\n* We can potentially setup a chron job if the approach above doesn't work.\r\n* Investigate using file handler destructor to clean up data immediately after download.",
            "new_value": "*Acceptance Criteria:*\r\n* Remove old shapefiles from tmp directory. These are the shapefiles being uploaded -and generated by the system- by the user. The transient data is generated as part of ingest and running pre-checks. This story has nothing to do with shapefile export.\r\n \r\n\r\n*NOTES:*\r\n-* We need to return the zip file, the file string is returned to the front-end, but we don't know the timing.- \r\n-* We can potentially setup a chron job if the approach above doesn't work.-\r\n-* Investigate using file handler destructor to clean up data immediately after download.-\r\nthese notes were copied from the +other story+ that cleans up transient data generated as part of shapefile export."
          }
        ]
      },
      {
        "id": 204530,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T16:04:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204561,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T16:20:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204650,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:37:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52445,
    "subject": "[Tech Debt] Backend: update dependency versions",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 202735,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T20:54:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "* @Flask-cors==3.0.7:@ Version 3.0.8 is SWAP approved\r\n* @Requests==2.21.0:@ SWAP approved and added to SPID\r\n* @Sqlalchemy==1.3.2:@ Version 1.3.4 is approved\r\n* @GDAL==2.4.0:@  SWAP approved and added to SPID \r\n* @Wiremock==1.2.0:@ Version 2.21 is approved ",
            "new_value": "* @Flask-cors==3.0.7:@ Version 3.0.8 is SWAP approved\r\n* @Requests==2.21.0:@ SWAP approved and added to SPID; Update to 2.22.0\r\n* @Sqlalchemy==1.3.2:@ Version 1.3.4 is approved\r\n* @GDAL==2.4.0:@  SWAP approved and added to SPID; Update to 3.0.1\r\n* @Wiremock==1.2.0:@ Version 2.21 is approved "
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205859,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:33:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207006,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-20T19:29:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207007,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-20T19:29:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208336,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-07T15:04:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208354,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:26:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52435,
    "subject": "SonarQube Findings - Fix these in development",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 202723,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:24:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207491,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:39:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 208154,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T18:42:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208384,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T16:37:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208385,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T16:38:27Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Based on feedback from Tim: \r\n\r\nFix the following: \r\n- leading zeros within css files should not be used. example `.25` instead of `0.25`\r\n- use `box-sizing: border-box;` where applicable\r\n- quote font families in single quotes. example `'Arial'`\r\n- cscc files should end in a new line (really all files should)\r\n- simplify selectors where possible. Avoid `.checks .error-table .body .row .cell {` (5 items, sonar is looking for 3 max)\r\n- Don't use `TODO` statements\r\n- file name matches what it exports. `HttpHelper` instead of `HttpHelpers`\r\n- class selectors should match `^[a-z][-a-z0-9]*$` `.usa-alert__text` should be `.usa-alert-text`\r\n- Use single quotes for strings\r\n- No empty functions or blocks of code\r\n- Low cognitive complexity\r\n- No commented out code",
            "new_value": "Based on feedback from Tim: \r\n\r\nFix the following: \r\n- leading zeros within css files should not be used. example `.25` instead of `0.25`\r\n- use `box-sizing: border-box;` where applicable\r\n- quote font families in single quotes. example `'Arial'`\r\n- cscc files should end in a new line (really all files should)\r\n- simplify selectors where possible. Avoid `.checks .error-table .body .row .cell {` (5 items, sonar is looking for 3 max)\r\n- Don't use `TODO` statements\r\n- file name matches what it exports. `HttpHelper` instead of `HttpHelpers`\r\n- class selectors should match `^[a-z][-a-z0-9]*$` `.usa-alert__text` should be `.usa-alert-text`\r\n- Use single quotes for strings\r\n- No empty functions or blocks of code\r\n- Low cognitive complexity\r\n- No commented out code\r\n\r\n*Note*\r\nSeveral new stories were broken out from this one. Many of the items above will be handled in other stories.\r\n* 53166 stylelint\r\n* 52409 refactor precheck_engine\r\n* 53146 refactor Results/index.js\r\n* 53141 refactor ker_wrapper.py"
          }
        ]
      },
      {
        "id": 209087,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-08T17:53:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 209137,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-08T19:12:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52428,
    "subject": "Windows Only - failure when checking zip files",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 202600,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T16:07:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 202622,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-03T16:48:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202653,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-03T17:36:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202725,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T20:26:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202728,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:27:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202944,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:17:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 203049,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T16:35:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 203078,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T18:46:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52424,
    "subject": "prevent KER download when there's no relevant data to export",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 202595,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:57:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "At this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen a KER is loaded and there is no geometry populated on the KER (a KER we haven't worked on yet)\r\n2.\tThere is no shapefile available for that KER. \r\n\r\nIn either scenario, the user will load their file and cannot export a shapefile because the backend throws an error. \r\n\r\nShould we prevent completely the user from being able to select the \"Export Shapefile\" option? If we do let them, the user might get confused that they can select something, but then nothing happens. \r\n\r\nCurrently, we have an error message on the backend. We are thinking we can display a message to the user, too. \r\n•\tThis is what it currently states: “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n•\tShould this message be modified?\r\n",
            "new_value": "As a quality assurance user running the KERs on the file I uploaded\r\nI want to know if  there is an error with the KERs running\r\nSo that I know why the shapefile export drop down selection does not work\r\n\r\nGiven I am running KERs against the uploaded file\r\nWhen I select the export shapefile drop down selection\r\nThen the shapefile export option will not be avaialble\r\nAnd I will see an error message display\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen a KER is loaded and there is no geometry populated on the KER (a KER we haven't worked on yet)\r\n2.\tThere is no shapefile available for that KER. \r\n\r\nIn either scenario, the user will load their file and cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n"
          }
        ]
      },
      {
        "id": 202596,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:57:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 202604,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T16:10:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user running the KERs on the file I uploaded\r\nI want to know if  there is an error with the KERs running\r\nSo that I know why the shapefile export drop down selection does not work\r\n\r\nGiven I am running KERs against the uploaded file\r\nWhen I select the export shapefile drop down selection\r\nThen the shapefile export option will not be avaialble\r\nAnd I will see an error message display\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen a KER is loaded and there is no geometry populated on the KER (a KER we haven't worked on yet)\r\n2.\tThere is no shapefile available for that KER. \r\n\r\nIn either scenario, the user will load their file and cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n",
            "new_value": "As a quality assurance user running the KERs on the file I uploaded\r\nI want to know if  there is an error with the KERs running\r\nSo that I know why the shapefile export drop down selection does not work\r\n\r\nGiven I am running KERs against the uploaded file\r\nWhen I select the export shapefile drop down selection\r\nThen the shapefile export option will not be avaialble\r\nAnd I will see an error message display\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen a KER is loaded and there is no geometry populated on the KER (a KER we haven't worked on yet)\r\n2.\tThere is no shapefile available for that KER. \r\n\r\nIn either scenario, the user will load their file and cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n"
          }
        ]
      },
      {
        "id": 202972,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-04T14:24:10Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER file upload run error",
            "new_value": "prevent KER shapefile export when there's no data to export"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user running the KERs on the file I uploaded\r\nI want to know if  there is an error with the KERs running\r\nSo that I know why the shapefile export drop down selection does not work\r\n\r\nGiven I am running KERs against the uploaded file\r\nWhen I select the export shapefile drop down selection\r\nThen the shapefile export option will not be avaialble\r\nAnd I will see an error message display\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen a KER is loaded and there is no geometry populated on the KER (a KER we haven't worked on yet)\r\n2.\tThere is no shapefile available for that KER. \r\n\r\nIn either scenario, the user will load their file and cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n",
            "new_value": "As a quality assurance user wanting to export shapefiles after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export\r\nSo that I am not confused when I click export shapefile and nothing happens\r\n\r\nGiven I have already run KER checks against the uploaded file\r\nWhen I select the export shapefile drop down selection\r\nThen the shapefile export option will not be actionable\r\nAnd I will see an error message display (*this may not be needed*: let UI/UX decide. disabled button/option may be sufficient)\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export.\r\n\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n"
          }
        ]
      },
      {
        "id": 204164,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T16:05:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user wanting to export shapefiles after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export\r\nSo that I am not confused when I click export shapefile and nothing happens\r\n\r\nGiven I have already run KER checks against the uploaded file\r\nWhen I select the export shapefile drop down selection\r\nThen the shapefile export option will not be actionable\r\nAnd I will see an error message display (*this may not be needed*: let UI/UX decide. disabled button/option may be sufficient)\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export.\r\n\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n",
            "new_value": "As a quality assurance user wanting to export shapefiles after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export\r\nSo that I am not confused when I click export shapefile and nothing happens\r\n\r\nGiven I have already run KER checks against the uploaded file\r\nWhen there is no shapefile to download\r\nThen I will see a button that says \"Download CSV\"\r\nAnd When there is a shapefile to download\r\nThen I will see a \"Download All Conditions\" dropdown button with the options to download .shp, .csv, or both.\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export.\r\n\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n"
          }
        ]
      },
      {
        "id": 204168,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T16:15:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 204835,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-10T21:47:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user wanting to export shapefiles after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export\r\nSo that I am not confused when I click export shapefile and nothing happens\r\n\r\nGiven I have already run KER checks against the uploaded file\r\nWhen there is no shapefile to download\r\nThen I will see a button that says \"Download CSV\"\r\nAnd When there is a shapefile to download\r\nThen I will see a \"Download All Conditions\" dropdown button with the options to download .shp, .csv, or both.\r\n\r\nNotes: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export.\r\n\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAcceptance Criteria:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n",
            "new_value": "As a quality assurance user wanting to export shapefiles after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export\r\nSo that I am not confused when I click export shapefile and nothing happens\r\n\r\nAcceptance Criteria:\r\nGIVEN I have selected the \"Download Shape File\" option from the dropdown\r\nWHEN there is no shapefile to download\r\nTHEN a browser alert dialog appears \"Sorry. There was no geometry data available to build your shape file. A CSV file is available for download.\"\r\n\r\n\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export.\r\n\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n"
          }
        ]
      },
      {
        "id": 205011,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-11T14:25:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205023,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-11T14:45:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 205571,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-12-12T21:54:11Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "prevent KER shapefile export when there's no data to export",
            "new_value": "prevent KER download when there's no relevant data to export"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user wanting to export shapefiles after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export\r\nSo that I am not confused when I click export shapefile and nothing happens\r\n\r\nAcceptance Criteria:\r\nGIVEN I have selected the \"Download Shape File\" option from the dropdown\r\nWHEN there is no shapefile to download\r\nTHEN a browser alert dialog appears \"Sorry. There was no geometry data available to build your shape file. A CSV file is available for download.\"\r\n\r\n\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export.\r\n\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n",
            "new_value": "As a quality assurance user wanting to export shapefiles and/or .CSVs after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export \r\n_AND not allow downloading any results if all KERS pass_\r\nSo that I am not confused when I cannot download anything\r\n\r\nAcceptance Criteria:\r\nGIVEN I have selected the \"Download Shape File\" option from the dropdown\r\nWHEN there is no shapefile to download\r\nTHEN a browser alert dialog appears \"Sorry. There was no geometry data available to build your shape file. A CSV file is available for download.\"\r\n_\r\nGIVEN I run the KERs on a file with no KER Conditions\r\nWHEN the KER page with the success alert loads\r\nTHEN there is no button to download results._\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export. _If there is nothing to export as there are not conditions the user will still require a QAC-R and the button to download that should remain on the screen, however the \"Download Results\" dropdown can be removed/hidden. \r\n_\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n\r\n(Updated 12/12/19 with italics by Arianna-- if you have any questions ask her!)"
          }
        ]
      },
      {
        "id": 205573,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-12-12T21:55:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user wanting to export shapefiles and/or .CSVs after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export \r\n_AND not allow downloading any results if all KERS pass_\r\nSo that I am not confused when I cannot download anything\r\n\r\nAcceptance Criteria:\r\nGIVEN I have selected the \"Download Shape File\" option from the dropdown\r\nWHEN there is no shapefile to download\r\nTHEN a browser alert dialog appears \"Sorry. There was no geometry data available to build your shape file. A CSV file is available for download.\"\r\n_\r\nGIVEN I run the KERs on a file with no KER Conditions\r\nWHEN the KER page with the success alert loads\r\nTHEN there is no button to download results._\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export. _If there is nothing to export as there are not conditions the user will still require a QAC-R and the button to download that should remain on the screen, however the \"Download Results\" dropdown can be removed/hidden. \r\n_\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n> * Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision.\r\n\r\n(Updated 12/12/19 with italics by Arianna-- if you have any questions ask her!)",
            "new_value": "As a quality assurance user wanting to export shapefiles and/or .CSVs after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export \r\n_AND not allow downloading any results if all KERS pass_\r\nSo that I am not confused when I cannot download anything\r\n\r\nAcceptance Criteria:\r\nGIVEN I have selected the \"Download Shape File\" option from the dropdown\r\nWHEN there is no shapefile to download\r\nTHEN a browser alert dialog appears \"Sorry. There was no geometry data available to build your shape file. A CSV file is available for download.\"\r\n_\r\nGIVEN I run the KERs on a file with no KER Conditions\r\nWHEN the KER page with the success alert loads\r\nTHEN there is no button to download results._\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export. _If there is nothing to export as there are not conditions the user will still require a QAC-R and the button to download that should remain on the screen, however the \"Download Results\" dropdown can be removed/hidden. \r\n_\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n* Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision. _UI has decided to remove the button entirely._\r\n\r\n(Updated 12/12/19 with italics by Arianna-- if you have any questions ask her!)"
          }
        ]
      },
      {
        "id": 205658,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-13T15:50:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205990,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-16T16:17:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user wanting to export shapefiles and/or .CSVs after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export \r\n_AND not allow downloading any results if all KERS pass_\r\nSo that I am not confused when I cannot download anything\r\n\r\nAcceptance Criteria:\r\nGIVEN I have selected the \"Download Shape File\" option from the dropdown\r\nWHEN there is no shapefile to download\r\nTHEN a browser alert dialog appears \"Sorry. There was no geometry data available to build your shape file. A CSV file is available for download.\"\r\n_\r\nGIVEN I run the KERs on a file with no KER Conditions\r\nWHEN the KER page with the success alert loads\r\nTHEN there is no button to download results._\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export. _If there is nothing to export as there are not conditions the user will still require a QAC-R and the button to download that should remain on the screen, however the \"Download Results\" dropdown can be removed/hidden. \r\n_\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n* Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision. _UI has decided to remove the button entirely._\r\n\r\n(Updated 12/12/19 with italics by Arianna-- if you have any questions ask her!)",
            "new_value": "As a quality assurance user wanting to export shapefiles and/or .CSVs after running KER checks,\r\nI want the UI to not allow downloading shapefiles of the conditions when there is no applicable data to export \r\n_AND not allow downloading any results if all KERS pass_\r\nSo that I am not confused when I cannot download anything\r\n\r\nAcceptance Criteria:\r\nGIVEN there is no shapefile to download\r\nWHEN the KER results are displayed\r\nTHEN the Download All Conditions\" dropdown button will *not* display\r\nAnd a \"Download CSV\" button will display with the ability to download a csv of all Ker Conditions available.\r\n_\r\nGIVEN I run the KERs on a file with no KER Conditions\r\nWHEN the KER page with the success alert loads\r\nTHEN there is no button to download results._\r\n\r\n==========================================\r\n\r\nContext: \r\nAt this point, we have two scenarios where an error happens on the backend and we need to know how to proceed.\r\n1.\tWhen the only KER conditions found do not have geometry populated on the KER (a KER for which we haven't done the corresponding results story). In this case, we have found conditions, but we can't export as shapefile because we're not ready to for those specific KERs.\r\n2.\tNo KER conditions whatsoever have been found. In this case, there is nothing at all to export. _If there is nothing to export as there are not conditions the user will still require a QAC-R and the button to download that should remain on the screen, however the \"Download Results\" dropdown can be removed/hidden. \r\n_\r\nIn either scenario, the user will run the KER checks but cannot export a shapefile because the backend throws an error. \r\n\r\nAdditional context:\r\n* We shouldn't let the customer export the shapefile because they cannot do anything when the error occurs. The shapefile export option will not be actionable. \r\n* The error message in the code should stay as is:  “Either no KER conditions have been found OR the KER conditions found cannot yet be exported to shapefile.”\r\n* Clarification: error message only happens when the button is clicked and there's no data to export to shapefile. if button becomes \"not actionable\" in this scenario, user will not receive this error message because nothing happens when the button is clicked. perhaps UI/UX wants to add additional messaging in the UI in this case. that's their decision. _UI has decided to remove the button entirely._\r\n\r\n(Updated 12/12/19 with italics by Arianna-- if you have any questions ask her!)"
          }
        ]
      },
      {
        "id": 206059,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:25:34Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206583,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "As a point of learning I am curious about my code vs the code that was implimented.\r\nThis: \r\n<pre>\r\n let hasGeom = false;\r\n        if (viewScreen === 'kers') {\r\n            noGeom = Object.values(kers)\r\n                .filter((ker) => !empty(ker.exceptions));\r\n            noGeom.forEach((exceptionIndex) => (exceptionIndex.exceptions.forEach((exception) => {\r\n                if (exception.geom !== null) {\r\n                    hasGeom = true;\r\n                }\r\n            })\r\n            ));\r\n        }\r\n</pre>\r\nVS this:\r\n<pre>\r\n\r\n/**\r\n         * Function to check if geom is populated on each exception.\r\n         *\r\n         * @param {object} theKers - Get the Kers Object.\r\n         * @returns {object} Returns a filtered object of exceptions with geom.\r\n         */\r\n        const generateAnArrayOfOnlyGeom = (theKers) => (\r\n            Object.values(theKers)\r\n                .filter((ker) => !ker.passed)\r\n                .map((ker) => ker.exceptions.filter((exception) => exception.geom))\r\n                .join('')\r\n        );\r\n        const hasGeom = generateAnArrayOfOnlyGeom(kers) || false;\r\n</pre>",
        "created_on": "2019-12-18T21:24:52Z",
        "details": []
      },
      {
        "id": 206655,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-19T14:46:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 206724,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T17:04:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 206731,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T17:31:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 206732,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T17:31:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 206735,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T17:45:44Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "52937"
          }
        ]
      }
    ]
  },
  {
    "id": 52413,
    "subject": "[Tech Debt] Update the application to use Blue-Green deployment",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 202512,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T14:19:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Update the Jenkinsfile to use Blue-Green deployment within PCF. \r\n\r\nThis requires that the frontend and backend be switched over at the same time. ",
            "new_value": "Update the Jenkinsfile to use Blue-Green deployment within PCF. \r\n\r\nThis may require that the frontend and backend be switched over at the same time. "
          }
        ]
      },
      {
        "id": 202513,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T14:20:17Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205084,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-11T16:13:36Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Update the application to use Blue-Green deployment",
            "new_value": "[Tech Debt] Update the application to use Blue-Green deployment"
          }
        ]
      },
      {
        "id": 205858,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:33:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 210738,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:39:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211434,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-24T18:28:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213054,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-02-03T14:45:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Update the Jenkinsfile to use Blue-Green deployment within PCF. \r\n\r\nThis may require that the frontend and backend be switched over at the same time. ",
            "new_value": "Blue-Green deployment is dependent on changing how the qac schema within the database is being handled. Currently the API destroys the qac schema and rebuilds it on each deployment. \r\n\r\n\r\nUpdate the Jenkinsfile to use Blue-Green deployment within PCF. \r\n\r\nThis may require that the frontend and backend be switched over at the same time. "
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213075,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-02-03T15:06:23Z",
        "details": [
          {
            "property": "relation",
            "name": "blocked",
            "new_value": "54334"
          }
        ]
      },
      {
        "id": 213236,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:54:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 52409,
    "subject": "[Tech Debt] Backend: Refactor `precheck_engine`",
    "category": "Web App team",
    "status": "New",
    "journals": [
      {
        "id": 202501,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T14:08:07Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "52410"
          }
        ]
      },
      {
        "id": 208175,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:19:33Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "53141"
          }
        ]
      },
      {
        "id": 208190,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:32:21Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "52410"
          }
        ]
      },
      {
        "id": 208192,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:32:25Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "53141"
          }
        ]
      },
      {
        "id": 208194,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T19:32:39Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 208304,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T13:20:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213232,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:53:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 52407,
    "subject": "[Tech Debt] Frontend: Add code coverage for javascript code",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 202494,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T13:55:56Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "52406"
          }
        ]
      },
      {
        "id": 202497,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T13:57:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Code coverage is our measure of effective unit testing. Adding the ability to report unit test coverage will allow us to enforce higher standards.",
            "new_value": "Code coverage is our measure of effective unit testing. Adding the ability to report unit test coverage will allow us to enforce higher standards.\r\n\r\nCode coverage should be added as a gate within Jenkins file."
          }
        ]
      },
      {
        "id": 205765,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:55:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206569,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-18T20:16:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206584,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-18T21:30:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Code coverage is our measure of effective unit testing. Adding the ability to report unit test coverage will allow us to enforce higher standards.\r\n\r\nCode coverage should be added as a gate within Jenkins file.",
            "new_value": "Code coverage is our measure of effective unit testing. Adding the ability to report unit test coverage will allow us to enforce higher standards.\r\n\r\nCode coverage should be added as a gate within Jenkins file at a later date.\r\n\r\nAcceptance Criteria:\r\n* Add command to run_dev.sh to run code coverage: `./run_dev.sh coverage frontend`\r\n* Add command to run_dev.sh to open html report after code coverage has ran: `./run_dev.sh coverage report`\r\n* Add npm commands to run code coverage: `npm run coverage`\r\n* Coverage files should not be checked into source control."
          }
        ]
      },
      {
        "id": 206893,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-20T14:55:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207190,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-26T14:03:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 207193,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-26T15:22:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52406,
    "subject": "[Tech Debt] Backend: Add code coverage for python code",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 202493,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T13:55:56Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "52407"
          }
        ]
      },
      {
        "id": 202499,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-03T13:58:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Code coverage is our measure of effective unit testing. Adding the ability to report unit test coverage will allow us to enforce higher standards.",
            "new_value": "Code coverage is our measure of effective unit testing. Adding the ability to report unit test coverage will allow us to enforce higher standards.\r\n\r\nCode coverage should be added as a gate in Jenkinsfile."
          }
        ]
      },
      {
        "id": 205764,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:55:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206999,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-20T19:08:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207195,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-26T16:12:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207487,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:38:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52405,
    "subject": "[Tech Debt] Backend: Move the development dependencies into a separate file",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 205708,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T17:30:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 205763,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:55:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 206917,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-20T15:51:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207034,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-20T21:24:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207196,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-26T16:12:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52348,
    "subject": "Display KERs which have passed under a tab on the KER Results Summary Page",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 202128,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-11-27T19:28:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.\r\n\r\nNotes from Conversation with Jeff",
            "new_value": "As a user,\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\nAnd clicking on a KER with 0 results shows the title and description with no results table\r\nAnd I can toggle back to original state with conditions greater than 0 (\"Hide empty results\", or something)\r\n\r\nAcceptance Criteria\r\nButton to toggle all vs. filtered ker results in the left nav\r\nLeft nav updates to show all vs. filtered\r\nResults shows results table for kers with conditions like normal, and no table when empty"
          }
        ]
      },
      {
        "id": 202706,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T19:44:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "6"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206303,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:18:26Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Button to toggle displaying KERs and Pre-checks that have passed in the Side bar.",
            "new_value": "Display KERs and Pre-checks that have passed in the Side Nav"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\nAnd clicking on a KER with 0 results shows the title and description with no results table\r\nAnd I can toggle back to original state with conditions greater than 0 (\"Hide empty results\", or something)\r\n\r\nAcceptance Criteria\r\nButton to toggle all vs. filtered ker results in the left nav\r\nLeft nav updates to show all vs. filtered\r\nResults shows results table for kers with conditions like normal, and no table when empty",
            "new_value": "*Needs Design*\r\n\r\nAs a user\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\nAnd clicking on a KER with 0 results shows the title and description with no results table\r\nAnd I can toggle back to original state with conditions greater than 0 (\"Hide empty results\", or something)\r\n\r\nAcceptance Criteria\r\nButton to toggle all vs. filtered ker results in the left nav\r\nLeft nav updates to show all vs. filtered\r\nResults shows results table for kers with conditions like normal, and no table when empty"
          }
        ]
      },
      {
        "id": 207507,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:44:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207835,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "We are discussing this Story, users do need to know which KERs/Schema-Checks have run, even if they have no conditions/ exceptions. The summary may be a better way to display this.\r\nKERs have meaningful states; Run with Conditions, Run without Conditions, Not Run.\r\n\r\n(This information is already stored in the return from the API, we know which KERs have 0 results.)",
        "created_on": "2020-01-03T19:09:39Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Display KERs and Pre-checks that have passed in the Side Nav",
            "new_value": "Display KERs and Pre-checks that have passed \"show all KERs\""
          }
        ]
      },
      {
        "id": 207836,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-03T19:11:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Needs Design*\r\n\r\nAs a user\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\nAnd clicking on a KER with 0 results shows the title and description with no results table\r\nAnd I can toggle back to original state with conditions greater than 0 (\"Hide empty results\", or something)\r\n\r\nAcceptance Criteria\r\nButton to toggle all vs. filtered ker results in the left nav\r\nLeft nav updates to show all vs. filtered\r\nResults shows results table for kers with conditions like normal, and no table when empty",
            "new_value": "*Needs Design*\r\n\r\nAs a user\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\nAnd clicking on a KER with 0 results shows the title and description with no results table\r\nAnd I can toggle back to original state with conditions greater than 0 (\"Hide empty results\", or something)\r\n\r\nAcceptance Criteria\r\nButton to toggle all vs. filtered ker results in the left nav\r\nLeft nav updates to show all vs. filtered\r\nResults shows results table for kers with conditions like normal, and no table when empty.\r\n\r\n\r\nWe are discussing this Story, users do need to know which KERs/Schema-Checks have run, even if they have no conditions/ exceptions. The summary may be a better way to display this.\r\nKERs have meaningful states; Run with Conditions, Run without Conditions, Not Run.\r\n\r\n(This information is already stored in the return from the API, we know which KERs have 0 results.)"
          }
        ]
      },
      {
        "id": 207982,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-06T13:56:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 209358,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-09T21:51:55Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Display KERs and Pre-checks that have passed \"show all KERs\"",
            "new_value": "Display KERs which have passed under a tab on the KER Results Summary Page"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Needs Design*\r\n\r\nAs a user\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not return results are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"show all KERs\" (or something synonymous) \r\nThen all the KERs are shown in the left nav (including those with 0 results aka conditions aka exceptions)\r\nAnd clicking on a KER with 0 results shows the title and description with no results table\r\nAnd I can toggle back to original state with conditions greater than 0 (\"Hide empty results\", or something)\r\n\r\nAcceptance Criteria\r\nButton to toggle all vs. filtered ker results in the left nav\r\nLeft nav updates to show all vs. filtered\r\nResults shows results table for kers with conditions like normal, and no table when empty.\r\n\r\n\r\nWe are discussing this Story, users do need to know which KERs/Schema-Checks have run, even if they have no conditions/ exceptions. The summary may be a better way to display this.\r\nKERs have meaningful states; Run with Conditions, Run without Conditions, Not Run.\r\n\r\n(This information is already stored in the return from the API, we know which KERs have 0 results.)",
            "new_value": "*Needs Design*\r\n\r\nAs a user\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not have conditions are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"Passed\" tab on the summary page \r\nThen all the KERs which ran but returned 0 conditions are shown with Title, Description, and the link for details\r\n\r\n\r\nAcceptance Criteria\r\nTab on Summary page changes the view to show all KERs which ran and returned 0 results with info specified\r\n\r\nThis is one part of a plan to ensure we show all KERs on the site, regardless of status (Run and has conditions, run and has no conditions, failed to run, not selected to run)\r\nThere should be no information that a user should have to resort to viewing a exported document to get, right?\r\n\r\n(This information is already stored in the return from the API, we know which KERs have 0 results.)\r\n"
          }
        ]
      },
      {
        "id": 209449,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-10T17:31:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Needs Design*\r\n\r\nAs a user\r\nI would like to view all KERs, in the UI even those without exceptions (0)\r\nSo that I be assured that those KERs which did not have conditions are part of QAC and \"ran\"\r\n\r\nGiven I view KER results\r\nWhen I click \"Passed\" tab on the summary page \r\nThen all the KERs which ran but returned 0 conditions are shown with Title, Description, and the link for details\r\n\r\n\r\nAcceptance Criteria\r\nTab on Summary page changes the view to show all KERs which ran and returned 0 results with info specified\r\n\r\nThis is one part of a plan to ensure we show all KERs on the site, regardless of status (Run and has conditions, run and has no conditions, failed to run, not selected to run)\r\nThere should be no information that a user should have to resort to viewing a exported document to get, right?\r\n\r\n(This information is already stored in the return from the API, we know which KERs have 0 results.)\r\n",
            "new_value": "As a QA user I need to see all of the KERs that returned 0 exceptions in addition to the ones that returned exceptions so I can be confident my data was fully analyzed\r\n\r\nGIVEN I am viewing the KER Results Summary\r\nWHEN I click the \"Passed\" tab\r\nTHEN the view is toggled to reveal a summary of all KERs that ran and passed\r\n\r\nAcceptance Criteria: See checklist below\r\n"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3835",
            "new_value": "3823"
          }
        ]
      },
      {
        "id": 210737,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:39:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211070,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-22T15:30:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211338,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-24T17:02:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QA user I need to see all of the KERs that returned 0 exceptions in addition to the ones that returned exceptions so I can be confident my data was fully analyzed\r\n\r\nGIVEN I am viewing the KER Results Summary\r\nWHEN I click the \"Passed\" tab\r\nTHEN the view is toggled to reveal a summary of all KERs that ran and passed\r\n\r\nAcceptance Criteria: See checklist below\r\n",
            "new_value": "As a QA user I need to see all of the KERs that returned 0 exceptions in addition to the ones that returned exceptions so I can be confident my data was fully analyzed\r\n\r\nGIVEN I am viewing the KER Results Summary\r\nWHEN I click the \"Passed\" tab\r\nTHEN the view is toggled to reveal a summary of all KERs that ran and passed\r\n\r\nAcceptance Criteria: See checklist below\r\n\r\n*Note for last AC item:*\r\nWe are pulling the KER Short & Full name in via the metadata endpoint. Not all KERs are in the database table/endpoint so those KERs only show the short name.\r\nThe links were not added for now because there is nowhere for them to link to at the moment.\r\n"
          }
        ]
      },
      {
        "id": 211339,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-24T17:04:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QA user I need to see all of the KERs that returned 0 exceptions in addition to the ones that returned exceptions so I can be confident my data was fully analyzed\r\n\r\nGIVEN I am viewing the KER Results Summary\r\nWHEN I click the \"Passed\" tab\r\nTHEN the view is toggled to reveal a summary of all KERs that ran and passed\r\n\r\nAcceptance Criteria: See checklist below\r\n\r\n*Note for last AC item:*\r\nWe are pulling the KER Short & Full name in via the metadata endpoint. Not all KERs are in the database table/endpoint so those KERs only show the short name.\r\nThe links were not added for now because there is nowhere for them to link to at the moment.\r\n",
            "new_value": "As a QA user I need to see all of the KERs that returned 0 exceptions in addition to the ones that returned exceptions so I can be confident my data was fully analyzed\r\n\r\nGIVEN I am viewing the KER Results Summary\r\nWHEN I click the \"Passed\" tab\r\nTHEN the view is toggled to reveal a summary of all KERs that ran and passed\r\n\r\nAcceptance Criteria: See checklist below\r\n\r\n*Note for last AC item:*\r\nWe are pulling the KER Short & Full name in via the metadata endpoint. Not all KERs are in the database table/endpoint so those KERs only show the short name.\r\nThe links were not added for now because there is nowhere for them to link to at the moment.\r\n\r\n*Other Note:*\r\nThis story also contains a refactor of the overall architecture of the frontend by introducing a store with global state and actions to manage the data.\r\n"
          }
        ]
      },
      {
        "id": 212976,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T18:30:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 213088,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T15:12:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 213156,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-03T17:12:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52279,
    "subject": "Handle Individual KER failures",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 201875,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-26T18:36:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 209338,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T20:21:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* Possibly return the KER check failure field (KER_Check_Failure) in the return object\r\n* passed = false\r\n* This helps the frontend know how to handle the failure\r\n\r\nAs a Quality Assurance user\r\nI want to know what KERs failed during the KER processing\r\nSo that I know how to fix my file\r\n\r\nGiven a quality assurance user loads a KER file\r\nWhen the KER file fails during the KER processing in the backend\r\nThen communicate failure to the frontend\r\nAnd note which KERs failed\r\nAnd give a reason why the KER failed",
            "new_value": "*Acceptance Criteria:*\r\n* Possibly return the KER check failure field (KER_Check_Failure) in the return object\r\n* This helps the frontend know how to handle the failure\r\n\r\nAs a Quality Assurance user\r\nI want to know what KERs failed during the KER processing\r\nSo that I know how to fix my file\r\n\r\nGiven an individual KER has failed to run \r\nWhen the other KERs continue to run\r\nThen the status of the fail KERs is displayed to the user "
          }
        ]
      },
      {
        "id": 209339,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T20:23:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* Possibly return the KER check failure field (KER_Check_Failure) in the return object\r\n* This helps the frontend know how to handle the failure\r\n\r\nAs a Quality Assurance user\r\nI want to know what KERs failed during the KER processing\r\nSo that I know how to fix my file\r\n\r\nGiven an individual KER has failed to run \r\nWhen the other KERs continue to run\r\nThen the status of the fail KERs is displayed to the user ",
            "new_value": "*Acceptance Criteria:*\r\n\r\nAs a Quality Assurance user\r\nI want to know what KERs failed while other KERs processed\r\nSo I know who to contact about the error\r\n\r\nGiven an individual KER has failed to run \r\nWhen the other KERs continue to run\r\nThen the status of the fail KERs is displayed to the user \r\nAND Then a link will be provided for support\r\n\r\n*NOTE: Design Needed*"
          }
        ]
      },
      {
        "id": 209448,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-10T17:17:33Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Handle Individual KER failure alerts",
            "new_value": "Handle Individual KER failures"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\nAs a Quality Assurance user\r\nI want to know what KERs failed while other KERs processed\r\nSo I know who to contact about the error\r\n\r\nGiven an individual KER has failed to run \r\nWhen the other KERs continue to run\r\nThen the status of the fail KERs is displayed to the user \r\nAND Then a link will be provided for support\r\n\r\n*NOTE: Design Needed*",
            "new_value": "As a Quality Assurance user\r\nI want to know what KERs failed while other KERs processed\r\nSo I know who to contact about the error\r\n\r\nGIVEN KERs are being processed\r\nWHEN an individual KER has failed to run\r\nTHEN non-failing KERs continue to run\r\nAND THEN the status of all KERS that failed to run are displayed in an alert dialog in the KERs summary\r\nAND THEN the alert dialog displays links to upload a new file and contact support\r\n\r\nAcceptance Criteria: See checklist below"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "3823"
          }
        ]
      },
      {
        "id": 210736,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:39:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 210990,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T21:02:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212975,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-31T18:30:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 212998,
        "user": {
          "id": 3857,
          "name": "Olsen.Erik.1572615312"
        },
        "notes": "",
        "created_on": "2020-01-31T22:16:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Quality Assurance user\r\nI want to know what KERs failed while other KERs processed\r\nSo I know who to contact about the error\r\n\r\nGIVEN KERs are being processed\r\nWHEN an individual KER has failed to run\r\nTHEN non-failing KERs continue to run\r\nAND THEN the status of all KERS that failed to run are displayed in an alert dialog in the KERs summary\r\nAND THEN the alert dialog displays links to upload a new file and contact support\r\n\r\nAcceptance Criteria: See checklist below",
            "new_value": "As a Quality Assurance user\r\nI want to know what KERs failed while other KERs processed\r\nSo I know who to contact about the error\r\n\r\nGIVEN KERs are being processed\r\nWHEN an individual KER has failed to run\r\nTHEN non-failing KERs continue to run\r\nAND THEN the status of all KERS that failed to run are displayed in an alert dialog in the KERs summary\r\nAND THEN the alert dialog displays links to upload a new file and contact support\r\n\r\nAcceptance Criteria: See checklist below\r\n\r\nTo verify the frontend piece, run storybook to see the output for error state:\r\n(locally, run ./run_dev.sh storybook)\r\nSummary: KERs -> Error"
          }
        ]
      },
      {
        "id": 213084,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T15:11:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 213152,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-02-03T17:11:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52209,
    "subject": "SPIKE: Develop Components in Isolation with Storybook",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 205979,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-16T14:57:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "When developing components, we need a way to manually approve the components without first integrating them into our application.\r\n\r\nQuestions we need answered:\r\n* Can our PO easily test a component without it being used in the app?\r\n* Can our component stories move across the board without the component being used within the app?\r\n\r\nNotes:\r\nStorybook docs: https://storybook.js.org/docs/basics/introduction/",
            "new_value": "When developing components, we need a way to manually approve the components without first integrating them into our application.\r\n\r\nQuestions we need answered:\r\n* Can our PO easily test a component without it being used in the app?\r\n* Can our component stories move across the board without the component being used within the app?\r\n\r\nNotes:\r\nStorybook docs: https://storybook.js.org/docs/basics/introduction/\r\nA11y addon: https://www.npmjs.com/package/@storybook/addon-a11y\r\nhttps://medium.com/storybookjs/instant-accessibility-qa-linting-in-storybook-4a474b0f5347"
          }
        ]
      },
      {
        "id": 206351,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:51:07Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206353,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:51:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206997,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-20T19:07:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 206998,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-20T19:07:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207038,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-20T22:22:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207478,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-02T16:13:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "When developing components, we need a way to manually approve the components without first integrating them into our application.\r\n\r\nQuestions we need answered:\r\n* Can our PO easily test a component without it being used in the app?\r\n* Can our component stories move across the board without the component being used within the app?\r\n\r\nNotes:\r\nStorybook docs: https://storybook.js.org/docs/basics/introduction/\r\nA11y addon: https://www.npmjs.com/package/@storybook/addon-a11y\r\nhttps://medium.com/storybookjs/instant-accessibility-qa-linting-in-storybook-4a474b0f5347",
            "new_value": "When developing components, we need a way to manually approve the components without first integrating them into our application.\r\n\r\nQuestions we need answered:\r\n* Can our PO easily test a component without it being used in the app?\r\n* Can our component stories move across the board without the component being used within the app?\r\n\r\nNotes:\r\nStorybook docs: https://storybook.js.org/docs/basics/introduction/\r\nA11y addon: https://www.npmjs.com/package/@storybook/addon-a11y\r\nhttps://medium.com/storybookjs/instant-accessibility-qa-linting-in-storybook-4a474b0f5347\r\n\r\n\r\nAnswers:\r\n* Storybook has the ability to build a static version of the site that can be deployed with the app.\r\n* Components can be developed in isolation using storybook without being included in the app.\r\n* There is a storybook addon that allows you to develop routing aware components: https://www.npmjs.com/package/storybook-react-router"
          }
        ]
      },
      {
        "id": 207821,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-03T15:47:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 207822,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-03T15:48:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208134,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-06T18:06:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208352,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:25:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52175,
    "subject": "[TECH DEBT] Refactor KER exception object",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 201346,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-22T20:47:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3825"
          }
        ]
      },
      {
        "id": 201347,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-22T20:47:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201353,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-22T22:43:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201356,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "To the poor soul who picks this up,\r\n\r\nThere is a branch already created called `52157-ker-exception-refactor`\r\nLook over the changes. I have essentially taken out the combine method in favor of just having a list of exceptions.\r\nA few caveats:\r\n1) The new structure is really only working as expected for the kers that already get additional information(UID and GEOM). All the other kers go though the \"legacy\" path.\r\n2) The tests that handle the old data structure were not updated (Sorry! Sorry! Sorry! It was getting pretty late, but some tests should go away which brings me to: \r\n3) I have commented out any methods that I think could go away. (combine method should also be cleaned up, or not exist?)\r\n\r\nOther information Brain dump:\r\n1) We have a few cards (V_DUPS and ANY_SAME_ID) blocked while we wait for Mary to review. NBD, but we do need those cards to go through before this refactor takes place. (right now on dev, this refactor makes no sense because the code we are refactoring was introduced by #51434 V_dups)\r\n2) V_Dups should be merged first? then ANY_SAME_ID, because \"technically\" ANY_SAME_ID was branched off of V_DUPS. \r\nNow is where it gets complicated...\r\n3) MULTIPARTP results, was branched from ANY_SAME_ID to get the updated code changes. The refactor branch was branched off of #51437 which is the MULTIPARTP branch. I think the work can be referenced, but we may want to create a patch or something and apply it to dev after V_DUPS and ANY_SAME_ID have been merged.\r\n\r\nHope all this makes sense. If not, definitely do not hesitate to message me on slack (sorry rocket chat folks, I don't have that on my phone)\r\n\r\n- Kevin",
        "created_on": "2019-11-22T22:56:06Z",
        "details": []
      },
      {
        "id": 201571,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-25T19:54:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Currently, the application groups the KER exceptions by table (shapefile); this causes granularity to be lost as data specific to a feature is group to other features. \r\n\r\nBy having an exception per feature, the feature specific data is preserved and the exceptions can be displayed as required. \r\n\r\nExample:\r\n\r\n*CURRENT:*\r\n<pre><code class=\"json\">\r\n{\r\n  \"KERS\": {\r\n    \"MULTIPARTP\": {\r\n      \"exceptions\": [\r\n        {\r\n          \"fcode\": \"GB220\", \r\n          \"featureName\": \"Aeronautical Obstacle\", \r\n          \"fids\": [\r\n            1, \r\n            2\r\n          ], \r\n          \"geoms\": {\r\n            \"94196950-7174-4f1a-9bba-ca2200fd3b63\": [\r\n              \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\"\r\n            ], \r\n            \"f4399efc-c266-4b32-a79d-63f9242ec3ea\": [\r\n              \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\"\r\n            ]\r\n          }, \r\n          \"magnitude\": 2, \r\n          \"table\": \"pgb220\", \r\n          \"uids\": [\r\n            \"f4399efc-c266-4b32-a79d-63f9242ec3ea\", \r\n            \"94196950-7174-4f1a-9bba-ca2200fd3b63\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"fileNames\": [ ... ]\r\n}\r\n</code></pre>\r\n\r\n\r\n\r\n*EXPECTED:*\r\n<pre><code class=\"json\">\r\n{{\r\n  \"KERS\": {\r\n    \"MULTIPARTP\": {\r\n         \"description\": \"Identify any Multi-part Point feature\", \r\n         \"exceptions\": [\r\n             {\r\n                \"fcode\": \"GB220\", \r\n                \"featureName\": \"Aeronautical Obstacle\", \r\n                \"fid\": 1, \r\n                \"geom\": \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\", \r\n                \"table\": \"paa010\", \r\n                \"uid\": \"94196950-7174-4f1a-9bba-ca2200fd3b63\"\r\n              },\r\n              {\r\n                \"fcode\": \"GB220\", \r\n                \"featureName\": \"Aeronautical Obstacle\", \r\n                \"fid\": 2, \r\n                \"geom\": \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\",\r\n                \"table\": \"paa010\", \r\n                \"uid\": \"f4399efc-c266-4b32-a79d-63f9242ec3ea\"\r\n              }\r\n         ], \r\n         \"name\": \"MULTIPARTP\", \r\n         \"numberOfConditions\": 2, \r\n         \"passed\": false\r\n    }\r\n  },\r\n  \"fileNames\": [ ... ]\r\n}\r\n</code></pre>\r\n\r\n\r\n\r\n",
            "new_value": "Currently, the application groups the KER exceptions by table (shapefile); this causes granularity to be lost as data specific to a feature is group to other features. \r\n\r\nBy having an exception per feature, the feature specific data is preserved and the exceptions can be displayed as required. \r\n\r\nExample:\r\n\r\n*CURRENT:*\r\n<pre><code class=\"json\">\r\n{\r\n  \"KERS\": {\r\n    \"MULTIPARTP\": {\r\n      \"exceptions\": [\r\n        {\r\n          \"fcode\": \"GB220\", \r\n          \"featureName\": \"Aeronautical Obstacle\", \r\n          \"fids\": [\r\n            1, \r\n            2\r\n          ], \r\n          \"geoms\": {\r\n            \"94196950-7174-4f1a-9bba-ca2200fd3b63\": [\r\n              \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\"\r\n            ], \r\n            \"f4399efc-c266-4b32-a79d-63f9242ec3ea\": [\r\n              \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\"\r\n            ]\r\n          }, \r\n          \"magnitude\": 2, \r\n          \"table\": \"pgb220\", \r\n          \"uids\": [\r\n            \"f4399efc-c266-4b32-a79d-63f9242ec3ea\", \r\n            \"94196950-7174-4f1a-9bba-ca2200fd3b63\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"fileNames\": [ ... ]\r\n}\r\n</code></pre>\r\n\r\n\r\n\r\n*EXPECTED:*\r\n<pre><code class=\"json\">\r\n{{\r\n  \"KERS\": {\r\n    \"MULTIPARTP\": {\r\n         \"description\": \"Identify any Multi-part Point feature\", \r\n         \"exceptions\": [\r\n             {\r\n                \"fcode\": \"GB220\", \r\n                \"featureName\": \"Aeronautical Obstacle\", \r\n                \"fid\": 1, \r\n                \"geom\": \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\", \r\n                \"table\": \"paa010\", \r\n                \"magnitude\": 2, \r\n                \"uid\": \"94196950-7174-4f1a-9bba-ca2200fd3b63\"\r\n              },\r\n              {\r\n                \"fcode\": \"GB220\", \r\n                \"featureName\": \"Aeronautical Obstacle\", \r\n                \"fid\": 2, \r\n                \"geom\": \"0104000020E6100000020000000101000000ABAAAAAAAA4256C0382068A7A1F33D400101000000DEDDDDDDDD4556C0382068A7A1F33D40\",\r\n                \"table\": \"paa010\", \r\n                \"magnitude\": 2, \r\n                \"uid\": \"f4399efc-c266-4b32-a79d-63f9242ec3ea\"\r\n              }\r\n         ], \r\n         \"name\": \"MULTIPARTP\", \r\n         \"numberOfConditions\": 2, \r\n         \"passed\": false\r\n    }\r\n  },\r\n  \"fileNames\": [ ... ]\r\n}\r\n</code></pre>\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 203970,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T13:33:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52164,
    "subject": "SPIKE: identify portions of the code to optimize",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 201305,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-22T17:57:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 201540,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T18:02:30Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 203429,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T17:28:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\n",
            "new_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n"
          }
        ]
      },
      {
        "id": 203456,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:25:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 204332,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T21:22:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204505,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T15:38:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n",
            "new_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n\r\nResults:\r\n* After adding some basic profiling, we found that the KER ANY_SAMEID takes about 30 times longer than the rest of the KERs.\r\n* The reason for this is because with the current setup for DB KERs, over 70,000 queries are being run for ANY_SAMEID.\r\n* Additionally, we did a quick proof of concept by manually generating a union across all tables and then doing the KER check SQL on the resultant dataset. This dramatically decreases the amount of time for that KER to run since we're running approximately 70,000 fewer queries."
          }
        ]
      },
      {
        "id": 204509,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T15:43:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n\r\nResults:\r\n* After adding some basic profiling, we found that the KER ANY_SAMEID takes about 30 times longer than the rest of the KERs.\r\n* The reason for this is because with the current setup for DB KERs, over 70,000 queries are being run for ANY_SAMEID.\r\n* Additionally, we did a quick proof of concept by manually generating a union across all tables and then doing the KER check SQL on the resultant dataset. This dramatically decreases the amount of time for that KER to run since we're running approximately 70,000 fewer queries.",
            "new_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n\r\n* Results: *\r\n* After adding some basic profiling, we found that the KER ANY_SAMEID takes about 30 times longer than the rest of the KERs. (30s vs 1.5s or less)\r\n* The reason for this is because with the current setup for DB KERs, over 70,000 queries are being run for ANY_SAMEID.\r\n* Additionally, we did a quick proof of concept by manually generating a union across all tables and then doing the KER check SQL on the resultant dataset. This dramatically decreases the amount of time for that KER to run since we're running approximately 70,000 fewer queries. (30s vs < 100ms !!)"
          }
        ]
      },
      {
        "id": 204510,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T15:44:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n\r\n* Results: *\r\n* After adding some basic profiling, we found that the KER ANY_SAMEID takes about 30 times longer than the rest of the KERs. (30s vs 1.5s or less)\r\n* The reason for this is because with the current setup for DB KERs, over 70,000 queries are being run for ANY_SAMEID.\r\n* Additionally, we did a quick proof of concept by manually generating a union across all tables and then doing the KER check SQL on the resultant dataset. This dramatically decreases the amount of time for that KER to run since we're running approximately 70,000 fewer queries. (30s vs < 100ms !!)",
            "new_value": "*Tech Story*\r\n\r\nThere are a lot of nested for-loops in the Python code.\r\nIt is believed that some of this code could be optimized in order to speed up processing time of the KERs, possibly eliminating timeouts visible to the user in the frontend.\r\n\r\nThe point of this spike is to identify parts of the codebase that can be optimized or refactored. However, we don't want to do this blindly, so we should probably add some simple benchmarking as part of this spike to demonstrate that our changes had the desired effect.\r\n\r\nNotes:\r\n* Document/visualize where time is spent so we can understand what the next steps will be.\r\n\r\n*Results:*\r\n* After adding some basic profiling, we found that the KER ANY_SAMEID takes about 30 times longer than the rest of the KERs. (30s vs 1.5s or less)\r\n* The reason for this is because with the current setup for DB KERs, over 70,000 queries are being run for ANY_SAMEID.\r\n* Additionally, we did a quick proof of concept by manually generating a union across all tables and then doing the KER check SQL on the resultant dataset. This dramatically decreases the amount of time for that KER to run since we're running approximately 70,000 fewer queries. (30s vs < 100ms !!)"
          }
        ]
      },
      {
        "id": 204511,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-10T15:44:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52120,
    "subject": "Update package versions in package.json and fix linter errors (Tech Debt)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 201062,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-21T22:10:07Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 201242,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-22T15:36:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201333,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-22T19:10:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202292,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-02T15:32:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202591,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-03T15:45:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202726,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:26:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 203026,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T15:24:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 52047,
    "subject": "Upgrade Crunchy Service Tile to Postgres 10",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 201296,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-22T17:29:13Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 201306,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-22T17:57:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "5"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1228",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 201429,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-25T14:35:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202064,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "crunchy 10 tile is bound to \"qac-backend-feature-deployment\" for feature branch deployments but no other apps in PCF currently.",
        "created_on": "2019-11-27T15:37:03Z",
        "details": [
          {
            "property": "attachment",
            "name": "5289",
            "new_value": "Screen Shot 2019-11-27 at 9.33.59 AM.png"
          }
        ]
      },
      {
        "id": 202079,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-11-27T16:07:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 202661,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-12-03T18:13:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51980,
    "subject": "SPIKE: Cypress w/o mocking data",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 200620,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-20T21:08:57Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 202335,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-02T16:12:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 202729,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:30:40Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 202732,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:52:31Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 202734,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:53:02Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206305,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:20:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "There is no testing for running a full suite from frontend to database.\r\n\r\nCan the current setup allow Cypress to run without mocking the data or routes for E2E testing?\r\n\r\nNotes:\r\n- Using a subset of Cypress tests.\r\n- This can be tested locally and the testing does not have to be automated at this point.\r\n",
            "new_value": "There is no testing for running a full suite from frontend to database.\r\n\r\n*Can the current setup allow Cypress to run without mocking the data or routes for E2E testing?*\r\n\r\nNotes:\r\n- Using a subset of Cypress tests.\r\n- This can be tested locally and the testing does not have to be automated at this point.\r\n"
          }
        ]
      },
      {
        "id": 207506,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:43:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207799,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-01-03T14:52:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207981,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-06T13:55:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51929,
    "subject": "Update Application to support deploying feature branches.",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 200328,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T15:29:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200329,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T15:29:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 201428,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-25T14:34:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201430,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-25T14:35:44Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1228",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 202078,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-11-27T16:07:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202945,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:18:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51928,
    "subject": "App fetches before authentication succeeds.",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 200288,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-20T14:49:36Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 200326,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T15:29:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200327,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T15:29:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 206336,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:33:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "The application should only load frontend assets after successful login. \r\n\r\nSee Screenshot below.\r\n\r\nExpected: Auth call to be first before all other assets are loaded.\r\n\r\nActual: Assets are loaded before auth url is called.",
            "new_value": "The application should only load frontend assets after successful login. \r\n\r\nSee Screenshot below.\r\n\r\nExpected: Auth call to be first before all other assets are loaded.\r\nActual: Assets are loaded before auth url is called."
          }
        ]
      },
      {
        "id": 208343,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:14:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208510,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-07T20:25:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 210788,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-21T15:31:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 210793,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-21T15:50:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51859,
    "subject": "Create the Quality Assurance Condition Report (QACR)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 199744,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T19:10:15Z",
        "details": [
          {
            "property": "attachment",
            "name": "5241",
            "new_value": "Capture.JPG"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Description\r\n\r\nAcceptance Criteria needed\r\n\r\nGIVEN QAC has been run\r\nWHEN the run is complete\r\nTHEN QAC generates an open source word processing document\r\n\r\nNOTES:\r\n* LibreOffice Writer is one possibility, as it is a Word-like product that is completely open and free.\r\n\r\nPlease refer to screenshot as an example",
            "new_value": "Description\r\n\r\nAcceptance Criteria needed\r\n\r\nGIVEN QAC has been run\r\nWHEN the run is complete\r\nTHEN QAC generates an open source word processing document\r\n\r\nAC #1:\r\nHeaders: Schema, QAC Build, Data Stet Name, Producing Nation, QA Nation, TRD Version, Submission #\r\n\r\nAC #2:\r\nSerial #, KER name, KER description, Number of conditions, Explanation for ignoring condition, Notes\r\n\r\nNOTES:\r\n* LibreOffice Writer is one possibility, as it is a Word-like product that is completely open and free.\r\n\r\nPlease refer to screenshot as an example"
          }
        ]
      },
      {
        "id": 199745,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T19:10:26Z",
        "details": [
          {
            "property": "attachment",
            "name": "5241",
            "old_value": "Capture.JPG"
          }
        ]
      },
      {
        "id": 201499,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T16:10:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 208492,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T20:08:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 209117,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-01-08T18:26:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 210524,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-17T15:27:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 210787,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-21T15:31:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 210792,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-21T15:50:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51857,
    "subject": "generate shapefile using real KER results data",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 199742,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T19:07:43Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 199746,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:15:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 199747,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:15:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 199760,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:38:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 199761,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:38:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 199869,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T20:51:55Z",
        "details": [
          {
            "property": "attachment",
            "name": "5245",
            "new_value": "Capture.JPG"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom",
            "new_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns."
          }
        ]
      },
      {
        "id": 199881,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T20:52:23Z",
        "details": [
          {
            "property": "attachment",
            "name": "5246",
            "new_value": "Export Shapefile Column Names.docx"
          }
        ]
      },
      {
        "id": 200271,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-20T14:19:40Z",
        "details": [
          {
            "property": "attachment",
            "name": "5246",
            "old_value": "Export Shapefile Column Names.docx"
          }
        ]
      },
      {
        "id": 200272,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-20T14:19:49Z",
        "details": [
          {
            "property": "attachment",
            "name": "5245",
            "old_value": "Capture.JPG"
          }
        ]
      },
      {
        "id": 200273,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-20T14:20:06Z",
        "details": [
          {
            "property": "attachment",
            "name": "5251",
            "new_value": "Export Shapefile Column Names.docx"
          }
        ]
      },
      {
        "id": 200274,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-20T14:21:29Z",
        "details": [
          {
            "property": "attachment",
            "name": "5252",
            "new_value": "Capture.JPG"
          }
        ]
      },
      {
        "id": 200584,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T19:54:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 200596,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-20T20:18:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201248,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-22T15:40:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201330,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-22T19:06:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201555,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-25T18:53:20Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 201595,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T20:39:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.",
            "new_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.\r\n\r\n*Notes from Conversation with Jeff*\r\n* it is preferred to have all found KER conditions in the same shapefiles. We do not want separate shapefiles per type of KER.\r\n* name of the output file can be as follows: <name_of_input_zipfile>_results.zip\r\n* a single shapefile per geometry type is OK. so we'll have one shapefile for all points, one for polygons, etc. this is due to a restriction of the shapefile format itself: one type of geometry per shapefile.\r\n* if one input shapefile contains multiple KER conditions, then the output shapefile downloaded should have one entry per KER condition\r\n"
          }
        ]
      },
      {
        "id": 201602,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T21:09:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.\r\n\r\n*Notes from Conversation with Jeff*\r\n* it is preferred to have all found KER conditions in the same shapefiles. We do not want separate shapefiles per type of KER.\r\n* name of the output file can be as follows: <name_of_input_zipfile>_results.zip\r\n* a single shapefile per geometry type is OK. so we'll have one shapefile for all points, one for polygons, etc. this is due to a restriction of the shapefile format itself: one type of geometry per shapefile.\r\n* if one input shapefile contains multiple KER conditions, then the output shapefile downloaded should have one entry per KER condition\r\n",
            "new_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.\r\n\r\n*Notes from Conversation with Jeff*\r\n* it is preferred to have all found KER conditions in the same shapefile. We do not want separate shapefiles per type of KER.\r\n* name of the output file can be as follows: <name_of_input_zipfile>_results.zip\r\n* a single shapefile per geometry type is OK. so we'll have one shapefile for all points, one for polygons, etc. this is due to a restriction of the shapefile format itself: one type of geometry per shapefile.\r\n* if one input shapefile contains multiple KER conditions, then the output shapefile downloaded should have one entry per KER condition\r\n"
          }
        ]
      },
      {
        "id": 202154,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-27T20:54:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.\r\n\r\n*Notes from Conversation with Jeff*\r\n* it is preferred to have all found KER conditions in the same shapefile. We do not want separate shapefiles per type of KER.\r\n* name of the output file can be as follows: <name_of_input_zipfile>_results.zip\r\n* a single shapefile per geometry type is OK. so we'll have one shapefile for all points, one for polygons, etc. this is due to a restriction of the shapefile format itself: one type of geometry per shapefile.\r\n* if one input shapefile contains multiple KER conditions, then the output shapefile downloaded should have one entry per KER condition\r\n",
            "new_value": "As a user,\r\nI would like to download a shapefile with real data,\r\nSo that I can make an informed decision about the quality of my geospatial data.\r\n\r\nGiven I run a KER check,\r\nWhen I click \"Download Shapefile\",\r\nThen I download a shapefile with real data corresponding to the results of the KER check I just ran.\r\n\r\nAcceptance Criteria\r\nAll KERs shall return shapefile(s) with UUID, Feature Name, FCODE and [some type of] geom, and others. Please refer to the attached file for columns.\r\n\r\n*Notes from Conversation with Jeff*\r\n* it is preferred to have all found KER conditions in the same shapefile. We do not want separate shapefiles per type of KER.\r\n* name of the output file can be as follows: <name_of_input_zipfile>_results.zip\r\n* a single shapefile per geometry type is OK. so we'll have one shapefile for all points, one for polygons, etc. this is due to a restriction of the shapefile format itself: one type of geometry per shapefile.\r\n* if one input shapefile contains multiple KER conditions, then the output shapefile downloaded should have one entry per KER condition\r\n\r\n*Other Notes*\r\n* for KERs that don't have results stories finished for them, their conditions will not be returned in the shapefile export\r\n* 422 is returned from API if shapefile is exported, but no KERs are found or only KERs found haven't had results stories finished\r\n* shapefiles are generated in the /tmp directory. we'll need a separate story to address cleanup of these files and other temp files\r\n"
          }
        ]
      },
      {
        "id": 202303,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-02T15:42:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202727,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:27:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203027,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T15:27:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 203109,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T20:21:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 203110,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-04T20:34:45Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "511",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 204019,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:16:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51856,
    "subject": "Update KER results fields displayed",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 199732,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T18:52:51Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see the following fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# do we want these columns in a certain order?"
          }
        ]
      },
      {
        "id": 199735,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T18:55:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# do we want these columns in a certain order?",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_X: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# do we want these columns in a certain order?"
          }
        ]
      },
      {
        "id": 199736,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T18:55:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_X: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# do we want these columns in a certain order?",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# do we want these columns in a certain order?"
          }
        ]
      },
      {
        "id": 199743,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T19:08:25Z",
        "details": [
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 199759,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:38:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 199763,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:39:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 199777,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T19:55:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# do we want these columns in a certain order?",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid?, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\n# do we want these columns in a certain order?"
          }
        ]
      },
      {
        "id": 199791,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T20:15:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid?, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\n# what do we do for multiple conditions per feature?\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\n# table name and fids are older fields. should we remove these?\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\n# do we want these columns in a certain order?",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid?, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen"
          }
        ]
      },
      {
        "id": 201550,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T18:32:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201554,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-25T18:53:02Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 201557,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T19:05:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201558,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T19:07:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 203502,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:30:27Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n\r\nCondition Number, FCODE, table name?, fid?, uid?, feature name\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* UID, Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen"
          }
        ]
      },
      {
        "id": 204155,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T15:45:47Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* UID, Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* UID, Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen\r\n\r\n\r\nZepplin Link: https://zpl.io/2E9yLYM"
          }
        ]
      },
      {
        "id": 204167,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-09T16:15:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 204573,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-10T16:26:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205440,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-12T14:19:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205513,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "*We believe the answer to the last question means we should NOT be displaying the uid in the KERs table. Is this correct?*",
        "created_on": "2019-12-12T16:10:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* UID, Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n- For MULTIPART_[ALP]: also display Magnitude (number of parts)\r\n- For LBNDUSHT: also display Magnitude (meters to the 6th decimal)\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen\r\n\r\n\r\nZepplin Link: https://zpl.io/2E9yLYM",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* Condition Number (index of the array), Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen\r\n\r\n\r\nZepplin Link: https://zpl.io/2E9yLYM"
          }
        ]
      },
      {
        "id": 205514,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-12-12T16:10:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* Condition Number (index of the array), Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen\r\n\r\n\r\nZepplin Link: https://zpl.io/2E9yLYM",
            "new_value": "As a user,\r\nI would like to see specific fields when viewing KER results,\r\nSo that I can detect KER conditions and address them appropriately.\r\n\r\nGiven I have run a KER check on a test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to see the following fields in the results table for all KERs:\r\n* Condition Number (index of the array), Feature name, FCODE, Magnitude (where necessary)\r\n\r\nGiven I have run a KER check for a specific test dataset,\r\nWhen I am viewing the KER results,\r\nThen I would like to _also_ see the following additional fields:\r\n\r\n\r\n*Questions that need to be answered*\r\n# do we want condition number displayed in the prechecks as well?\r\nA: Yes\r\n\r\n# what do we do for multiple conditions per feature?\r\nA: Report each separately if it is from a different KER; we'll need more discussion if it is the same feature and KER.\r\n\r\n# should numbering increase across all KER checks, or start at 1 for each KER check?\r\nA: Begin at #1 for each KER\r\n\r\n# same as previous question, but for prechecks, IF we want condition number for the prechecks\r\nA: Begin at #1 for each Schema Check\r\n\r\n# table name and fids are older fields. should we remove these?\r\nA: Yes\r\n\r\n# do we want these columns in a certain order?\r\nA: Condition/Exception number, Feature name, FCODE, Magnitude (where necessary)\r\n\r\n# uid is a new field, is this helpful to the user? if not, should we remove this?\r\nA; Yes, for display results onscreen\r\n\r\n\r\nZepplin Link: https://zpl.io/2E9yLYM (not current re: column headers. follow AC)"
          }
        ]
      },
      {
        "id": 205649,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-13T15:33:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 206063,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:26:26Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206465,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-18T13:13:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51854,
    "subject": "Convert CDUPES to a DB KER",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 204306,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:53:13Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 205523,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:10:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Story\r\n\r\nAs a developer,\r\nI would like CDUPES to be implemented as a DB KER,\r\nSo that there are only two ways a KER can be implemented instead of three.",
            "new_value": "Tech Story\r\n\r\nAs a developer,\r\nI would like CDUPES to be implemented as a DB KER,\r\nSo that the KER and be considered complete\r\n\r\n* Eric S. is working on a refactor for C_Dupes now. \r\n* Mary will need to help move the KER to the DB (includes changing the SQL).\r\n"
          }
        ]
      },
      {
        "id": 205524,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:10:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Story\r\n\r\nAs a developer,\r\nI would like CDUPES to be implemented as a DB KER,\r\nSo that the KER and be considered complete\r\n\r\n* Eric S. is working on a refactor for C_Dupes now. \r\n* Mary will need to help move the KER to the DB (includes changing the SQL).\r\n",
            "new_value": "***DEPENDENT UPON COMPLETING STORY (Refactor C_Dupes) \r\n\r\nTech Story\r\n\r\nAs a developer,\r\nI would like CDUPES to be implemented as a DB KER,\r\nSo that the KER and be considered complete\r\n\r\n* Eric S. is working on a refactor for C_Dupes now. \r\n* Mary will need to help move the KER to the DB (includes changing the SQL).\r\n"
          }
        ]
      },
      {
        "id": 205527,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:11:46Z",
        "details": [
          {
            "property": "relation",
            "name": "relates",
            "new_value": "51690"
          }
        ]
      },
      {
        "id": 205758,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:40:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "***DEPENDENT UPON COMPLETING STORY (Refactor C_Dupes) \r\n\r\nTech Story\r\n\r\nAs a developer,\r\nI would like CDUPES to be implemented as a DB KER,\r\nSo that the KER and be considered complete\r\n\r\n* Eric S. is working on a refactor for C_Dupes now. \r\n* Mary will need to help move the KER to the DB (includes changing the SQL).\r\n",
            "new_value": "***DEPENDENT UPON COMPLETING STORY (Refactor C_Dupes). Story # 51690. This is now complete.\r\n\r\nTech Story\r\n\r\nAs a developer,\r\nI would like CDUPES to be implemented as a DB KER,\r\nSo that the KER and be considered complete\r\n\r\n* Eric S. is working on a refactor for C_Dupes now. \r\n* Mary will need to help move the KER to the DB (includes changing the SQL).\r\n"
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 206493,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-18T14:41:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3825"
          }
        ]
      },
      {
        "id": 206586,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-18T21:39:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 206762,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-19T18:44:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 206766,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-19T18:58:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51848,
    "subject": "Build the Schema Checks Summary View Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 200871,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:39:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206354,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:52:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Description\r\n\r\nAcceptance Criteria needed\r\n\r\nGIVEN Schema Checks have processed\r\nWHEN the run is complete\r\nTHEN I can navigate to the Schema Checks Summary in a sidebar\r\n\r\nPlease refer to screenshot as an example",
            "new_value": "Design Needed\r\n\r\nOnce design is complete:\r\nExpose data endpoints in backend\r\nDisplay data in frontend per design\r\n\r\nGIVEN Schema checks have processed\r\nWHEN the run is complete\r\nTHEN I see the schema summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example"
          }
        ]
      },
      {
        "id": 208491,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-07T20:07:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 209336,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T20:10:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 209446,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2020-01-10T17:05:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Design Needed\r\n\r\nOnce design is complete:\r\nExpose data endpoints in backend\r\nDisplay data in frontend per design\r\n\r\nGIVEN Schema checks have processed\r\nWHEN the run is complete\r\nTHEN I see the schema summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example",
            "new_value": "GIVEN Schema checks have processed\r\nWHEN the run is complete\r\nTHEN I see the schema summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "3823"
          }
        ]
      },
      {
        "id": 210735,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:39:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 210791,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-01-21T15:46:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211289,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-24T14:58:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211347,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-24T17:17:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211660,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-27T15:14:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51847,
    "subject": "Build the KER Summary View Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 199724,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T18:27:46Z",
        "details": [
          {
            "property": "attachment",
            "name": "5236",
            "new_value": "Capture.JPG"
          },
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Build the KER Results Display",
            "new_value": "Build the KER Summary View Component"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Description\r\n\r\nAcceptance Criteria needed\r\n\r\nGIVEN KERs have processed\r\nWHEN there are any conditions\r\nTHEN I can navigate the condition categories in a sidebar\r\nAND THEN I can see each all conditions within a category in a tabular view when selected from the sidebar\r\n\r\n*Feature name\r\n*FCode\r\n*FID\r\n*Tolerance",
            "new_value": "Description\r\n\r\nAcceptance Criteria needed\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I can navigate to the KER Summary in a sidebar\r\n\r\nPlease refer to screenshot as an example"
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 200870,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:39:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 206349,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:44:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Description\r\n\r\nAcceptance Criteria needed\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I can navigate to the KER Summary in a sidebar\r\n\r\nPlease refer to screenshot as an example",
            "new_value": "Design Needed\r\n\r\nOnce design is complete:\r\n# Expose data endpoints in backend\r\n# Display data in frontend per design\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I see the KER summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example"
          }
        ]
      },
      {
        "id": 208048,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-01-06T15:34:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208131,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-06T17:55:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Design Needed\r\n\r\nOnce design is complete:\r\n# Expose data endpoints in backend\r\n# Display data in frontend per design\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I see the KER summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example",
            "new_value": "Design: https://sketch.cloud/s/bZ5z5/a/jEPQg9\r\n\r\nOnce design is complete:\r\n# Expose data endpoints in backend\r\n# Display data in frontend per design\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I see the KER summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example"
          }
        ]
      },
      {
        "id": 208232,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2020-01-06T20:48:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 208330,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-01-07T14:33:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 210494,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-17T14:53:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Design: https://sketch.cloud/s/bZ5z5/a/jEPQg9\r\n\r\nOnce design is complete:\r\n# Expose data endpoints in backend\r\n# Display data in frontend per design\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I see the KER summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example",
            "new_value": "Design: https://sketch.cloud/s/bZ5z5/a/jEPQg9\r\n\r\nOnce design is complete:\r\n# Expose data endpoints in backend\r\n# Display data in frontend per design\r\n\r\nGIVEN KERs have processed\r\nWHEN the run is complete\r\nTHEN I see the KER summary in results\r\nAnd the first item in the left-nav is summary results\r\nAnd the first item is selected\r\n\r\nPlease refer to screenshot as an example\r\n\r\nNotes:\r\nDesigns changed in the middle of progress.  \r\nThis card will split design and additional functionality.\r\nSummary view will not contain the following:\r\n - Total Condition Pie Chart\r\n - Kers Not Selected Widget\r\n - Toggle for Passed Conditions"
          }
        ]
      },
      {
        "id": 210591,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-17T17:03:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 211158,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T17:38:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 211218,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-23T19:31:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51690,
    "subject": "[TECH DEBT] - Refactor C_DUPS",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 200875,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:43:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200897,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:58:18Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 203430,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T17:30:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "C_DUPS is an outlier in the structure and architecture.\r\nC_DUPS should be refactored to be in line with other kers.",
            "new_value": "C_DUPS is an outlier in the structure and architecture.\r\nC_DUPS should be refactored to be in line with other kers.\r\n\r\nNOTES:\r\n* If you pickup this card, please talk with team members working on the SPIKE related to optimizing the code. "
          }
        ]
      },
      {
        "id": 203457,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:25:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 205169,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-11T19:37:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205528,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:11:46Z",
        "details": [
          {
            "property": "relation",
            "name": "relates",
            "new_value": "51854"
          }
        ]
      },
      {
        "id": 205651,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-13T15:33:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205668,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-13T15:58:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205696,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-13T16:54:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51642,
    "subject": "Move OBJECTWITHOUT KER into DB",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 197766,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T20:38:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nAs a DBA,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes hePO r changes (on a branch)\r\n* QAC dev team fetches to get her changes\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper",
            "new_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes hePO r changes (on a branch)\r\n* QAC dev team fetches to get her changes\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper"
          }
        ]
      },
      {
        "id": 197767,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T20:39:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3787"
          }
        ]
      },
      {
        "id": 197768,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T20:39:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197773,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T20:51:41Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Move OBJECTWITHOUT KER out from KER Wrapper into DB",
            "new_value": "Move OBJECTWITHOUT KER into DB"
          }
        ]
      },
      {
        "id": 197775,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T20:54:49Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3787",
            "new_value": "477"
          }
        ]
      },
      {
        "id": 197834,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-14T14:53:29Z",
        "details": [
          {
            "property": "attachment",
            "name": "5187",
            "new_value": "LOAD_KERS.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes hePO r changes (on a branch)\r\n* QAC dev team fetches to get her changes\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper",
            "new_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* [DONE] Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes her changes (on a branch). --> this time Mary sent me the updated LOAD_KERS.sql, which is saved as an attachment to this story.\r\n* QAC dev team fetches to get her changes\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper"
          }
        ]
      },
      {
        "id": 197835,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-14T14:54:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* [DONE] Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes her changes (on a branch). --> this time Mary sent me the updated LOAD_KERS.sql, which is saved as an attachment to this story.\r\n* QAC dev team fetches to get her changes\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper",
            "new_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* [DONE] Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes her changes (on a branch). --> this time Mary sent me the updated LOAD_KERS.sql, which is saved as an attachment to this story.\r\n* QAC dev team fetches to get her changes --> in this case, just manually update the .sql file\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "477",
            "new_value": "3787"
          }
        ]
      },
      {
        "id": 198179,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "Using Mary's input, Re-Moved OBJECTWITHOUT from KER wrapper and moved to db",
        "created_on": "2019-11-15T14:55:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* [DONE] Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* [DONE] Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes her changes (on a branch). --> this time Mary sent me the updated LOAD_KERS.sql, which is saved as an attachment to this story.\r\n* QAC dev team fetches to get her changes --> in this case, just manually update the .sql file\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper",
            "new_value": "*Tech Story*\r\n\r\nAs a QAC App Team Member,\r\nI would like to follow the established process to move OBJECTWITHOUT KER from the KER Wrapper into the DB,\r\nSo that I can ensure the integrity of the KER queries.\r\n\r\n*Steps to Complete*\r\n* Mary is alerted via RocketChat that the OBJECTWITHOUT KER needs to be moved into the DB\r\n* Mary does the work of moving OBJECTWITHOUT KER into the DB and pushes her changes (on a branch). --> this time Mary sent me the updated LOAD_KERS.sql, which is saved as an attachment to this story.\r\n* QAC dev team fetches to get her changes --> in this case, just manually update the .sql file\r\n* QAC dev team validates that the new DB KER works as expected (Behave tests still pass for that KER)\r\n* QAC dev team removes the OBJECTWITHOUT KER from the KER wrapper"
          }
        ]
      },
      {
        "id": 198196,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-15T15:13:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 198444,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-18T15:35:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 198459,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-18T15:46:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 202942,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:16:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202948,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:21:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51623,
    "subject": "KER: LBNDUSHT (Line Feature End Node Undershoots Project Whole-Degree Boundary) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 197705,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T19:34:58Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51437"
          }
        ]
      },
      {
        "id": 197710,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T19:36:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display ??, FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197782,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T21:23:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display ??, FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Tolerance, FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197847,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-14T14:58:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Tolerance, FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (meeters to the 6th decimal), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197848,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-14T14:59:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (meeters to the 6th decimal), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (meters to the 6th decimal), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197950,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:08:27Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198014,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:58:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (meters to the 6th decimal), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (meters to the 6th decimal), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n"
          }
        ]
      },
      {
        "id": 198022,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T19:00:48Z",
        "details": [
          {
            "property": "attachment",
            "name": "5200",
            "new_value": "LBNDUSHT.JPG"
          }
        ]
      },
      {
        "id": 198448,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:37:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (meters to the 6th decimal), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (meters to the 6th decimal), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n"
          }
        ]
      },
      {
        "id": 199562,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:56:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (meters to the 6th decimal), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return UUID, Feature Name, FCODE, location, and magnitude (meters to the 6th decimal)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n"
          }
        ]
      },
      {
        "id": 199771,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T19:47:36Z",
        "details": [
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "7",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 199786,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:03:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return UUID, Feature Name, FCODE, location, and magnitude (meters to the 6th decimal)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE, location, and magnitude (meters to the 6th decimal)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n"
          }
        ]
      },
      {
        "id": 205532,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:17:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 205759,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:52:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205760,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:54:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE, location, and magnitude (meters to the 6th decimal)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE, location (magnitude will be handling in the LBNDUSHT story - 36315)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n"
          }
        ]
      },
      {
        "id": 206548,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-12-18T17:38:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE, location (magnitude will be handling in the LBNDUSHT story - 36315)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Feature Name, and FCODE (magnitude will be displayed by LBNDUSHT story - 36315)\r\n* This KER shall return UUID, Feature Name, FCODE, geom (magnitude will be handling in the LBNDUSHT story - 36315)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\nThe test data contains 2 conditions per feature for a total of 4 conditions.\r\n"
          }
        ]
      },
      {
        "id": 206676,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-19T15:58:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 206725,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T17:04:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 206755,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T18:20:45Z",
        "details": [
          {
            "property": "attachment",
            "name": "5331",
            "new_value": "MGCP45_LBNDUSHT_Test_1.zip"
          }
        ]
      },
      {
        "id": 206757,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T18:21:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Feature Name, and FCODE (magnitude will be displayed by LBNDUSHT story - 36315)\r\n* This KER shall return UUID, Feature Name, FCODE, geom (magnitude will be handling in the LBNDUSHT story - 36315)\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\nThe test data contains 2 conditions per feature for a total of 4 conditions.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Feature Name, and FCODE (magnitude will be displayed by LBNDUSHT story - 36315)\r\n* This KER shall return UUID, Feature Name, FCODE, geom (magnitude will be handling in the LBNDUSHT story - 36315)\r\n\r\nNOTE on GeoBadger data: There should be 4 conditions.\r\n\r\n*+Notes:+*\r\n*Vertex of line Cart Track feature lies 0.11 m inside Sample project maximum latitude boundary*\r\nThis inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance. This inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries. Above, GAIT has detected a vertex of a line Cart Track feature very close to (0.11 m) the northern latitude boundary in the Sample project. The same feature also includes another vertex that is on the latitude boundary and the inspection does not report this second vertex as a condition as its distance to the latitude boundary is less than the inspection’s primary tolerance.\r\nThe test data contains 2 conditions per feature for a total of 4 conditions.\r\n"
          }
        ]
      },
      {
        "id": 206758,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T18:21:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 206759,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-19T18:22:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51612,
    "subject": "[SPIKE] Dependencies with the KER Master statement",
    "category": "KER team",
    "status": "Closed",
    "journals": [
      {
        "id": 197652,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T17:35:44Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 197653,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T17:36:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 197951,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:08:48Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 199630,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:16:15Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205535,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:20:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nHow do we know that if a KER master statement changes that it will affect other KERs?\r\n\r\nWhat If a KER is uploaded in the database without the Master Statement first? \r\n",
            "new_value": "AC:\r\n\r\n*How do we know that if a KER master statement changes that it will affect other KERs?*\r\n*Answer*: Mary handles this. When she reviews the SQL and changes and validates that it is correct, and then makes a note for future statements.\r\n\r\n*What If a KER is uploaded in the database without the Master Statement first?* \r\n*Answer*: this is a known issue. It will cause problems if we do that, which is why there is an order to the load.sql and to the KERs that are chosen.\r\n"
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "8"
          }
        ]
      }
    ]
  },
  {
    "id": 51611,
    "subject": "Use Schema and KER result 'passed' property in frontend",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197648,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:26:50Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 197649,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:27:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3787"
          }
        ]
      },
      {
        "id": 197961,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:12:01Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "use precheck and KER result 'passed' property in frontend",
            "new_value": "Use Schema and KER result 'passed' property in frontend"
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 200946,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:19:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Debt Story\r\n\r\n[placeholder]\r\n\r\n\r\nAcceptance Criteria\r\n* frontend code uses 'passed' property that exists on both the Precheck and KER result payload returned from the API\r\n\r\n*Notes*\r\nDepends on Story 51100",
            "new_value": "*Tech Debt* Story\r\n\r\nAcceptance Criteria\r\n* Frontend code uses 'passed' property that exists on both the Schema and KER result payload returned from the API.\r\n* Replace where it is checking for exceptions, and use 'passed.' Passed = False\r\n\r\n*Notes*\r\nDepends on Story *51100*"
          }
        ]
      },
      {
        "id": 200955,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:28:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202082,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-11-27T16:19:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202083,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-11-27T16:20:14Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3787",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 202279,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-02T15:09:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 203045,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T16:33:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 203106,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T19:51:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51587,
    "subject": "SPIKE: Update frontend (only) for KERs running as background jobs",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197564,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T14:06:19Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51586"
          }
        ]
      },
      {
        "id": 197568,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T14:06:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Once the KERs are running as a background job, we need to update the frontend to handle that.\r\n\r\n*Questions to Answer*\r\n1. How exactly do we implement long-polling on the frontend?\r\n\r\n2. How to display status to the user?\r\n    - Simple text ‘Pending…’ or finished\r\n    - Once finished, display results or link to results\r\n    - Duck may be spinning for a long time. that’s ok\r\n\r\n3. Can we demonstrate that long polling is  actually working?\r\n    - Reduce resources of infrastructure\r\n    - Send huge dataset through QAC (ask Jeff)\r\n\r\n4. Does solution work with standalone version of the app?\r\n\r\n*Notes*\r\nThis story is dependent on backend spike to process KERs as background jobs\r\n\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- Updated frontend design for progress/status",
            "new_value": "Once the KERs are running as a background job, we need to update the frontend to handle that.\r\n\r\n*Questions to Answer*\r\n1. How exactly do we implement long-polling on the frontend?\r\n\r\n2. How to display status to the user?\r\n    - Simple text ‘Pending…’ or finished\r\n    - Once finished, display results or link to results\r\n    - Duck may be spinning for a long time. that’s ok\r\n\r\n3. Can we demonstrate that long polling is  actually working?\r\n    - Reduce resources of infrastructure\r\n    - Send huge dataset through QAC (ask Jeff)\r\n\r\n4. Does solution work with standalone version of the app?\r\n\r\n*Notes*\r\nThis story is dependent on backend spike to process KERs as background jobs (#51586)\r\n\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- Updated frontend design for progress/status"
          }
        ]
      },
      {
        "id": 198618,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-18T18:41:17Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 200582,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T19:53:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200583,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T19:53:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 201414,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T14:08:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201497,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T16:06:01Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 201498,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T16:06:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 206307,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:25:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Once the KERs are running as a background job, we need to update the frontend to handle that.\r\n\r\n*Questions to Answer*\r\n1. How exactly do we implement long-polling on the frontend?\r\n\r\n2. How to display status to the user?\r\n    - Simple text ‘Pending…’ or finished\r\n    - Once finished, display results or link to results\r\n    - Duck may be spinning for a long time. that’s ok\r\n\r\n3. Can we demonstrate that long polling is  actually working?\r\n    - Reduce resources of infrastructure\r\n    - Send huge dataset through QAC (ask Jeff)\r\n\r\n4. Does solution work with standalone version of the app?\r\n\r\n*Notes*\r\nThis story is dependent on backend spike to process KERs as background jobs (#51586)\r\n\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- Updated frontend design for progress/status",
            "new_value": "Once the KERs are running as a background job, we need to update the frontend to handle that.\r\n\r\n*Questions to Answer*\r\n1. How exactly do we implement long-polling on the frontend?\r\n\r\n2. How to display status to the user? We have a loading screen. \r\n    - Simple text ‘Pending…’ or finished\r\n    - Once finished, display results or link to results\r\n    - Duck may be spinning for a long time. that’s ok\r\n\r\n3. Can we demonstrate that long polling is actually working?\r\n    - Reduce resources of infrastructure\r\n    - Send huge dataset through QAC (ask Jeff)\r\n\r\n4. Does solution work with standalone version of the app?\r\n\r\n*Notes*\r\nThis story is dependent on backend spike to process KERs as background jobs (#51586)\r\n\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- Updated frontend design for progress/status"
          }
        ]
      },
      {
        "id": 212800,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T18:57:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Once the KERs are running as a background job, we need to update the frontend to handle that.\r\n\r\n*Questions to Answer*\r\n1. How exactly do we implement long-polling on the frontend?\r\n\r\n2. How to display status to the user? We have a loading screen. \r\n    - Simple text ‘Pending…’ or finished\r\n    - Once finished, display results or link to results\r\n    - Duck may be spinning for a long time. that’s ok\r\n\r\n3. Can we demonstrate that long polling is actually working?\r\n    - Reduce resources of infrastructure\r\n    - Send huge dataset through QAC (ask Jeff)\r\n\r\n4. Does solution work with standalone version of the app?\r\n\r\n*Notes*\r\nThis story is dependent on backend spike to process KERs as background jobs (#51586)\r\n\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- Updated frontend design for progress/status",
            "new_value": "Once the KERs are running as a background job, we need to update the frontend to handle that.\r\n\r\n*Questions to Answer*\r\n1. How exactly do we implement long-polling on the frontend? Taken care of in another card (validate - Jen).\r\n\r\n2. How to display status to the user? We have a loading screen.\r\n\r\nNeed new stories (future): \r\nHandling failures on backend -- what happens on the screen and where is the user taken?\r\nShowing progress on what KERs have finished running\r\n\r\n3. Can we demonstrate that long polling is actually working?\r\n\r\nNew test/acceptance for long-polling story.\r\n    - Reduce resources of infrastructure\r\n    - Send huge dataset through QAC (ask Jeff)\r\n\r\n4. Solution will work with standalone version of the app?\r\n\r\n\r\n\r\n*Notes*\r\nThis story is dependent on backend spike to process KERs as background jobs (#51586)\r\n\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- Updated frontend design for progress/status"
          }
        ]
      },
      {
        "id": 212805,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T19:40:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "9"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      }
    ]
  },
  {
    "id": 51586,
    "subject": "SPIKE: Convert KER processing to background job",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197560,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T14:02:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "KER processing can take a long time to run. We need to update the backend to run this processing as a background job so that the browser doesn't wait for a long-running request that will timeout.\r\n\r\n*Questions to Answer*\r\n- Which task processing mechanism will me used?\r\n    - Probably RabbitMQ due to integration w/ PCF\r\n- How will tasks be persisted?\r\n    - Likely by using existing PostgreSQL DB\r\n- Does this solution work with standalone instance of app?\r\n\r\n*Notes*\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- No notion of users right now, anyone can access anyone's results\r\n- Don’t limit the number of background jobs running at once\r\n- No way to cancel a job once it’s started\r\n- When/how to delete job statuses",
            "new_value": "KER processing can take a long time to run. We need to update the backend to run this processing as a background job so that the browser doesn't wait for a long-running request that will timeout.\r\n\r\n*Questions to Answer*\r\n1. Which task processing mechanism will me used?\r\n- Probably RabbitMQ due to integration w/ PCF\r\n\r\n2. How will tasks be persisted?\r\n- Likely by using existing PostgreSQL DB\r\n\r\n3. Does this solution work with standalone instance of app?\r\n\r\n*Notes*\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- No notion of users right now, anyone can access anyone's results\r\n- Don’t limit the number of background jobs running at once\r\n- No way to cancel a job once it’s started\r\n- When/how to delete job statuses"
          }
        ]
      },
      {
        "id": 197563,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T14:06:19Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51587"
          }
        ]
      },
      {
        "id": 197654,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:43:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3787"
          }
        ]
      },
      {
        "id": 197915,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:14:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "KER processing can take a long time to run. We need to update the backend to run this processing as a background job so that the browser doesn't wait for a long-running request that will timeout.\r\n\r\n*Questions to Answer*\r\n1. Which task processing mechanism will me used?\r\n- Probably RabbitMQ due to integration w/ PCF\r\n\r\n2. How will tasks be persisted?\r\n- Likely by using existing PostgreSQL DB\r\n\r\n3. Does this solution work with standalone instance of app?\r\n\r\n*Notes*\r\nSee following article as a reference / possible approach for this work.\r\n[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n\r\n\r\n*Assumptions / Things handled later*\r\n- No notion of users right now, anyone can access anyone's results\r\n- Don’t limit the number of background jobs running at once\r\n- No way to cancel a job once it’s started\r\n- When/how to delete job statuses",
            "new_value": "KER processing can take a long time to run. We need to update the backend to run this processing as a background job so that the browser doesn't wait for a long-running request that will timeout.\r\n\r\n*Questions to Answer*\r\n1. Which task processing mechanism will me used?\r\n- Probably RabbitMQ due to integration w/ PCF\r\n\r\n2. How will tasks be persisted?\r\n- Likely by using existing PostgreSQL DB\r\n\r\n3. Does this solution work with standalone instance of app?\r\n- Both should be relevant. \r\n\r\n*Notes*\r\n* See following article as a reference / possible approach for this work.[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n* See attached picture for guidance on this story.\r\n\r\n*Assumptions / Things handled later*\r\n- No notion of users right now, anyone can access anyone's results\r\n- Don’t limit the number of background jobs running at once\r\n- No way to cancel a job once it’s started\r\n- When/how to delete job statuses\r\n\r\n"
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3787"
          }
        ]
      },
      {
        "id": 197918,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:16:16Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE: Convert KER processing to background job (backend only)",
            "new_value": "SPIKE: Convert KER processing to background job"
          }
        ]
      },
      {
        "id": 198168,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-15T14:24:07Z",
        "details": [
          {
            "property": "attachment",
            "name": "5203",
            "new_value": "IMG_20191114_111414742.jpg"
          },
          {
            "property": "attachment",
            "name": "5204",
            "new_value": "IMG_20191114_111418415.jpg"
          },
          {
            "property": "attachment",
            "name": "5205",
            "new_value": "IMG_20191114_111423863.jpg"
          }
        ]
      },
      {
        "id": 198170,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-15T14:29:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "KER processing can take a long time to run. We need to update the backend to run this processing as a background job so that the browser doesn't wait for a long-running request that will timeout.\r\n\r\n*Questions to Answer*\r\n1. Which task processing mechanism will me used?\r\n- Probably RabbitMQ due to integration w/ PCF\r\n\r\n2. How will tasks be persisted?\r\n- Likely by using existing PostgreSQL DB\r\n\r\n3. Does this solution work with standalone instance of app?\r\n- Both should be relevant. \r\n\r\n*Notes*\r\n* See following article as a reference / possible approach for this work.[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n* See attached picture for guidance on this story.\r\n\r\n*Assumptions / Things handled later*\r\n- No notion of users right now, anyone can access anyone's results\r\n- Don’t limit the number of background jobs running at once\r\n- No way to cancel a job once it’s started\r\n- When/how to delete job statuses\r\n\r\n",
            "new_value": "KER processing can take a long time to run. We need to update the backend to run this processing as a background job so that the browser doesn't wait for a long-running request that will timeout.\r\n\r\n*Questions to Answer*\r\n1. Which task processing mechanism will me used?\r\n- Probably RabbitMQ due to integration w/ PCF\r\n\r\n2. How will tasks be persisted?\r\n- Likely by using existing PostgreSQL DB\r\n\r\n3. Does this solution work with standalone instance of app?\r\n- Both should be relevant. \r\n\r\n*Notes*\r\n* See following article as a reference / possible approach for this work.[[https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xxii-background-jobs]]\r\n* See attached picture for guidance on this story.\r\n* Also, in light of a recent discussion, it might make more sense to combine this spike with the related frontend spike 51587\r\n\r\n*Assumptions / Things handled later*\r\n- No notion of users right now, anyone can access anyone's results\r\n- Don’t limit the number of background jobs running at once\r\n- No way to cancel a job once it’s started\r\n- When/how to delete job statuses\r\n\r\n"
          }
        ]
      },
      {
        "id": 198194,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-15T15:11:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3850"
          }
        ]
      },
      {
        "id": 198195,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-15T15:13:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 198318,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-15T19:30:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 200387,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "<pre>\r\n1. Which task processing mechanism will me used?\r\n -  The 2 popular background task queues for python are Celery (http://www.celeryproject.org/) and RQ (https://python-rq.org/).\r\n    Both options require a separate server to run workers which are listening for messages to run tasks\r\n    Celery:\r\n        Celery allows high customization with broker integration and backend storage options. \r\n        Brokers include RabbitMQ, Redis, AmazonSQS.  \r\n        Backend results can be stored using SQLAlchemy, Redis, RPC, or you can define a custom storage.\r\n    RQ:\r\n        RQ is a Redis specific job queue.\r\n        Only allows storage and brokers using Redis\r\n\r\n2. How will tasks be persisted?\r\n    - Answered above with storage options.\r\n\r\n3. Does this solution work with standalone instance of app?\r\n    - A standalone instance would require another server running the queue worker through docker orchestration.\r\n\r\nA spike branch was created with the name 51586-spike-background-processes using Celery queues with RabbitMQ and RPC.  \r\nIt allows sql queries to be tasked and returns job ids to the frontend.  \r\nThis was just experimental to see if Celery could be integrated with the current application.\r\nThe ./run_dev.sh start script should allow the Celery server and normal dev environment to spin up.\r\n\r\n</pre>",
        "created_on": "2019-11-20T16:36:03Z",
        "details": []
      },
      {
        "id": 201246,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-22T15:39:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201247,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-22T15:40:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201328,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-22T18:52:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51550,
    "subject": "Generate CSV File for Prechecks the same way as for KER CSV file",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197418,
        "user": {
          "id": 3848,
          "name": "Ali.Yasir.1262049333"
        },
        "notes": "",
        "created_on": "2019-11-12T22:36:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3848"
          }
        ]
      },
      {
        "id": 197991,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:20:19Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 198164,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-15T13:46:22Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 198177,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-15T14:45:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 198276,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-15T17:17:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 199668,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-19T15:42:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201244,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-22T15:39:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201260,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-22T16:22:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51470,
    "subject": "Build the Run KERs (loading) View Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197008,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:46:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197984,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:18:15Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199222,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:53:29Z",
        "details": [
          {
            "property": "attachment",
            "name": "5229",
            "new_value": "kers-running.sketch.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "GIVEN I have clicked the \"Run KERs\" button\r\nWHEN KERs are processing\r\nTHEN I should see a loading animation\r\nAND THEN I should see a tabular view of all the KERs that are running\r\n\r\n*KER title\r\n*KER description\r\n*KER link to full description?\r\n\r\n• used while schema checks and Kers are running\r\n• https://codepen.io/cpilz3/pen/BEOqJX\r\n\r\nZeplin link: https://zpl.io/2GR6qWj"
          }
        ]
      },
      {
        "id": 202422,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-02T21:46:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN I have clicked the \"Run KERs\" button\r\nWHEN KERs are processing\r\nTHEN I should see a loading animation\r\nAND THEN I should see a tabular view of all the KERs that are running\r\n\r\n*KER title\r\n*KER description\r\n*KER link to full description?\r\n\r\n• used while schema checks and Kers are running\r\n• https://codepen.io/cpilz3/pen/BEOqJX\r\n\r\nZeplin link: https://zpl.io/2GR6qWj",
            "new_value": "GIVEN I have clicked the \"Run KERs\" button\r\nWHEN KERs are processing\r\nTHEN the URL path should be /kers-checks-running\r\nAND THEN the animated loader is displayed on screen\r\nAND THEN the \"Running KERs...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, we are checking your data for the KER conditions in the table below. Depending on the size of your data, this may take a minute. \" message is displayed below the loader\r\nAND THEN a tabular view of all the KERs that are running should be displayed below the message.\r\n\r\n\r\nZeplin link: https://zpl.io/2GR6qWj"
          }
        ]
      },
      {
        "id": 202721,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T20:20:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 203028,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-04T15:34:21Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "52492"
          }
        ]
      },
      {
        "id": 203448,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:12:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 203449,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:12:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 203494,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:15:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN I have clicked the \"Run KERs\" button\r\nWHEN KERs are processing\r\nTHEN the URL path should be /kers-checks-running\r\nAND THEN the animated loader is displayed on screen\r\nAND THEN the \"Running KERs...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, we are checking your data for the KER conditions in the table below. Depending on the size of your data, this may take a minute. \" message is displayed below the loader\r\nAND THEN a tabular view of all the KERs that are running should be displayed below the message.\r\n\r\n\r\nZeplin link: https://zpl.io/2GR6qWj",
            "new_value": "GIVEN I have clicked the \"Run KERs\" button\r\nWHEN KERs are processing\r\n\r\nTHEN the animated loader is displayed on screen\r\nAND THEN the \"Running KERs...\" title is displayed above the loader animation\r\nAND THEN the \"Thank you for your patience, we are checking your data for the KER conditions in the table below. Depending on the size of your data, this may take a minute. \" message is displayed below the loader\r\n\r\n\r\nZeplin link: https://zpl.io/2GR6qWj"
          }
        ]
      },
      {
        "id": 204174,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-12-09T16:31:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204328,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T21:00:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204508,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T15:41:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204659,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:45:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51469,
    "subject": "Build the Schema Check Results View (Refactor Results)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197007,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:46:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197983,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:18:04Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199217,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:42:21Z",
        "details": [
          {
            "property": "attachment",
            "name": "5225",
            "new_value": "all passed.png"
          },
          {
            "property": "attachment",
            "name": "5226",
            "new_value": "exceptions.png"
          },
          {
            "property": "attachment",
            "name": "5227",
            "new_value": "alert.png"
          }
        ]
      },
      {
        "id": 199218,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:46:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "GIVEN The analysis of my file is complete\r\nWHEN There are no issues\r\nTHEN I should see an alert letting me know all schema checks have passed\r\n\r\nAND WHEN There are exceptions\r\nTHEN I should see a sidebar with the exceptions grouped by category\r\nAND THEN I should see a tabular view of each exception category with the feature, file name, and FID of each exception"
          }
        ]
      },
      {
        "id": 199219,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:47:01Z",
        "details": [
          {
            "property": "attachment",
            "name": "5228",
            "new_value": "schema-check-results.sketch.zip"
          }
        ]
      },
      {
        "id": 202142,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-27T20:00:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN The analysis of my file is complete\r\nWHEN There are no issues\r\nTHEN I should see an alert letting me know all schema checks have passed\r\n\r\nAND WHEN There are exceptions\r\nTHEN I should see a sidebar with the exceptions grouped by category\r\nAND THEN I should see a tabular view of each exception category with the feature, file name, and FID of each exception",
            "new_value": "GIVEN The analysis of my file is complete\r\nWHEN There are no issues\r\nTHEN I should see an alert letting me know all schema checks have passed\r\n\r\nAND WHEN There are exceptions\r\nTHEN I should see a sidebar with the exceptions grouped by category\r\nAND THEN I should see a tabular view of each exception category with the feature, file name, and FID of each exception\r\n\r\n*Zeplin Links--*\r\nSchema Check Success: https://zpl.io/aR9LDZN\r\nSchema Check Collapsed: https://zpl.io/Vq5xmpY\r\nSchema Check Expanded: https://zpl.io/VkzmOZW"
          }
        ]
      },
      {
        "id": 202713,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T20:16:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "GIVEN The analysis of my file is complete\r\nWHEN There are no issues\r\nTHEN I should see an alert letting me know all schema checks have passed\r\n\r\nAND WHEN There are exceptions\r\nTHEN I should see a sidebar with the exceptions grouped by category\r\nAND THEN I should see a tabular view of each exception category with the feature, file name, and FID of each exception\r\n\r\n*Zeplin Links--*\r\nSchema Check Success: https://zpl.io/aR9LDZN\r\nSchema Check Collapsed: https://zpl.io/Vq5xmpY\r\nSchema Check Expanded: https://zpl.io/VkzmOZW",
            "new_value": "GIVEN The analysis of my file is complete\r\nWHEN There are no issues\r\nTHEN I should see an alert letting me know all schema checks have passed\r\n\r\nAND WHEN There are exceptions\r\nTHEN I should see a sidebar with the exceptions grouped by category\r\nAND THEN I should see a tabular view of each exception category with the feature name, FCode, FID, and magnitude of each exception\r\n\r\n*Zeplin Links--*\r\nSchema Check Success: https://zpl.io/aR9LDZN\r\nSchema Check Collapsed: https://zpl.io/Vq5xmpY (follow AC for table headers)\r\nSchema Check Expanded: https://zpl.io/VkzmOZW (follow AC for table headers)"
          }
        ]
      },
      {
        "id": 202720,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T20:20:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 203088,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-04T19:16:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203441,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-12-05T17:54:33Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Build the Schema Check Results View",
            "new_value": "Build the Schema Check Results View (Refactor Results)"
          }
        ]
      },
      {
        "id": 204118,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T14:10:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205830,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-13T19:48:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206887,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-20T14:50:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207191,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-26T14:04:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 207194,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-26T15:22:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51466,
    "subject": "Link Component (text with icon used in tables) ",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197003,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:45:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197980,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:17:25Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199192,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Zeplin link: https://zpl.io/2p7z3e8",
        "created_on": "2019-11-18T20:55:46Z",
        "details": []
      },
      {
        "id": 201334,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-22T19:11:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "Acceptance Criteria needed\r\n\r\n*Notes:*\r\n* Add to Alert component when done."
          }
        ]
      },
      {
        "id": 202411,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-02T21:39:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed\r\n\r\n*Notes:*\r\n* Add to Alert component when done.",
            "new_value": "GIVEN a hyperlink exists\r\nWHEN the link opens a new tab/window\r\nTHEN the link is displayed with an icon indicating the link will open in a new tab/window\r\n\r\n*Notes:*\r\nhttps://zpl.io/2p7z3e8"
          }
        ]
      },
      {
        "id": 202718,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T20:20:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 202835,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "is this story to merely add the arrow icon indicator to all the links?",
        "created_on": "2019-12-03T22:07:30Z",
        "details": []
      },
      {
        "id": 203493,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T20:12:39Z",
        "details": [
          {
            "property": "attachment",
            "name": "5301",
            "new_value": "links.JPG"
          }
        ]
      },
      {
        "id": 203528,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-05T22:36:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203995,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-06T14:25:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 203996,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-06T14:25:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204275,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T19:16:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204506,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T15:39:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205049,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T15:27:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51465,
    "subject": "Path Stepper (the whole grey bar).",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197002,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:45:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197979,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:17:09Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 198469,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-18T15:55:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text"
          }
        ]
      },
      {
        "id": 198547,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T17:57:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays a \"completed checkmark,\" a label, and link to display it\r\nAND THEN My current step displayed a \"current checkmark\" and a label\r\nAND THEN My future steps display a \"disabled checkmark\" and a label\r\n\r\nAND WHEN I click the step link\r\nTHEN I am navigated to the completed step\r\n\r\nAND WHEN the previous step is \"Run Schema Checks\"\r\nTHEN I am able to upload a new file\r\n\r\nAND WHEN the previous step is \"Run KERs\"\r\nTHEN the KERs re-run\r\n\r\nAND WHEN the previous step is \"Schema Check Results\" or KERs Results\"\r\nTHEN I can view the associated results\r\n\r\nAND WHEN I click an active main CTA\r\nTHEN the next step is run\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text"
          }
        ]
      },
      {
        "id": 199123,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-18T19:35:21Z",
        "details": [
          {
            "property": "attachment",
            "name": "5219",
            "new_value": "stepper-navigation.sketch.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays a \"completed checkmark,\" a label, and link to display it\r\nAND THEN My current step displayed a \"current checkmark\" and a label\r\nAND THEN My future steps display a \"disabled checkmark\" and a label\r\n\r\nAND WHEN I click the step link\r\nTHEN I am navigated to the completed step\r\n\r\nAND WHEN the previous step is \"Run Schema Checks\"\r\nTHEN I am able to upload a new file\r\n\r\nAND WHEN the previous step is \"Run KERs\"\r\nTHEN the KERs re-run\r\n\r\nAND WHEN the previous step is \"Schema Check Results\" or KERs Results\"\r\nTHEN I can view the associated results\r\n\r\nAND WHEN I click an active main CTA\r\nTHEN the next step is run\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays a \"completed checkmark,\" a label, and link to display it\r\nAND THEN My current step displayed a \"current checkmark\" and a label\r\nAND THEN My future steps display a \"disabled checkmark\" and a label\r\n\r\nAND WHEN I click the step link\r\nTHEN I am navigated to the completed step\r\n\r\nAND WHEN the previous step is \"Run Schema Checks\"\r\nTHEN I am able to upload a new file\r\n\r\nAND WHEN the previous step is \"Run KERs\"\r\nTHEN the KERs re-run\r\n\r\nAND WHEN the previous step is \"Schema Check Results\" or KERs Results\"\r\nTHEN I can view the associated results\r\n\r\nAND WHEN I click an active main CTA\r\nTHEN the next step is run\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf\r\nSketch File attached. "
          }
        ]
      },
      {
        "id": 202518,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T14:24:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 202529,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:00:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 202711,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T19:59:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays a \"completed checkmark,\" a label, and link to display it\r\nAND THEN My current step displayed a \"current checkmark\" and a label\r\nAND THEN My future steps display a \"disabled checkmark\" and a label\r\n\r\nAND WHEN I click the step link\r\nTHEN I am navigated to the completed step\r\n\r\nAND WHEN the previous step is \"Run Schema Checks\"\r\nTHEN I am able to upload a new file\r\n\r\nAND WHEN the previous step is \"Run KERs\"\r\nTHEN the KERs re-run\r\n\r\nAND WHEN the previous step is \"Schema Check Results\" or KERs Results\"\r\nTHEN I can view the associated results\r\n\r\nAND WHEN I click an active main CTA\r\nTHEN the next step is run\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf\r\nSketch File attached. ",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /schema-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /ker-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf\r\nSketch File attached. "
          }
        ]
      },
      {
        "id": 202717,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T20:19:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202824,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T21:55:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203445,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:11:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 203450,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:14:21Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205725,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-12-13T18:01:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /schema-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /ker-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2d983e909b46237db46cf\r\nSketch File attached. ",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /schema-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /ker-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k"
          }
        ]
      },
      {
        "id": 207235,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-30T13:28:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207479,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-01-02T16:15:14Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /schema-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /ker-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /schema-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /ker-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link or the icon will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k"
          }
        ]
      },
      {
        "id": 207486,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-01-02T16:38:10Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN I have uploaded a file and clicked the \"Run Schema Checks\" button\r\nAND WHEN the schema checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /schema-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN I have clicked the \"Run KERs\" button\r\nAND WHEN the KER Checks are running\r\nAND WHEN a loading screen is displayed\r\nAND WHEN the url location is /ker-checks-running\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link or the icon will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /running-qac/schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /running-qac/ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link or the icon will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k"
          }
        ]
      },
      {
        "id": 207489,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:38:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207734,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2020-01-02T17:43:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /running-qac/schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /running-qac/ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link or the icon will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k",
            "new_value": "*As a* QAC User\r\n*I want* to see where I am in the QAC process\r\n*So that* I know where I am in the process and can go back to any sections I've completed.\r\n\r\n*Acceptance Criteria*\r\nGIVEN I have completed the information required for a step\r\n\r\nWHEN I view the indicator\r\nTHEN My previous step displays an icon indicating completion, a label, and link to navigate to the step\r\nAND THEN My current step displayed an icon indicating active, and a label without a link\r\nAND THEN My future steps display an icon indicating inactive/incomplete, and a disabled label without a link\r\n\r\nAND WHEN I click a step link\r\nTHEN I am navigated to the step\r\n\r\nAND WHEN Schema Checks are complete\r\nAND WHEN the Schema Check Results screen is displayed\r\nAND WHEN the url location is /running-qac/schema-check-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Upload a file\"\r\nAND THEN the active step is \"Schema Check Results\"\r\n\r\nAND WHEN KER Checks are complete\r\nAND WHEN the KER Results screen is displayed\r\nAND WHEN the url location is /running-qac/ker-results\r\nTHEN I am able to see the stepper\r\nAND THEN the previous link is \"Schema Check Results\"\r\nAND THEN the active step is \"KER Results\"\r\n\r\nGIVEN i navigate away from the last run step\r\nWHEN i click the \"Running QAC\" link in the header\r\nTHEN I am redirected to the last run step\r\n\r\n\r\nNotes:\r\n- Links for incomplete sections will be disabled.\r\n- The button will progress you through the stepper and set the new state/section\r\n- Button text will change dependent on Section (see sketch file)\r\n- Clicking on a link or the icon will change the state of the app to the corresponding link, and set the link to active\r\n- Visited links will display a check, indicating you have already completed that section\r\n- Hovering over a completed state will remove the underline on the text\r\n\r\n*Zeplin Link*: https://zpl.io/VQnveQW\r\n*Sketch Link:* https://sketch.cloud/s/l8zmo/a/DxYl8k"
          }
        ]
      },
      {
        "id": 207826,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-03T16:30:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208113,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-06T17:21:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 208115,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-06T17:25:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51464,
    "subject": "Build Loader Component (world)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197001,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:45:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197977,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:16:53Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 202410,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-02T21:38:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed:\r\n\r\nNotes:\r\n•\tused while schema checks and Kers are running\r\n•\thttps://codepen.io/cpilz3/pen/BEOqJX\r\n",
            "new_value": "GIVEN a file is being processed for schema checks or KERs\r\nWHEN the process is running\r\nTHEN the animated loader is displayed on screen\r\n\r\nNotes:\r\n•\tused while schema checks and Kers are running\r\n•\thttps://codepen.io/cpilz3/pen/BEOqJX\r\n"
          }
        ]
      },
      {
        "id": 202517,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T14:24:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 202530,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:00:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 202548,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T15:14:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202946,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:18:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204020,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:16:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204027,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:20:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51463,
    "subject": "Build an Informational Alert Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 197000,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:45:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197390,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-12T21:02:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed\r\n\r\nNotes:\r\n•\thttps://designsystem.digital.gov/components/alert/\r\n•\tInclude all states?\r\n•\tmay need a custom version based on designs (different colors used)\r\n",
            "new_value": "Acceptance Criteria needed\r\n\r\nNotes:\r\n•\thttps://designsystem.digital.gov/components/alert/\r\n•\tInclude all states?\r\n•\tmay need a custom version based on designs (different colors used)\r\n\r\n\r\n<pre>\r\n<div class=\"usa-alert usa-alert--success\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Success status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--warning\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Warning status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--error\" role=\"alert\">\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Error status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--info\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Informative status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n</pre>"
          }
        ]
      },
      {
        "id": 197976,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:16:22Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 198412,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Zeplin Files: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/dashboard?seid=5dd2af60695fcb620d07d753\r\nSketch file attached. ",
        "created_on": "2019-11-18T14:53:28Z",
        "details": [
          {
            "property": "attachment",
            "name": "5212",
            "new_value": "uploadstructure.sketch.zip"
          }
        ]
      },
      {
        "id": 201332,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-22T19:08:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed\r\n\r\nNotes:\r\n•\thttps://designsystem.digital.gov/components/alert/\r\n•\tInclude all states?\r\n•\tmay need a custom version based on designs (different colors used)\r\n\r\n\r\n<pre>\r\n<div class=\"usa-alert usa-alert--success\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Success status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--warning\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Warning status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--error\" role=\"alert\">\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Error status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--info\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Informative status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n</pre>",
            "new_value": "Acceptance Criteria needed\r\n\r\nNotes:\r\n•\thttps://designsystem.digital.gov/components/alert/\r\n•\tInclude all states?\r\n•\tmay need a custom version based on designs (different colors used)\r\n*       Include option for a link with an icon\r\n\r\n\r\n\r\n<pre>\r\n<div class=\"usa-alert usa-alert--success\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Success status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--warning\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Warning status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--error\" role=\"alert\">\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Error status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--info\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Informative status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n</pre>"
          }
        ]
      },
      {
        "id": 202150,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-27T20:12:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed\r\n\r\nNotes:\r\n•\thttps://designsystem.digital.gov/components/alert/\r\n•\tInclude all states?\r\n•\tmay need a custom version based on designs (different colors used)\r\n*       Include option for a link with an icon\r\n\r\n\r\n\r\n<pre>\r\n<div class=\"usa-alert usa-alert--success\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Success status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--warning\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Warning status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--error\" role=\"alert\">\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Error status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--info\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Informative status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n</pre>",
            "new_value": "Acceptance Criteria needed\r\n\r\nNotes:\r\n•\thttps://designsystem.digital.gov/components/alert/\r\n•\tInclude all states?\r\n•\tmay need a custom version based on designs (different colors used)\r\n*       Include option for a link with an icon\r\n\r\n*Zeplin links:* \r\nInfo Icon: https://zpl.io/VOpYMD8\r\nInfo Acordian: https://zpl.io/VQnq0Pk\r\n\r\n<pre>\r\n<div class=\"usa-alert usa-alert--success\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Success status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--warning\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Warning status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--error\" role=\"alert\">\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Error status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"usa-alert usa-alert--info\" >\r\n  <div class=\"usa-alert__body\">\r\n    <h3 class=\"usa-alert__heading\">Informative status</h3>\r\n    <p class=\"usa-alert__text\">Lorem ipsum dolor sit amet, <a href=\"javascript:void(0);\">consectetur adipiscing</a> elit, sed do eiusmod.</p>\r\n  </div>\r\n</div>\r\n</pre>"
          }
        ]
      },
      {
        "id": 202406,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "We have already completed this work as part of another story. This card can be deleted.",
        "created_on": "2019-12-02T21:36:27Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 202516,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T14:24:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202531,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:00:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 202577,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:33:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202588,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-03T15:44:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 203080,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T18:47:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51462,
    "subject": "Build un-styled Accordion component that can be used to toggle information open and closed ().",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 196999,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:44:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197975,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:16:06Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199140,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Written to ensure structure and semantic markup is consistent between Schema Select, Schema Check and KER description accordion elements. ",
        "created_on": "2019-11-18T19:52:49Z",
        "details": []
      },
      {
        "id": 202149,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-27T20:11:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "Acceptance Criteria needed\r\n*Zeplin Links--*\r\nInfo Icon: https://zpl.io/VOpYMD8\r\nInfo Accordion: https://zpl.io/VQnq0Pk"
          }
        ]
      },
      {
        "id": 202405,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "We have already completed this work as part of another story. This card can be deleted.",
        "created_on": "2019-12-02T21:35:58Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 202515,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T14:24:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202532,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:00:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 202576,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T15:33:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202586,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-03T15:44:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202938,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-04T12:26:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51455,
    "subject": "KER: OBJECTWITHOUT (Area Not Containing Any Part Of Another Feature) Results - PART 1",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196926,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T17:25:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197025,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197949,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:08:12Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198013,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:57:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display FID, Feature Name, and FCODE.\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 198021,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T19:00:33Z",
        "details": [
          {
            "property": "attachment",
            "name": "5199",
            "new_value": "OBJECTWITHOUT.JPG"
          }
        ]
      },
      {
        "id": 198442,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:35:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display FID, Feature Name, and FCODE.\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Condition number, Feature Names, and FCODEs.\r\n* This KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 199561,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:55:31Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Condition number, Feature Names, and FCODEs.\r\n* This KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 199785,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:02:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 200603,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-20T21:07:56Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: OBJECTWITHOUT (Area Not Containing Any Part Of Another Feature) Results",
            "new_value": "KER: OBJECTWITHOUT (Area Not Containing Any Part Of Another Feature) Results - PART 1"
          }
        ]
      },
      {
        "id": 200848,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:37:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200852,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:26:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location.\r\n\r\n*Details on OBJECTWITHOUT_1*\r\nAny area Bridge (AQ040), Dam (BI020), Embankment (DB090), Transportation Station (AQ125) or Tunnel (AQ130) feature with TRS = 'Railway' (12) that does not contain a line Railway (AN010) or Railway Sidetrack (AN050) feature.\r\n\r\n*+Notes:+*\r\n*Area Power Substation feature without a line Power Line feature (nearest Power Line (shown in red at top right) is no closer than 8 m)*\r\nThis inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement. In the above example, GAIT has identified a case where an area Power Substation feature does not include any part of a line Power Line feature. The condition is described in the condition's detailed information window and highlighted in red on the main screen. This inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 203967,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T13:31:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204087,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T19:26:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204182,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-09T17:05:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204638,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-10T17:49:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204648,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:22:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204665,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:57:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51441,
    "subject": "KER: FEATNOTCUT (Line Not Cut at Coincidence With Another Line End Node) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196913,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T17:16:05Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: FEATNOTCUT (Feature Not Cut    ) Results",
            "new_value": "KER: FEATNOTCUT (Line Not Cut at Coincidence With Another Line End Node) Results"
          }
        ]
      },
      {
        "id": 196915,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T17:17:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "AC:\r\n\r\nThis KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197024,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197948,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:07:59Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198011,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:52:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 198020,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T19:00:18Z",
        "details": [
          {
            "property": "attachment",
            "name": "5198",
            "new_value": "FEATNOTCUT.JPG"
          }
        ]
      },
      {
        "id": 198440,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:34:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Condition number, Feature Names of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 199560,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:54:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Condition number, Feature Names of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 199784,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:02:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 200847,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:37:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 203211,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-05T14:05:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203469,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-05T18:49:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\nThis KER can identify single line features (defined by the primary participant specification) that have not been cut into multiple features at the point(s) where they coincide with the end node of a second line feature (defined by the secondary participant specification). The two line features must have at least one segment in common and the end point of the second line feature (where the first feature should have been cut) must not be connected to a like feature (i.e., another line feature meeting the secondary participant specification) for the inspection to apply. Also, there is a tolerance associated with the KER that is used in both the overlap and end node coincidence determinations. If the two features have segments that are nearly overlapping (within the tolerance distance) and the two features have end points that are more than the tolerance distance apart, a condition will be generated.\r\n"
          }
        ]
      },
      {
        "id": 203498,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-05T20:21:47Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\nThis KER can identify single line features (defined by the primary participant specification) that have not been cut into multiple features at the point(s) where they coincide with the end node of a second line feature (defined by the secondary participant specification). The two line features must have at least one segment in common and the end point of the second line feature (where the first feature should have been cut) must not be connected to a like feature (i.e., another line feature meeting the secondary participant specification) for the inspection to apply. Also, there is a tolerance associated with the KER that is used in both the overlap and end node coincidence determinations. If the two features have segments that are nearly overlapping (within the tolerance distance) and the two features have end points that are more than the tolerance distance apart, a condition will be generated.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\nThis KER can identify single line features (defined by the primary participant specification) that have not been cut into multiple features at the point(s) where they coincide with the end node of a second line feature (defined by the secondary participant specification). The two line features must have at least one segment in common and the end point of the second line feature (where the first feature should have been cut) must not be connected to a like feature (i.e., another line feature meeting the secondary participant specification) for the inspection to apply. Also, there is a tolerance associated with the KER that is used in both the overlap and end node coincidence determinations. If the two features have segments that are nearly overlapping (within the tolerance distance) and the two features have end points that are more than the tolerance distance apart, a condition will be generated.\r\n\r\n* Question *\r\nCurrently, the behavior of the application is to identify and return the inner feature in this comparison (the bridge or tunnel). Is this desirable, or do we want to instead display the outer feature (road, railway, etc.) to the user? The language of the KER description seems to suggest that we should be identifying the outer feature because it is the feature that was not cut properly."
          }
        ]
      },
      {
        "id": 203500,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-05T20:22:22Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\nThis KER can identify single line features (defined by the primary participant specification) that have not been cut into multiple features at the point(s) where they coincide with the end node of a second line feature (defined by the secondary participant specification). The two line features must have at least one segment in common and the end point of the second line feature (where the first feature should have been cut) must not be connected to a like feature (i.e., another line feature meeting the secondary participant specification) for the inspection to apply. Also, there is a tolerance associated with the KER that is used in both the overlap and end node coincidence determinations. If the two features have segments that are nearly overlapping (within the tolerance distance) and the two features have end points that are more than the tolerance distance apart, a condition will be generated.\r\n\r\n* Question *\r\nCurrently, the behavior of the application is to identify and return the inner feature in this comparison (the bridge or tunnel). Is this desirable, or do we want to instead display the outer feature (road, railway, etc.) to the user? The language of the KER description seems to suggest that we should be identifying the outer feature because it is the feature that was not cut properly.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs, and location.\r\n\r\n*+Notes:+*\r\nThis KER can identify single line features (defined by the primary participant specification) that have not been cut into multiple features at the point(s) where they coincide with the end node of a second line feature (defined by the secondary participant specification). The two line features must have at least one segment in common and the end point of the second line feature (where the first feature should have been cut) must not be connected to a like feature (i.e., another line feature meeting the secondary participant specification) for the inspection to apply. Also, there is a tolerance associated with the KER that is used in both the overlap and end node coincidence determinations. If the two features have segments that are nearly overlapping (within the tolerance distance) and the two features have end points that are more than the tolerance distance apart, a condition will be generated.\r\n\r\n*Question*\r\nCurrently, the behavior of the application is to identify and return the inner feature in this comparison (the bridge or tunnel). Is this desirable, or do we want to instead display the outer feature (road, railway, etc.) to the user? The language of the KER description seems to suggest that we should be identifying the outer feature because it is the feature that was not cut properly."
          }
        ]
      },
      {
        "id": 204022,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:17:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204208,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:17:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204585,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T16:33:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51440,
    "subject": "KER: ANY_SAMEID (Any Two Features With Same Identifier) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196816,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:13:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "AC:\r\n\r\nThis KER shall display Feature Name of the features with conditions (with FCODEs),_ e.g._ Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196823,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:18:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Feature Name of the features with conditions (with FCODEs),_ e.g._ Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display FIDs, Feature Name of the features with conditions (with FCODEs),_ e.g._ Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196824,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:18:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FIDs, Feature Name of the features with conditions (with FCODEs),_ e.g._ Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197023,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197932,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:27:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n*Notes:*\r\n* The Gait manual should help with each 'results' story."
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 197944,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:06:57Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 197992,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:26:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 198001,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "*Any Two Features With The Same Identifier (ANY_SAMEID)* \r\n \r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n",
        "created_on": "2019-11-14T18:37:56Z",
        "details": [
          {
            "property": "attachment",
            "name": "5193",
            "new_value": "ANY_SAMEID.JPG"
          }
        ]
      },
      {
        "id": 198002,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:38:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n*Notes:*\r\n* The Gait manual should help with each 'results' story.",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 198180,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-15T14:57:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198214,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-15T15:51:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 198435,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:30:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FIDs, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Condition number, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 199554,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:52:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Condition number, Feature Name of the features with conditions (with FCODEs), e.g. Road and River (LAP030 and LBH140).\r\n* This KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 199778,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T19:59:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n",
            "new_value": "*Acceptance Criteria:*\r\n# This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 199780,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:00:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n# This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 200277,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-20T14:24:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201331,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-22T19:06:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202055,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-27T14:49:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202300,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-02T15:34:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202316,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-02T15:54:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202936,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-04T12:11:05Z",
        "details": [
          {
            "property": "attachment",
            "name": "5298",
            "new_value": "MGCP45_ANYSAMEID_Test_2.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\n\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\n*Questions:*\r\n* What does it mean when two different features with the same identifier will fail? \r\n\r\n+*Notes:*+\r\n*Line Cart Track and Road features with the same unique identifier*\r\nThis inspection can be applied to any pair of point, line or area features to identify those cases where the two features (described by the primary and secondary participant specifications) have exactly the same unique identifier. Features that do not have an assigned identifier and features that have been assigned an identifier attribute, but the value has been left blank will not be considered by this inspection. This inspection will report any two features, regardless of geometry or attribution, that have exactly the same (non-blank) value as their unique identifier (either UFI, GFID, FLDBID or UID). This inspection has been designed to work in concert with the Complete Duplicates inspection. Both of these inspections are frequently applied as part of a single inspection set (e.g. a master profile) and together they can report all interesting cases of feature duplication without doublereporting any conditions. The Complete Duplicates inspection will never report conditions for any features that have the same unique identifier (those will be reported by this inspection). The inspection Complete Duplicates – Same UFI/GFID/FLDBID/UID can be manually configured to identify any two features that share unique identifier, feature type (FCODE), geometry and attribution (including attribute values). In the illustration, GAIT has identified a case where line Road and Cart Track features share exactly the same unique identifier (a UID in the example case). The condition is described in the condition's detailed information window and highlighted in red on the main screen. These two features would not be reported by the Complete Duplicates inspection or the Complete Duplicates – Same UFI/GFID/FLDBID/UID inspection because they have different feature types.\r\n\r\nNOTES for GeoBadger test data:\r\n        Part    Good    Bad\r\n        1       267     267\r\n________________________________________\r\n        Sum     267     267\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 203083,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "* The MGCP45_ANYSAMEID_Test_2.zip file uploads and runs schema checks correctly but fails to run KERs\r\n* Receive the following error \"Failure prevents continuing\" after running KERs (see attached image)",
        "created_on": "2019-12-04T19:00:53Z",
        "details": [
          {
            "property": "attachment",
            "name": "5300",
            "new_value": "Capture.PNG"
          }
        ]
      },
      {
        "id": 203084,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T19:01:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 204220,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-09T17:28:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51439,
    "subject": "KER: MULTIPARTA (Multi-part Area) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196815,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:05:29Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: MULTIPARTA",
            "new_value": "KER: MULTIPARTA (Multi-part Area) Results"
          }
        ]
      },
      {
        "id": 196817,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:14:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196822,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:17:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197022,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197947,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:07:48Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198009,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:51:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 198019,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T19:00:04Z",
        "details": [
          {
            "property": "attachment",
            "name": "5197",
            "new_value": "MULTIPARTA.JPG"
          }
        ]
      },
      {
        "id": 198438,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:32:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 199559,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:54:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 199783,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:01:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Area River feature that includes two parts*\r\nThis inspection can be applied to any area feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. (Note that inner rings and outer rings are not different parts unless they are so designated in the input data.) When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. The above example illustrates GAIT identification of a single area River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part area feature conditions, both of which would be tallied in the total number of conditions and both of which will have the same magnitude. As each part is an individual condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the condition’s detailed information window. The several parts of the same feature are always listed consecutively in the list of conditions. Note that both parts are highlighted on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other parts of the same feature. Parts that are not selected will be drawn in red, but not bold red.\r\n"
          }
        ]
      },
      {
        "id": 200846,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:37:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200864,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:31:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201413,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T14:07:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 203118,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-04T21:24:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204089,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T19:27:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204206,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:17:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204658,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:44:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 211631,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T13:50:58Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "54012"
          }
        ]
      }
    ]
  },
  {
    "id": 51438,
    "subject": "KER: MULTIPARTL (Multi-part Line) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196811,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:01:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196818,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:15:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196821,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:17:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "__AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197021,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197946,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:07:31Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198008,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:49:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "__AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n"
          }
        ]
      },
      {
        "id": 198018,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:59:51Z",
        "details": [
          {
            "property": "attachment",
            "name": "5196",
            "new_value": "MULTIPARTL.JPG"
          }
        ]
      },
      {
        "id": 198303,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-15T18:45:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 198437,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:31:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n"
          }
        ]
      },
      {
        "id": 199557,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:53:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display Magnitude (number of parts), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n"
          }
        ]
      },
      {
        "id": 199781,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:01:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n"
          }
        ]
      },
      {
        "id": 200863,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:31:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201412,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T14:07:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 203117,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-04T21:24:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204088,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T19:27:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204210,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:17:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204625,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T17:10:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude (number of parts), \r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE, location, and Magnitude (number of parts)\r\n\r\n+*Notes:*+\r\n*Line River feature that includes two parts*\r\nThis inspection can be applied to any line feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which the GAIT project is constructed. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. This example illustrates GAIT identification of a single line River feature that includes two parts. Each of the parts will be listed as an individual condition in the list of specific conditions and each part will contribute to the number of identified conditions. That is, this single River feature would result in two multi-part line feature conditions, both of which would be tallied in the total number of conditions. As each part is a condition listed in the specific conditions list, each part can be described individually, as shown above. The condition magnitude is “2” as the River feature has two parts. One of the two parts is described in the specific conditions window. Note that both parts are highlighted in red on the main screen. The feature part corresponding to the illustrated specific condition is drawn using a bold red line to distinguish it from the other part.\r\n"
          }
        ]
      },
      {
        "id": 204626,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T17:23:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 211633,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T13:52:31Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "54013"
          }
        ]
      }
    ]
  },
  {
    "id": 51437,
    "subject": "KER: MULTIPARTP (Multi-part Point) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196808,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T12:48:25Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: MULTIPARTP (Multipart Points) Results",
            "new_value": "KER: MULTIPARTP (Multi-part Point) Results"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "This KER shall return:\r\n\r\n",
            "new_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196812,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:01:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196819,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:15:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196820,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:16:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197020,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197704,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T19:34:58Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51623"
          }
        ]
      },
      {
        "id": 197943,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:06:46Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198007,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:48:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n"
          }
        ]
      },
      {
        "id": 198302,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-15T18:44:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 198436,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:31:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Magnitude (number of parts), FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Magnitude (number of parts), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n"
          }
        ]
      },
      {
        "id": 199556,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:53:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Magnitude (number of parts), Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return UUID, Feature Name, FCODE, location, and Magnitude (number of parts)\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n"
          }
        ]
      },
      {
        "id": 199779,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T20:00:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return UUID, Feature Name, FCODE, location, and Magnitude (number of parts)\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE, location, and Magnitude (number of parts)\r\n\r\n+*Notes:*+\r\n*Part Of Multi-part Point (MULTIPARTP)* \r\nThis inspection can be applied to any point feature to identify those that include more than a specified number of parts. The number of parts that comprise an individual feature is defined in the input (source) data from which GAIT constructs its project. When input data has more than a single part, GAIT preserves that information so that the multi-part features can be identified. GAIT will display multi-part point features in a similar manner to the method of displaying other multi-part features (see examples for Part Of Multi-part Line and Part Of Multi-part Area).\r\n"
          }
        ]
      },
      {
        "id": 200479,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-20T18:33:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201411,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-25T14:07:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 203116,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-04T21:24:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204021,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:17:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204209,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:17:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204647,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:21:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 211636,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T13:54:57Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "54014"
          }
        ]
      }
    ]
  },
  {
    "id": 51436,
    "subject": "KER: C_DUPS (Complete Duplicates) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196807,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T12:45:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "This KER shall return:\r\n\r\nFID, Feature Name, and FCODE.",
            "new_value": "This KER shall display:\r\n\r\nFID, Feature Name, FCODE, and location."
          }
        ]
      },
      {
        "id": 196810,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T12:49:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "This KER shall display:\r\n\r\nFID, Feature Name, FCODE, and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196813,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:02:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197019,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:57:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197931,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:24:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "__AC:\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and geom\r\n"
          }
        ]
      },
      {
        "id": 197941,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:06:23Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 197945,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:07:07Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 197993,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:26:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 198004,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:46:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "__AC:\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and geom\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and geom\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n"
          }
        ]
      },
      {
        "id": 198016,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:58:37Z",
        "details": [
          {
            "property": "attachment",
            "name": "5194",
            "new_value": "C_DUPS.JPG"
          }
        ]
      },
      {
        "id": 198213,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-15T15:51:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198434,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:28:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and geom\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n\r\nThis KER shall display Condition number, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with UUID, Feature Name, FCODE and geom\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n"
          }
        ]
      },
      {
        "id": 198742,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T18:45:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n\r\nThis KER shall display Condition number, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with UUID, Feature Name, FCODE and geom\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n\r\nThis KER shall display Condition number, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with Feature Name, FCODE and geom\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n"
          }
        ]
      },
      {
        "id": 199552,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:51:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n\r\nThis KER shall display Condition number, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with Feature Name, FCODE and geom\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n# This KER shall return Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n"
          }
        ]
      },
      {
        "id": 199671,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-19T15:42:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n# This KER shall return Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n"
          }
        ]
      },
      {
        "id": 199718,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-19T18:17:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n# This KER shall display Feature Name, FCODE, and UID.\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n"
          }
        ]
      },
      {
        "id": 200337,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T15:44:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 200365,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T16:14:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 200601,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T20:53:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 202935,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-04T11:27:09Z",
        "details": [
          {
            "property": "attachment",
            "name": "5297",
            "new_value": "cdups_2019-11-18.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n# This KER shall display Feature Name, FCODE, and UID.\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n# This KER shall display Feature Name, FCODE, and UID.\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n\r\nNOTES on GeoBadger test data:\r\n2403 Good / 2403 Bad\r\n\r\n"
          }
        ]
      },
      {
        "id": 212451,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-29T16:19:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*++\r\n# This KER shall display Feature Name, FCODE, and UID.\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*Completely duplicated line Road features*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n\r\nNOTES on GeoBadger test data:\r\n2403 Good / 2403 Bad\r\n\r\n",
            "new_value": "*Acceptance Criteria:*++\r\n# This KER shall display Feature Name, FCODE, and UID.\r\n# This KER shall return UUID, Feature Name, FCODE and geom\r\n\r\n\r\n*Notes:*++\r\n*From GAIT 26*\r\nThis inspection can be applied to any point, line or area feature to identify those cases where the feature (as described by the primary participant specification) is geometrically duplicated by a second feature AND those two features have exactly the same attributes and attribute values as well. Complete duplicates are geometric duplicates that also duplicate their feature types and attribution (e.g., FCODE, geometry, attributes and attribute values); the features are indistinguishable, with the possible exception of unique identifiers. In fact, an exception occurs when two complete duplicate features also have the same unique identifier (e.g., GFID, UID, etc.). Complete duplicates are not reported here when the features concerned have the same identification number. These features are reported by both the Complete Duplicates – Same UFI/GFID/FLDBID/UID and the Any Two Features With The Same Identifier inspections. Note that both the Complete Duplicates inspection and the Any Two Features With The Same Identifier inspection are used very frequently. Thus, they have been specifically implemented to avoid multiple reports of the same conditions during their coordinated use. In the illustration, GAIT has identified a case where two line Road features share exactly the same location and attribution. The condition is described in the condition's detailed information window and highlighted in red on the main screen. Note that this inspection has also been engineered to function cooperatively with the Geometric Duplicate inspection. Complete Duplicate conditions will not be reported as Geometric Duplicate conditions (even though Complete Duplicate features have identical geometry). Also note that GAIT uses only one of the completely duplicated features in subsequent analyses in an effort to reduce presentation of conditions that arise simply from feature duplication, even when the Complete Duplicates inspection has not been activated.\r\n\r\n\r\nNOTES on GeoBadger test data:\r\n2403 Good / 2403 Bad\r\n\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 51434,
    "subject": "KER: V_DUPS (Duplicate Vertices) Results",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 196791,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T12:23:00Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "V",
            "new_value": "KER: V_DUPS (Duplicate Vertices) Results"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "This KER shall return:\r\n\r\nFID, Feature Name, and, FCODE."
          },
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "7"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196806,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T12:45:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "This KER shall return:\r\n\r\nFID, Feature Name, and, FCODE.",
            "new_value": "This KER shall display:\r\n\r\nFID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196809,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T12:49:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "This KER shall display:\r\n\r\nFID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 196814,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-08T13:02:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name, and FCODE.\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location."
          }
        ]
      },
      {
        "id": 197013,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T19:51:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197928,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:23:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n\r\nThis KER shall display FID, Feature Name (with FCODE).\r\nThis KER shall return shapefile(s) with FID, Feature Name, FCODE and location.",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location of the duplication\r\n* See documentation for each KER\r\n"
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 197994,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:26:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 198006,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:47:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location of the duplication\r\n* See documentation for each KER\r\n",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location of the duplication\r\n* See documentation for each KER\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198017,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:58:53Z",
        "details": [
          {
            "property": "attachment",
            "name": "5195",
            "new_value": "V_DUPS.JPG"
          }
        ]
      },
      {
        "id": 198029,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-14T19:14:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3413"
          }
        ]
      },
      {
        "id": 198431,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:25:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display FID, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with FID, Feature Name, FCODE and location of the duplication\r\n* See documentation for each KER\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n",
            "new_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location of the duplication\r\n* See documentation for each KER\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n"
          }
        ]
      },
      {
        "id": 199553,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T14:52:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n\r\n* This KER shall display Condition number, Feature Name (with FCODE).\r\n* This KER shall return shapefile(s) with UUID, Feature Name, FCODE and location of the duplication\r\n* See documentation for each KER\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n"
          }
        ]
      },
      {
        "id": 199770,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-19T19:46:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n"
          }
        ]
      },
      {
        "id": 200590,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "Ready for code review - Mary added as required approval because of changes made to LOAD_KERS.sql.",
        "created_on": "2019-11-20T20:12:57Z",
        "details": []
      },
      {
        "id": 200591,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-20T20:13:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n\r\n\r\nReady for code review - Mary added as required approval because of changes made to LOAD_KERS.sql."
          }
        ]
      },
      {
        "id": 200598,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-20T20:34:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201409,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-25T14:04:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201586,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-25T20:22:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201593,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T20:38:56Z",
        "details": [
          {
            "property": "attachment",
            "name": "5282",
            "new_value": "vdups_2019-11-28.zip"
          }
        ]
      },
      {
        "id": 201594,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T20:39:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 201596,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T20:40:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201892,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "NOTES for Return:\r\nKER still displaying only FID and Table Name.",
        "created_on": "2019-11-26T19:09:54Z",
        "details": []
      },
      {
        "id": 201893,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-26T19:10:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201901,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-26T19:11:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 202054,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-27T14:49:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202338,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-02T16:15:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202934,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-04T10:54:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n\r\n\r\nReady for code review - Mary added as required approval because of changes made to LOAD_KERS.sql.",
            "new_value": "*Acceptance Criteria:*\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUID, Feature Name, FCODE and location of the duplication\r\n\r\n+*Notes:*+\r\n*Area Building feature includes three consecutive duplicate vertices*\r\nThis inspection can be applied to any line or area features to detect those features that include consecutive vertices that are duplicates in (x,y,z) for 3D features or in (x,y) for 2D features. Note that the first and last nodes (“closing” node for area features) are not considered “consecutive” by this inspection, so that line and area features having the same coordinate as their first and last (again, the “closing” node of an area feature) nodes will not generate a duplicate vertex condition; however, a feature having the same coordinate for their first two or last two vertices (here, including an area feature “closing” vertex as one of the two), or any consecutive pair between them, would result in a duplicate vertex condition. The above example illustrates detection of a Building area feature having three duplicate vertices (vertices numbered 4, 5 and 6 are identical, as shown in the “Information” window above). The condition's detailed information window explains the condition and lists the vertex that is duplicated. That vertex is also circled in red on the main screen. The information mode window is also illustrated after information mode has been used to query the area feature and list all its vertices. Note that the zero-length segments caused by consecutive duplicate vertices are reported by this inspection, but not by the Short Length Between Feature Vertices inspection, as an effort to avoid reporting the same condition by two different inspections. Thus, if it is necessary to find all line or area features with segments of length less than 1 meter, both this inspection and the Short Length Between Feature Vertices inspection must be applied, since only the Duplicate Vertices inspection will report segments of zero length. \r\n\r\n\r\nReady for code review - Mary added as required approval because of changes made to LOAD_KERS.sql.\r\n\r\nNOTES for GeoBadger test data:\r\n182 Good / 182 Bad"
          }
        ]
      },
      {
        "id": 202951,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T13:43:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 211649,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T14:48:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "54018"
          }
        ]
      }
    ]
  },
  {
    "id": 51161,
    "subject": "Build File Upload View",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195684,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T22:19:03Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 195859,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T13:37:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195884,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:07:06Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196434,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:19:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n",
            "new_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\nDesign file required\r\n"
          }
        ]
      },
      {
        "id": 196456,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:41:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\nDesign file required\r\n",
            "new_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\nDesign: https://sketch.cloud/s/VVPxa/v/yg0m5o/a/a1bQMA\r\n"
          }
        ]
      },
      {
        "id": 197956,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:10:35Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198249,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-15T16:53:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\nDesign: https://sketch.cloud/s/VVPxa/v/yg0m5o/a/a1bQMA\r\n",
            "new_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\n\r\nDevelopment: http://wtfforms.com/ Support on IE & Edge, look for *file browser* on the page. "
          }
        ]
      },
      {
        "id": 198458,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T15:46:27Z",
        "details": [
          {
            "property": "attachment",
            "name": "5214",
            "new_value": "upload-structure.sketch.zip"
          }
        ]
      },
      {
        "id": 198463,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T15:49:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\n\r\nDevelopment: http://wtfforms.com/ Support on IE & Edge, look for *file browser* on the page. ",
            "new_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\n\r\nDevelopment: http://wtfforms.com/ Support on IE & Edge, look for *file browser* on the page.\r\nZeplin link:"
          }
        ]
      },
      {
        "id": 199153,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T20:07:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\n\r\nDevelopment: http://wtfforms.com/ Support on IE & Edge, look for *file browser* on the page.\r\nZeplin link:",
            "new_value": "*As A*  QAC User\r\n*I want* to be able to navigate to Start a New QAC\r\n*So that* I can upload a new file\r\n\r\n*Given* I want to upload a file\r\n*When*  I am on the Start a New QAC Page\r\n*Then* there is a H1 title\r\n*And* There is schema selection\r\n*And* there is an information alert accordion regarding the specific schema selection\r\n*And* there is an upload component\r\n*And* there is an error alert provided the upload is incorrectly formatted\r\n\r\nNotes:\r\n\r\nDevelopment: http://wtfforms.com/ Support on IE & Edge, look for *file browser* on the page.\r\nZeplin links:\r\n* https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dcee607b596974a48a99b79\r\n* https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dcee608638af23b54065e82\r\n* https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dcee60797164d448a8e4358\r\n* https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dcee608df23bf3b18069ac0"
          }
        ]
      },
      {
        "id": 200952,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:28:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 201243,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-22T15:38:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201598,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "*Notes* \r\n* The copy for the Error Alert was placeholder text. We added a check for zip file type and displayed that error inside the alert.\r\n* The information inside the Schema Info Alert is temporary until the FAQ is built out. Did not add link since there was nothing to link to.\r\n* Schema select is there to match mockup but doesn't actually do anything for now. Will need to add functionality once TDS is add.\r\n* The grid container in USWDS is smaller than what is shown in the mockups, hence the alert wrapping.",
        "created_on": "2019-11-25T20:49:33Z",
        "details": []
      },
      {
        "id": 201921,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-26T20:00:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202043,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-27T14:17:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202084,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "Waiting on merge of 52120",
        "created_on": "2019-11-27T16:22:14Z",
        "details": []
      },
      {
        "id": 202298,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-02T15:34:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202589,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-03T15:44:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202937,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-04T12:22:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 202943,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:17:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202947,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-04T13:21:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51157,
    "subject": "Update QAC Header Component to match new design",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195683,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T22:18:57Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 195858,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T13:37:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195883,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:06:52Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196432,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:17:09Z",
        "details": [
          {
            "property": "attachment",
            "name": "5160",
            "new_value": "qac-logo.png"
          }
        ]
      },
      {
        "id": 197974,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:15:49Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 200950,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:25:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User\r\n*I want* I want to know where I am\r\n*So that* I am aware of where I am\r\n\r\n*Given* I am accessing the site\r\n*When* the site loads\r\n*Then* there is a header\r\n*And* the header has the QAC Logo\r\n*And* the header has a Nav bar\r\n\r\nNote:\r\n\r\nQAC Logo TBD. \r\n",
            "new_value": "*As A*  QAC User\r\n*I want* I want to know where I am\r\n*So that* I am aware of where I am\r\n\r\n*Given* I am accessing the site\r\n*When* the site loads\r\n*Then* there is a header\r\n*And* the header has the QAC Logo\r\n*And* the header has a Nav bar\r\n\r\nNote:\r\n* QAC Logo TBD. \r\n* Need link to designs for the header\r\n"
          }
        ]
      },
      {
        "id": 200957,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:28:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 201588,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "",
        "created_on": "2019-11-25T20:29:47Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 201890,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-26T19:05:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201919,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-26T19:53:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201946,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-26T21:10:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201947,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "NOTES on Return:\r\n\r\nThere is no gap space between 'Start New QAC' and 'Running QACs'. Please refer to screen capture (aatached).",
        "created_on": "2019-11-26T21:22:40Z",
        "details": [
          {
            "property": "attachment",
            "name": "5288",
            "new_value": "Capture.JPG"
          }
        ]
      },
      {
        "id": 201948,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-26T21:23:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 202126,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "Story 51157 was rejected due to the links not having spaces between them... \r\n\r\nThese stories probably were a little misleading, as the focus of 51157 was essentially just about the QAC duck logo and QAC label, while 51154 is about the nav links that will be used in the header nav bar and 51155 is about the nav bar/link use and styling. So, when we did 51157, the links were included as a scaffolding for the follow-on stories, as opposed to being the expected / final implementation.\r\n\r\nLong story short, I think 51157 should be good to go as is, if that all seems reasonable for you\r\n\r\n-Matt Van Slyke",
        "created_on": "2019-11-27T19:13:22Z",
        "details": []
      },
      {
        "id": 202296,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-02T15:33:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51156,
    "subject": "Building Skip Links Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195682,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T22:18:48Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 195856,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T13:37:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195882,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:06:34Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197973,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:15:29Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 199206,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:11:45Z",
        "details": [
          {
            "property": "attachment",
            "name": "5223",
            "new_value": "skip-navigation.sketch.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given*  i want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear\r\n*And* When I hit enter the focus changes to the main section",
            "new_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given*  i want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear\r\n*And* When I hit enter the focus changes to the main section\r\n\r\nZeplin link: zpl.io/am7YL1A"
          }
        ]
      },
      {
        "id": 200947,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:23:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given*  i want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear\r\n*And* When I hit enter the focus changes to the main section\r\n\r\nZeplin link: zpl.io/am7YL1A",
            "new_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear as the first element in the Dom after body\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A"
          }
        ]
      },
      {
        "id": 200956,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:28:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 202302,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-02T15:42:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202372,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-02T19:19:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear as the first element in the Dom after body\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A",
            "new_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear as the first element to capture focus\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A"
          }
        ]
      },
      {
        "id": 202678,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T18:42:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip Links\" button will appear as the first element to capture focus\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A",
            "new_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip to Content\" button will appear as the first element to capture focus\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A (button label is correct in story, not design artifact)"
          }
        ]
      },
      {
        "id": 202703,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-12-03T19:27:51Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip to Content\" button will appear as the first element to capture focus\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A (button label is correct in story, not design artifact)",
            "new_value": "*As A*  QAC User using a keyboard\r\n*I want* to skip over the nav bar\r\n*So that* I can quickly access the content\r\n\r\n*Given* I have arrived on the first screen, haven't interacted with any other content and want to skip the navigation\r\n*When* I press the tab key on the keyboard\r\n*Then* a \"Skip to Content\" button will appear as the first element to capture focus\r\n*And* When I hit enter the focus changes to the main section regardless of view\r\n\r\nZeplin link: zpl.io/am7YL1A (button label is correct in story, not design artifact)"
          }
        ]
      },
      {
        "id": 202724,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-03T20:26:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 203046,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T16:34:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 203079,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T18:47:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51155,
    "subject": "Building Nav Bar Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195665,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T21:40:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I am trying to navigate between sections, using links\r\n*Then* I have a link to a section\r\n*And* If there are children of that section a drop down appears showing the children\r\n*And* when I hover over a link, the link changes to a hover state\r\n*And* when I focus over a link, the link change to a focused states\r\n*And* when I am on a page there is an active state showing me which link I am on\r\n",
            "new_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I am trying to navigate between sections, using links\r\n*Then* I have a link to a section\r\n*And* If there are children of that section a drop down appears showing the children\r\n*And* when I hover over a link, the link changes to a hover state\r\n*And* when I focus over a link, the link change to a focused states\r\n*And* when I am on a page there is an active state showing me which link I am on"
          }
        ]
      },
      {
        "id": 195680,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T22:18:40Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 195855,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T13:37:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195885,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:07:22Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196437,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:23:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I am trying to navigate between sections, using links\r\n*Then* I have a link to a section\r\n*And* If there are children of that section a drop down appears showing the children\r\n*And* when I hover over a link, the link changes to a hover state\r\n*And* when I focus over a link, the link change to a focused states\r\n*And* when I am on a page there is an active state showing me which link I am on",
            "new_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on\r\n\r\n\r\nNotes:\r\n* when I hover over a link, the link changes to a hover state\r\n* when I focus over a link, the link change to a focused states\r\n* when I am on a page there is an active state showing me which link I am on"
          }
        ]
      },
      {
        "id": 196438,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:24:10Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on\r\n\r\n\r\nNotes:\r\n* when I hover over a link, the link changes to a hover state\r\n* when I focus over a link, the link change to a focused states\r\n* when I am on a page there is an active state showing me which link I am on",
            "new_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on"
          }
        ]
      },
      {
        "id": 196453,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:39:24Z",
        "details": [
          {
            "property": "attachment",
            "name": "5164",
            "new_value": "header.zip"
          }
        ]
      },
      {
        "id": 197958,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:10:48Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198344,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-15T21:00:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on",
            "new_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on\r\n\r\n*Zeplin Link:*https://zpl.io/V05kkNw"
          }
        ]
      },
      {
        "id": 199201,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:04:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on\r\n\r\n*Zeplin Link:*https://zpl.io/V05kkNw",
            "new_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on\r\n\r\n*Zeplin Link:* https://zpl.io/V05kkNw"
          }
        ]
      },
      {
        "id": 200943,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:13:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And When* I click the *Current QAC* link\r\n*Then* I am taken to view any currently running QAC at the step it's on\r\n\r\n*Zeplin Link:* https://zpl.io/V05kkNw",
            "new_value": "*As A*  QAC user\r\n*I want* to navigate between pages\r\n*So that* I can access different sections\r\n\r\n*Given* I have a nav bar\r\n*When* I click the \"Start New QAC\" link\r\n*Then* I am taken to a view where I can upload a new file.\r\n\r\n*And when* I have uploaded a file\r\n*Then* the current QAC link becomes active\r\n\r\n*Zeplin Link:* https://zpl.io/V05kkNw"
          }
        ]
      },
      {
        "id": 200954,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:28:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 201601,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-25T21:03:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201930,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-26T20:19:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202044,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-27T14:17:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203047,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T16:34:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 203048,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-04T16:35:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 203966,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T13:31:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204029,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:21:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204030,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-06T16:23:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51154,
    "subject": "Nav Link Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195679,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T22:18:29Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 195854,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T13:37:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195886,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:07:37Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196440,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:25:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n*Given* I have a navigation bar\r\n*When* I click on a navigation link\r\n*Then* The link is formatted with an <a> element\r\n*And* the link has a href\r\n*And* the link has an optional title attribute\r\n*And* the link has an optional target attribute\r\n",
            "new_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n\r\nNotes:\r\nWhen I hover over a link, the link changes to a hover state\r\nWhen I focus over a link, the link change to a focused states\r\nWhen I am on a page there is an active state showing me which link I am on\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has an optional title attribute\r\nThe link has an optional target attribute\r\n"
          }
        ]
      },
      {
        "id": 197959,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:11:05Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198472,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T15:56:37Z",
        "details": [
          {
            "property": "attachment",
            "name": "5215",
            "new_value": "nav-link.sketch.zip"
          }
        ]
      },
      {
        "id": 198474,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T15:58:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n\r\nNotes:\r\nWhen I hover over a link, the link changes to a hover state\r\nWhen I focus over a link, the link change to a focused states\r\nWhen I am on a page there is an active state showing me which link I am on\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has an optional title attribute\r\nThe link has an optional target attribute\r\n",
            "new_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n\r\nNotes:\r\nWhen I hover over a link, the link changes to a hover state\r\nWhen I focus over a link, the link change to a focused states\r\nWhen I am on a page there is an active state showing me which link I am on\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has an optional title attribute\r\nThe link has an optional target attribute\r\n\r\nUSWDS demo: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.2.1/components/preview/header--basic.html\r\n"
          }
        ]
      },
      {
        "id": 199202,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:05:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n\r\nNotes:\r\nWhen I hover over a link, the link changes to a hover state\r\nWhen I focus over a link, the link change to a focused states\r\nWhen I am on a page there is an active state showing me which link I am on\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has an optional title attribute\r\nThe link has an optional target attribute\r\n\r\nUSWDS demo: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.2.1/components/preview/header--basic.html\r\n",
            "new_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n\r\nNotes:\r\nWhen I hover over a link, the link changes to a hover state\r\nWhen I focus over a link, the link change to a focused states\r\nWhen I am on a page there is an active state showing me which link I am on\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has an optional title attribute\r\nThe link has an optional target attribute\r\n\r\nUSWDS demo: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.2.1/components/preview/header--basic.html\r\nZeplin link: https://zpl.io/V05kkNw"
          }
        ]
      },
      {
        "id": 200953,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:28:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 201775,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-26T15:45:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As A*  QAC user  \r\n*I want* to click on a link in the nav\r\n*So that* I can go to another section of the site\r\n\r\n\r\nNotes:\r\nWhen I hover over a link, the link changes to a hover state\r\nWhen I focus over a link, the link change to a focused states\r\nWhen I am on a page there is an active state showing me which link I am on\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has an optional title attribute\r\nThe link has an optional target attribute\r\n\r\nUSWDS demo: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.2.1/components/preview/header--basic.html\r\nZeplin link: https://zpl.io/V05kkNw",
            "new_value": "*As A* developer  \r\n*I want* a link component\r\n*So that* I have a consistently formatted link that has all attributes required for accessibility that can be used in the nav and elsewhere\r\n\r\n\r\nAcceptance Criteria:\r\nThe link is formatted with an <a> element\r\nThe link has a href\r\nThe link has a title attribute\r\nThe link has the ability to add optional attributes\r\n\r\nUSWDS demo: https://federalist-proxy.app.cloud.gov/preview/uswds/uswds/release-2.2.1/components/preview/header--basic.html\r\nZeplin link: https://zpl.io/V05kkNw"
          }
        ]
      },
      {
        "id": 201929,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-26T20:18:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202042,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-27T14:17:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202344,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-02T16:39:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202348,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-02T16:45:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51119,
    "subject": "SPIKE: Run 'complete duplicates' KER through new SQL to incorporate the geom and location in the shapefile",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 195274,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:28:29Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Run 'complete duplicates' KER through new SQL to incorporate the geom and location in the shapefile",
            "new_value": "SPIKE: Run 'complete duplicates' KER through new SQL to incorporate the geom and location in the shapefile"
          }
        ]
      },
      {
        "id": 195275,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:29:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195428,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195983,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:15:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Take on KER (complete duplicates) and rewrite the SQL to incorporate both the geom and location in the shapefile\r\n* May need to pair with NGA person to discuss this solution.\r\n\r\nNotes:\r\n* This will get us through the entire shapefile process and lead us down the path of how to develop all KERs through the shapefile going forward ",
            "new_value": "Acceptance Criteria:\r\n* Review the complete duplicates KER\r\n* Understand the geometry for this KER\r\n* Understand the location for this KER, if needed\r\n* Create stories based on findings from this SPIKE\r\n* Capture all findings in the Notes section of this story and also provide a demo (the code review) to the team about findings.\r\n\r\nNotes:\r\n* This will get us through the entire shapefile process and lead us down the path of how to develop all KERs through the shapefile going forward \r\n* May need to pair with NGA person to discuss this solution.\r\n* "
          },
          {
            "property": "attr",
            "name": "estimated_hours",
            "new_value": "16.0"
          }
        ]
      },
      {
        "id": 195984,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:15:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 196001,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:19:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Review the complete duplicates KER\r\n* Understand the geometry for this KER\r\n* Understand the location for this KER, if needed\r\n* Create stories based on findings from this SPIKE\r\n* Capture all findings in the Notes section of this story and also provide a demo (the code review) to the team about findings.\r\n\r\nNotes:\r\n* This will get us through the entire shapefile process and lead us down the path of how to develop all KERs through the shapefile going forward \r\n* May need to pair with NGA person to discuss this solution.\r\n* ",
            "new_value": "Acceptance Criteria:\r\n* Review the complete duplicates KER\r\n* Understand the geometry for this KER\r\n* Understand the location for this KER, if needed\r\n* Create stories based on findings from this SPIKE\r\n* Capture all findings in the Notes section of this story and also provide a demo (the code review) to the team about findings.\r\n\r\nNotes:\r\n* Please work with Mary Goodman to understand the process for Geom.\r\n* This will get us through the entire shapefile process and lead us down the path of how to develop all KERs through the shapefile going forward \r\n* May need to pair with NGA person to discuss this solution.\r\n* "
          }
        ]
      },
      {
        "id": 197282,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-12T16:58:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197283,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-12T16:58:41Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "2645"
          }
        ]
      },
      {
        "id": 197764,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "All PostGIS methods are referenced in the document linked below.\r\nEach feature contains information about the geometry object that can be retrieved with SQL queries.\r\n\r\nTo find the coordinates for a feature, you can use ST_AsGeoJSON(geom) to retrieve the type of feature and coordinates representing it.\r\nPossibly no work is needed for the frontend to display the geometry information.\r\n\r\nFor trying to find center points of geom objects, multiple methods need to be used based on geom type:\r\n* Polygon: ST_PointOnSurface(geom)\r\n* LineString: ST_LineInterpolatePoint(geom, fraction)\r\n* Point: ST_AsGeoJSON(geom)",
        "created_on": "2019-11-13T20:33:52Z",
        "details": [
          {
            "property": "attachment",
            "name": "5182",
            "new_value": "postgis-2.5.pdf"
          }
        ]
      },
      {
        "id": 198205,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-15T15:34:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51114,
    "subject": "Update backend to handle .zip files created on Windows",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 195253,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:12:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n",
            "new_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an erroneous error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error."
          }
        ]
      },
      {
        "id": 195254,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:13:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an erroneous error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.",
            "new_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error."
          }
        ]
      },
      {
        "id": 195255,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:13:29Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Update backend to handle zip files created on windows",
            "new_value": "Update backend to handle .zip files created on Windows"
          }
        ]
      },
      {
        "id": 195276,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:29:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195292,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:40:08Z",
        "details": [
          {
            "property": "attachment",
            "name": "5112",
            "new_value": "MGCP45_OBJECTWITHOUT_created_on_windows.zip"
          },
          {
            "property": "attachment",
            "name": "5113",
            "new_value": "MGCP45_OBJECTWITHOUT_created_on_mac.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.",
            "new_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work after this story is complete."
          }
        ]
      },
      {
        "id": 195299,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:49:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work after this story is complete.",
            "new_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work AFTER this story is complete."
          }
        ]
      },
      {
        "id": 195300,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:51:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the proper format to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work AFTER this story is complete.",
            "new_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the \"proper format\"* to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the \"proper format\"* to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\n* = a .zip file containing a single folder, with all shapefiles inside that single folder\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work AFTER this story is complete."
          }
        ]
      },
      {
        "id": 195302,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:53:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the \"proper format\"* to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the \"proper format\"* to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\n* = a .zip file containing a single folder, with all shapefiles inside that single folder\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work AFTER this story is complete.",
            "new_value": "*Acceptance Criteria:*\r\nAs a Windows user,\r\nI want to be able to upload .zip files created on a Windows OS without getting an incorrect error message,\r\nSo that I can verify the quality of the data.\r\n\r\nAC #1\r\nGiven I create a .zip file on Windows containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the \"proper format\" (see note below) to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\nAC #2 (do not break existing functionality)\r\nGiven I create a .zip file on Mac OSX containing a single folder with all the shapefiles inside that folder,\r\nWhen I upload the data in the \"proper format\" (see note below) to QAC,\r\nThen I should get a list of the precheck conditions, and I should NOT get a 406 error.\r\n\r\n\"proper format\"  = a .zip file containing a single folder, with all shapefiles inside that single folder\r\n\r\nNotes:\r\nSee attached data sets. To reiterate, BOTH *_created_on_windows.zip and *created_on_mac.zip should work AFTER this story is complete."
          }
        ]
      },
      {
        "id": 195303,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T17:54:39Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "6",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 195427,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195469,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:27:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197066,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-11T14:02:18Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "3850"
          }
        ]
      },
      {
        "id": 197190,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-12T15:41:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 197690,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T19:16:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51100,
    "subject": "Update KER result payload to include 'passed' flag to match precheck result payload",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195190,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T15:50:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195463,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:26:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197634,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:00:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Update KERs return to include 'passed' flag to match prechecks\r\n* API will need to return this flag on the object",
            "new_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* Update KERs return to include 'passed' flag to match prechecks\r\n* API will need to return this flag on the object\r\n\r\nNotes\r\nSee the files precheck_result.py and ker_result.py"
          }
        ]
      },
      {
        "id": 197635,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:00:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197636,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:09:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* Update KERs return to include 'passed' flag to match prechecks\r\n* API will need to return this flag on the object\r\n\r\nNotes\r\nSee the files precheck_result.py and ker_result.py",
            "new_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\nSee the files precheck_result.py and ker_result.py"
          }
        ]
      },
      {
        "id": 197637,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:10:28Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Update KERs return to include 'passed' flag to match prechecks",
            "new_value": "Update KER result payload to include 'passed' flag to match precheck result payload"
          }
        ]
      },
      {
        "id": 197639,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-13T17:11:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\nSee the files precheck_result.py and ker_result.py",
            "new_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result payload called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\nSee the files precheck_result.py and ker_result.py"
          }
        ]
      },
      {
        "id": 197920,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:18:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result payload called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\nSee the files precheck_result.py and ker_result.py",
            "new_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result payload called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\n* See the files precheck_result.py and ker_result.py\r\n* Create a follow-up card for the Web App team following completion of this card (single flag the front-end code)"
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 197921,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:19:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result payload called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\n* See the files precheck_result.py and ker_result.py\r\n* Create a follow-up card for the Web App team following completion of this card (single flag the front-end code)",
            "new_value": "Tech Debt Story\r\n\r\nAs a developer,\r\nI would like to have an additional property on a KER result payload called 'passed',\r\nSo that I can use this property in the frontend with components that are shared across both KER results and Schema results.\r\n\r\nAcceptance Criteria:\r\n* KER result payload returned from API includes 'passed' property to match precheck result payload returned from API\r\n\r\nNotes\r\n* See the files precheck_result.py and ker_result.py"
          }
        ]
      },
      {
        "id": 198178,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-15T14:49:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3835"
          }
        ]
      },
      {
        "id": 198279,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-15T17:49:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 198445,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-18T15:35:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 198462,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-18T15:49:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51068,
    "subject": "APP DOC: Document how data is encrypted at rest and in motion",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 195079,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:22:43Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51067"
          }
        ]
      },
      {
        "id": 195080,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:23:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Security Control in PCF Inheritance Model SI.13",
            "new_value": "Security Control in PCF Inheritance Model SI.13\r\n\r\nCrunchy Service Tile encrypts data at rest by default. "
          }
        ]
      },
      {
        "id": 195494,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197088,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:39:36Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197828,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:25:44Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205855,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51067,
    "subject": "APP DOC: Document process for creating a plan to mitigate specific app vulnerabilities",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 195077,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:21:42Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51066"
          }
        ]
      },
      {
        "id": 195078,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:22:43Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51068"
          }
        ]
      },
      {
        "id": 195493,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197087,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:39:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197827,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:25:30Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205854,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51066,
    "subject": "APP DOC: Document process for QA or IV&V testing",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 195074,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:19:58Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51063"
          }
        ]
      },
      {
        "id": 195076,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:21:42Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51067"
          }
        ]
      },
      {
        "id": 195492,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197086,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:39:03Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197826,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:25:14Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205852,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51063,
    "subject": "APP DOC: Document process for auditing SAST/DAST findings in Threadfix and SonarQube",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 195068,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:10:08Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51013"
          }
        ]
      },
      {
        "id": 195072,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:18:42Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "APP DOC: Document process for auditing SAST findings in Threadfix",
            "new_value": "APP DOC: Document process for auditing SAST/DAST findings in Threadfix and SonarQube"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Security Control in DevOps Inheritance Model SA.11.1",
            "new_value": "Security Control in DevOps Inheritance Model SA.11.1 / RA.5.5 / RA.5.b / RA.5.c / RA.5.e / CA.2.2 / CA.2.b / CA.5.a / CA.8 / SA.11.5 / SA.11.8\r\nSecurity Control in PCF Inheritance Model SI.10.3 / SI.11.a\r\n\r\nCover:\r\nusing HP Fortify, SonarQube, and OWASP ZAP\r\nthat we address all high/critical vulnerabilities\r\nThat all branches including master are scanned for each commit\r\nHow we document false positives"
          }
        ]
      },
      {
        "id": 195073,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:19:58Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51066"
          }
        ]
      },
      {
        "id": 195491,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197085,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:38:47Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197825,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:25:00Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205850,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 205851,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 205853,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51061,
    "subject": "Download KER results as .csv - Include Magnitude",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 195038,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T13:21:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER Tolerance to be included in the conditions .csv report\r\nSo that I what tolerance is included in the condtions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the Tolerance will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\nDisplay tolerance conditions in .csv file when downloaded\r\n\r\n"
          }
        ]
      },
      {
        "id": 195042,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T13:23:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER Tolerance to be included in the conditions .csv report\r\nSo that I what tolerance is included in the condtions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the Tolerance will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\nDisplay tolerance conditions in .csv file when downloaded\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER Tolerance to be included in the conditions .csv report\r\nSo that I what tolerance is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the tolerance will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\n* Display tolerance conditions in .csv file when downloaded\r\n\r\n"
          }
        ]
      },
      {
        "id": 195283,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:34:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195467,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:26:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197953,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:09:27Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 199573,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:06:00Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Download KER results as .csv - Include Tolerance",
            "new_value": "Download KER results as .csv - Include Magnitude"
          }
        ]
      },
      {
        "id": 199752,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:27:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER Tolerance to be included in the conditions .csv report\r\nSo that I what tolerance is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the tolerance will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\n* Display tolerance conditions in .csv file when downloaded\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\n* Display magnitude conditions in .csv file when downloaded\r\n\r\nNotes: \r\nMagnitude is only added to specific KERs. Validate each KER when adding the magnitude.\r\nMagnitude can be reported in meters, degrees, ratio and/or number\r\n\r\n"
          }
        ]
      },
      {
        "id": 200844,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:28:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\n* Display magnitude conditions in .csv file when downloaded\r\n\r\nNotes: \r\nMagnitude is only added to specific KERs. Validate each KER when adding the magnitude.\r\nMagnitude can be reported in meters, degrees, ratio and/or number\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Can we identify which KERs apply to this?\r\n\r\nNotes: \r\n* Magnitude can be reported in meters, degrees, ratio and/or number\r\n\r\n"
          }
        ]
      },
      {
        "id": 200849,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:38:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 203417,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T17:10:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\nAcceptance Criteria:\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Can we identify which KERs apply to this?\r\n\r\nNotes: \r\n* Magnitude can be reported in meters, degrees, ratio and/or number\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Can we identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204011,
        "user": {
          "id": 3848,
          "name": "Ali.Yasir.1262049333"
        },
        "notes": "",
        "created_on": "2019-12-06T15:14:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204036,
        "user": {
          "id": 3848,
          "name": "Ali.Yasir.1262049333"
        },
        "notes": "",
        "created_on": "2019-12-06T16:28:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Can we identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204041,
        "user": {
          "id": 3848,
          "name": "Ali.Yasir.1262049333"
        },
        "notes": "",
        "created_on": "2019-12-06T16:34:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\nLBNDUSHT - magnitude in meters\r\nMULTIPART - Magnitude in number of parts\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204170,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-09T16:16:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\nLBNDUSHT - magnitude in meters\r\nMULTIPART - Magnitude in number of parts\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204175,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "Attached is a spreadsheet that identifies every KER that has magnitude included. See the second tab. They are sorted by release date. ",
        "created_on": "2019-12-09T16:35:49Z",
        "details": [
          {
            "property": "attachment",
            "name": "5305",
            "new_value": "MGCP KER Descriptions_26Nov2019.xlsx"
          }
        ]
      },
      {
        "id": 204176,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T16:36:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n* there is magnitude details in the attached spreadsheet. Each KER that has magnitude included is listed in the second tab of the spreadsheet. The KERs listed on that tab are sorted by release date.\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204177,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T16:37:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n* there is magnitude details in the attached spreadsheet. Each KER that has magnitude included is listed in the second tab of the spreadsheet. The KERs listed on that tab are sorted by release date.\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n** There are magnitude details in the attached spreadsheet. Each KER that has magnitude included is listed in the second tab of the spreadsheet. The KERs listed on that tab are sorted by release date.*\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204221,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-09T17:30:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n** There are magnitude details in the attached spreadsheet. Each KER that has magnitude included is listed in the second tab of the spreadsheet. The KERs listed on that tab are sorted by release date.*\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:\r\nC_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user who has KER conditions\r\nI want the KER magnitude to be included in the conditions .csv report\r\nSo that the magnitude is included in the conditions\r\n\r\nAC: #1\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page and I select the button\r\nThen a .csv file containing the KER conditions can be downloaded\r\nAnd the magnitude will be included in the conditions download\r\n\r\n*Acceptance Criteria:*\r\n* Display magnitude conditions in .csv file when downloaded\r\n* Identify which KERs apply to this?\r\n*Magnitude should be blank, if null, and will not display anything in that column in the table within the UI\r\n*Create a string and add the unit in the string (it will either be blank (if null) or a space with something added. Different types (meters, degrees, ratio, and/or number)\r\n\r\n*Notes:* \r\n* A magnitude is sent back no matter what, either null or the magnitude\r\n** There are magnitude details in the attached spreadsheet. Each KER that has magnitude included is listed in the second tab of the spreadsheet. The KERs listed on that tab are sorted by release date.*\r\n-------\r\nSee Redmine/Documents/MGCP KER Descriptions for UI & FAQ [columns - KER Report Results and KER Shapefile Results] contain info on which KERs have magnitude and units.\r\n\r\n-LBNDUSHT - magnitude in meters- (moved to March)\r\nMULTIPART - Magnitude in number of parts\r\n                     Made assumption that the magnitude is the (total) number of parts - based upon GAIT 26 Inspection document; The other option would be the number of inspections minus the expected value but seemed to be the former based upon the GAIT document.\r\nNote:  C_DUPS, V_DUPS, FEATNOTCUT, OBJECTWITHOUT, ANY_SAMEID - do not have Magnitude\r\n\r\nclosed this card because 51437 already implemented MULTIPART magnitude, and each new KER that has magnitude has that as a AC.  So this is OBE - overcome by events.\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 204222,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-09T17:32:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 204279,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-09T19:24:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204280,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-09T19:24:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 205095,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-11T16:31:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 205130,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T18:28:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 205171,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-11T19:38:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51024,
    "subject": "When KERs fail to run, an error message is displayed",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195282,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:34:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195374,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:20:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 195442,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T18:23:56Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER processing issues: How will this be handled?",
            "new_value": "UX: KER processing issues: How will this be handled?"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table displaying KERs that did run\r\n\r\nTitle: The following KERs could not run.\r\nDescription: List of the KER titles that did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n*Needs Design*"
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195662,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T21:05:10Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 195881,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:06:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196429,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:15:03Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UX: KER processing issues: How will this be handled?",
            "new_value": "When KERs fail to run, an error message is displayed"
          }
        ]
      },
      {
        "id": 197955,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:10:02Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198076,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T20:31:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table displaying KERs that did run\r\n\r\nTitle: The following KERs could not run.\r\nDescription: List of the KER titles that did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n*Needs Design*",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table\r\n\r\nTitle: KERS did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n*Needs Design*"
          }
        ]
      },
      {
        "id": 198224,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Zeplin link: https://zpl.io/an7l3LA\r\nSketch file attached",
        "created_on": "2019-11-15T16:35:06Z",
        "details": [
          {
            "property": "attachment",
            "name": "5206",
            "new_value": "alert-error.sketch.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table\r\n\r\nTitle: KERS did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n*Needs Design*",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table\r\n\r\nTitle: KERS did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n-*Needs Design*-"
          }
        ]
      },
      {
        "id": 198453,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T15:43:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table\r\n\r\nTitle: KERS did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n-*Needs Design*-",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table\r\n\r\nTitle: KERS did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA"
          }
        ]
      },
      {
        "id": 200951,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T20:27:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 201421,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-25T14:26:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201503,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-25T16:24:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* Qac User who is running KERs\r\n*I want* to see error reporting if any KERs were unable to run at all\r\n*So that* if there is an issue with any KERs running in the backend I know which KERs did not run.\r\n\r\n*Given* The user has selected to run KERs\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed above the results table\r\n\r\nTitle: KERS did not run.\r\nCTA: Start Over (button back to file upload)\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see an alert with the error description from the backend if KERs were unable to run \r\n*So that* if there is an issue in the backend, I will know that it failed \r\n\r\n*Given* The user has selected to run KERs by hitting the continue button\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed at the top level of the app, with a call to action button to retry upload\r\n\r\nTitle: Error Occurred\r\nCTA: Start Over (button back to file upload)\r\n\r\n** A follow-up story to include Ker-specific error handling in the results to come **\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA"
          }
        ]
      },
      {
        "id": 201504,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-25T16:24:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* Qac User who is running KERs\r\n*I want* to see an alert with the error description from the backend if KERs were unable to run \r\n*So that* if there is an issue in the backend, I will know that it failed \r\n\r\n*Given* The user has selected to run KERs by hitting the continue button\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed at the top level of the app, with a call to action button to retry upload\r\n\r\nTitle: Error Occurred\r\nCTA: Start Over (button back to file upload)\r\n\r\n** A follow-up story to include Ker-specific error handling in the results to come **\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see an alert with the error description from the backend if KERs were unable to run \r\n*So that* if there is an issue in the backend, I will know that it failed \r\n\r\n*Given* The user has selected to run KERs by hitting the continue button\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed at the top level of the app, with a call to action button to retry upload\r\n\r\nTitle: Error Occurred\r\nCTA: Start Over (button back to file upload)\r\n\r\n *A follow-up story to include Ker-specific error handling in the results to come*\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA"
          }
        ]
      },
      {
        "id": 201774,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-26T15:43:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* Qac User who is running KERs\r\n*I want* to see an alert with the error description from the backend if KERs were unable to run \r\n*So that* if there is an issue in the backend, I will know that it failed \r\n\r\n*Given* The user has selected to run KERs by hitting the continue button\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed at the top level of the app, with a call to action button to retry upload\r\n\r\nTitle: Error Occurred\r\nCTA: Start Over (button back to file upload)\r\n\r\n *A follow-up story to include Ker-specific error handling in the results to come*\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA",
            "new_value": "*As a* Qac User who is running KERs\r\n*I want* to see an alert with the error description -from the backend- if KERs were unable to run \r\n*So that* if there is an issue in the backend, I will know that it failed \r\n\r\n*Given* The user has selected to run KERs by hitting the continue button\r\n*When* one or more KERs fails to run\r\n*Then* an error message is displayed at the top level of the app, with a call to action button to retry upload\r\n\r\n\r\nTitle: Error Occurred\r\nCTA: Start Over (button back to file upload)\r\n\r\n *A follow-up story to include Ker-specific error handling in the results to come. This story only includes a default message for errors during KER run and styling around error notification*\r\n\r\n-*Needs Design*-\r\nZeplin link: https://zpl.io/an7l3LA"
          }
        ]
      },
      {
        "id": 201918,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-26T19:52:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 202354,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-02T17:01:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 202365,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-02T18:27:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51023,
    "subject": "SPIKE: How do we handle canceling the backend process when KER process is running?",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 195281,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:34:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195466,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:26:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195660,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T21:04:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "Acceptance Criteria:\r\n\r\n*Given* A QAC user is running a KER\r\n*When* The user has exited the browser window with a currently running process\r\n*Then* The process should stop running in the backend.\r\n"
          },
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 195880,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:05:59Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196428,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:11:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51021,
    "subject": "Browser notification when closing the tab (cmd w || ctrl w || Pressing Back Button)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 195280,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T17:34:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195325,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T18:08:03Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Browser notification when closing the tab (88 w/ control window)",
            "new_value": "Browser notification when closing the tab (cmd w || ctrl w)"
          }
        ]
      },
      {
        "id": 195326,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T18:08:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria needed",
            "new_value": "As a QAC User who is running files through the QAC application\r\nI want a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\nSo that I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\nGiven I have tried to close the tab or window\r\nWhen I am running a Schema Check or Kers\r\nThen the browser opens a notification asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results."
          }
        ]
      },
      {
        "id": 195328,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T18:09:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC User who is running files through the QAC application\r\nI want a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\nSo that I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\nGiven I have tried to close the tab or window\r\nWhen I am running a Schema Check or Kers\r\nThen the browser opens a notification asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.",
            "new_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I have tried to close the tab or window\r\n*When* I am running a Schema Check or Kers\r\n*Then* the browser opens a notification asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results."
          }
        ]
      },
      {
        "id": 195465,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:26:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195566,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T19:28:17Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Browser notification when closing the tab (cmd w || ctrl w)",
            "new_value": "Browser notification when closing the tab (cmd w || ctrl w || Pressing Back Button)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I have tried to close the tab or window\r\n*When* I am running a Schema Check or Kers\r\n*Then* the browser opens a notification asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.",
            "new_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I have tried to close the tab/window or pressed the back button\r\n*When* I am running a Schema Check or Kers\r\n*Then* the browser opens a notification asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results."
          }
        ]
      },
      {
        "id": 195661,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T21:04:46Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 195879,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:05:37Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 196423,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T20:10:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I have tried to close the tab/window or pressed the back button\r\n*When* I am running a Schema Check or Kers\r\n*Then* the browser opens a notification asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.",
            "new_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running"
          }
        ]
      },
      {
        "id": 197305,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-12T17:48:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197919,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T17:16:44Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 198073,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T20:24:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running",
            "new_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running\r\n\r\nNotes:\r\n* Only implement this when the schema checks or KERs process is running\r\n\r\nQuestions:\r\n"
          }
        ]
      },
      {
        "id": 198208,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Note:\r\nUI Design TBD\r\nCustom UI Component will be created and attached to this story prior to work. ",
        "created_on": "2019-11-15T15:46:08Z",
        "details": []
      },
      {
        "id": 199157,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T20:19:13Z",
        "details": [
          {
            "property": "attachment",
            "name": "5220",
            "new_value": "modal-confirmation.sketch.zip"
          }
        ]
      },
      {
        "id": 199158,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T20:19:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running\r\n\r\nNotes:\r\n* Only implement this when the schema checks or KERs process is running\r\n\r\nQuestions:\r\n",
            "new_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running\r\n\r\nNotes:\r\n* Only implement this when the schema checks or KERs process is running\r\n\r\nQuestions:\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd2fc77ec8a4d62bca589e5"
          }
        ]
      },
      {
        "id": 199664,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-19T15:22:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3835"
          }
        ]
      },
      {
        "id": 200382,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-20T16:28:31Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running\r\n\r\nNotes:\r\n* Only implement this when the schema checks or KERs process is running\r\n\r\nQuestions:\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd2fc77ec8a4d62bca589e5",
            "new_value": "*As a* QAC User who is running files through the QAC application\r\n*I want* a check that will ask me if I want to close the tab/window while Schema Checks or Kers are running\r\n*So that* I do not accidentally close the tab/window while I am running Schema Checks or Kers and lose my progress.\r\n\r\n*Given* I am running a Schema Check or Kers\r\n*When* I have tried to close the tab/window or pressed the back\r\n*Then* the browser opens an alert asking me if I am sure that I want to close the tab while the process is still running knowing that I will not be able to get back to the results.\r\n*And When* I select the options to leave, the application stops running\r\n\r\nNotes:\r\n* Only implement this when the schema checks or KERs process is running\r\nRE: Nichole & Bobby: we decided that this made more sense later on down the road when we have setup the urls. So the alert will show up at all times in the current state of the app.\r\n\r\nQuestions:\r\n\r\nZeplin Link: https://app.zeplin.io/project/5dc2d833a1fc3c2347277907/screen/5dd2fc77ec8a4d62bca589e5"
          }
        ]
      },
      {
        "id": 200403,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "Custom text is not supported across browsers when the alert is thrown so the default \"Are you sure you want to leave this page?\" text will appear (copy is different across browsers).\r\n\r\nJust to note, we were not able to add in a test at all. In order to test the functionality we had to add the functionality into the test. Because of that, the test would still pass even if it was removed from the browser. See Nichole with questions.",
        "created_on": "2019-11-20T16:40:29Z",
        "details": []
      },
      {
        "id": 200415,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-20T16:44:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 200574,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-20T19:47:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201232,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-22T15:09:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201488,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-25T15:31:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201526,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T17:25:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 201527,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T17:25:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51013,
    "subject": "[Tech Debt] Add logging to the current app that conforms to ICS 500-27",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 194892,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:42:46Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51011"
          }
        ]
      },
      {
        "id": 194893,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:43:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "What to log:\r\n* Authentication Events (logon, logoff)\r\n* Object events: CRUD and Permission/Ownership Modifications\r\n* External Communications\r\n* System Events (reboot, shutdown, etc.)\r\n\r\nLog Entry requirements:\r\n* Date and time using ISO 8601 (YYYYMMDD hh:mm:ss.fffff)\r\n* Source of the event (IP, host, etc.)\r\n* Subject or actor (user, service, etc.)\r\n* Object (business entity, file, etc.)\r\n* Type of event (login, download, etc.)\r\n* Outcome: success or failure\r\n\r\nExample of log object:\r\n<pre><code class=\"javascript\">\r\n{\r\n  “date_time”: “20190603T13:44:13Z”,\r\n  “app_name”: “APP”,\r\n  “log_level”: “INFO”,\r\n  “source”: “0.0.0.0”,\r\n  “type”: “login”,\r\n  “actor”: “61334”,\r\n  “object”: “account”,\r\n  “outcome”: “failure”\r\n}\r\n</code></pre>\r\n",
            "new_value": "What to log:\r\n* Authentication Events (logon, logoff)\r\n* Object events: CRUD and Permission/Ownership Modifications\r\n* External Communications\r\n* System Events (reboot, shutdown, etc.)\r\n\r\nLog Entry requirements:\r\n* Date and time using ISO 8601 (YYYYMMDD hh:mm:ss.fffff)\r\n* Source of the event (IP, host, etc.)\r\n* Subject or actor (user, service, etc.)\r\n* Object (business entity, file, etc.)\r\n* Type of event (login, download, etc.)\r\n* Outcome: success or failure\r\n\r\nExample of log object:\r\n<pre><code>\r\n{\r\n  “date_time”: “20190603T13:44:13Z”,\r\n  “app_name”: “APP”,\r\n  “log_level”: “INFO”,\r\n  “source”: “0.0.0.0”,\r\n  “type”: “login”,\r\n  “actor”: “61334”,\r\n  “object”: “account”,\r\n  “outcome”: “failure”\r\n}\r\n</code></pre>\r\n"
          }
        ]
      },
      {
        "id": 194894,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:45:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "What to log:\r\n* Authentication Events (logon, logoff)\r\n* Object events: CRUD and Permission/Ownership Modifications\r\n* External Communications\r\n* System Events (reboot, shutdown, etc.)\r\n\r\nLog Entry requirements:\r\n* Date and time using ISO 8601 (YYYYMMDD hh:mm:ss.fffff)\r\n* Source of the event (IP, host, etc.)\r\n* Subject or actor (user, service, etc.)\r\n* Object (business entity, file, etc.)\r\n* Type of event (login, download, etc.)\r\n* Outcome: success or failure\r\n\r\nExample of log object:\r\n<pre><code>\r\n{\r\n  “date_time”: “20190603T13:44:13Z”,\r\n  “app_name”: “APP”,\r\n  “log_level”: “INFO”,\r\n  “source”: “0.0.0.0”,\r\n  “type”: “login”,\r\n  “actor”: “61334”,\r\n  “object”: “account”,\r\n  “outcome”: “failure”\r\n}\r\n</code></pre>\r\n",
            "new_value": "Standard: https://www.dni.gov/files/documents/FOIA/DF-2016-00213.pdf\r\n\r\nWhat to log:\r\n* Authentication Events (logon, logoff)\r\n* Object events: CRUD and Permission/Ownership Modifications\r\n* External Communications\r\n* System Events (reboot, shutdown, etc.)\r\n\r\nLog Entry requirements:\r\n* Date and time using ISO 8601 (YYYYMMDD hh:mm:ss.fffff)\r\n* Source of the event (IP, host, etc.)\r\n* Subject or actor (user, service, etc.)\r\n* Object (business entity, file, etc.)\r\n* Type of event (login, download, etc.)\r\n* Outcome: success or failure\r\n\r\nExample of log object:\r\n<pre><code>\r\n{\r\n  “date_time”: “20190603T13:44:13Z”,\r\n  “app_name”: “APP”,\r\n  “log_level”: “INFO”,\r\n  “source”: “0.0.0.0”,\r\n  “type”: “login”,\r\n  “actor”: “61334”,\r\n  “object”: “account”,\r\n  “outcome”: “failure”\r\n}\r\n</code></pre>\r\n"
          }
        ]
      },
      {
        "id": 195067,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T14:10:08Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51063"
          }
        ]
      },
      {
        "id": 195490,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197089,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:39:52Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197829,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:25:57Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205085,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-11T16:14:32Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Add logging to the current app that conforms to ICS 500-27",
            "new_value": "[Tech Debt] Add logging to the current app that conforms to ICS 500-27"
          }
        ]
      },
      {
        "id": 207485,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:37:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 207767,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2020-01-02T20:07:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 210241,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-16T15:31:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 51011,
    "subject": "APP DOC: Document process for the annual review of the incident response process.",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194889,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:32:47Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51010"
          }
        ]
      },
      {
        "id": 194891,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:42:46Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51013"
          }
        ]
      },
      {
        "id": 195489,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197084,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:38:30Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197824,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:24:40Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205849,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51010,
    "subject": "APP DOC: Document process for the quarterly review of privileges.",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194887,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:32:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51008"
          }
        ]
      },
      {
        "id": 194888,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:32:47Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51011"
          }
        ]
      },
      {
        "id": 195488,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195514,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:35:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 195517,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:36:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197083,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:38:17Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197823,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:24:27Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205848,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51008,
    "subject": "APP DOC: Document process for incident detection, analysis, containment, eradication, recovery and post-incident activity",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194883,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:19:48Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "51006"
          }
        ]
      },
      {
        "id": 194886,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:32:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51010"
          }
        ]
      },
      {
        "id": 195487,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197082,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:38:03Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197821,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:24:15Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205847,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51006,
    "subject": "APP DOC: Document process for reviewing the application annually and notifying Risk Management of security relevant changes to the code base",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194882,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:19:48Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51008"
          }
        ]
      },
      {
        "id": 195486,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197081,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:37:30Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197819,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:24:00Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205846,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 51004,
    "subject": "APP DOC: Document process for a new user to request access to project (through Self Service request)",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194871,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:02:29Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50969"
          }
        ]
      },
      {
        "id": 195485,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:29:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197080,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:37:13Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197815,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:22:28Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205845,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50969,
    "subject": "APP DOC: Document the privileges and associated PCF Organizations necessary for dev access",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194723,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:15:02Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50967"
          }
        ]
      },
      {
        "id": 194870,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T19:02:29Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "51004"
          }
        ]
      },
      {
        "id": 195484,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197079,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:36:50Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197810,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:18:59Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205844,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50967,
    "subject": "APP DOC: Document the intended integration with GX",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194720,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:12:46Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50964"
          }
        ]
      },
      {
        "id": 194722,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:15:02Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50969"
          }
        ]
      },
      {
        "id": 195482,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197078,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:36:34Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197808,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:18:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205843,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50964,
    "subject": "APP DOC: Document the files and libraries necessary for a production deployment: used for disaster recovery",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194717,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:11:26Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50962"
          }
        ]
      },
      {
        "id": 194719,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:12:46Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50967"
          }
        ]
      },
      {
        "id": 195481,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197077,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:36:17Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197805,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:16:36Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205842,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50962,
    "subject": "APP DOC: Document reflecting the Ports used by the application",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194713,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:07:13Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50950"
          }
        ]
      },
      {
        "id": 194716,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:11:26Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50964"
          }
        ]
      },
      {
        "id": 195480,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197076,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:36:02Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197804,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:15:25Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205841,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50950,
    "subject": "APP DOC: Document that only Project managers can install software artifacts within Nexus",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194706,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:03:28Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50948"
          }
        ]
      },
      {
        "id": 194712,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:07:13Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50962"
          }
        ]
      },
      {
        "id": 195479,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197075,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:35:35Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197803,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:14:59Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205840,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50948,
    "subject": "APP DOC: Document the Organization Managers responsibilities within the DevOps tools",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194703,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:59:00Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50942"
          }
        ]
      },
      {
        "id": 194705,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:03:28Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50950"
          }
        ]
      },
      {
        "id": 194715,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T15:10:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "This comes from security control PCF Inheritance Model AC.2.b / 2.c and DevOps Inheritance Model AC.2.d\r\n\r\nDocuments how an org manager:\r\nis assigned and changed.\r\ndefines and documents specific criteria which determine who is able to receive access to the DevOps projects.\r\nviews a list of DevOps users with permissions to their environment with options to add/remove.",
            "new_value": "This comes from security control PCF Inheritance Model AC.2.b / 2.c and DevOps Inheritance Model AC.2.d\r\n\r\nDocuments how an org manager:\r\n* is assigned and changed.\r\n* defines and documents specific criteria which determine who is able to receive access to the DevOps projects.\r\n* views a list of DevOps users with permissions to their environment with options to add/remove.\r\n* removes user accounts of users who pose significant risk within 30 minutes of notification and notify the PaaS team.\r\n* reviews access lists at least annually "
          }
        ]
      },
      {
        "id": 195478,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197074,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:35:18Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197802,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:14:43Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205839,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50942,
    "subject": "APP DOC: Document how we verify developers can only access their PCF Org.",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194670,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:39:31Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50941"
          }
        ]
      },
      {
        "id": 194702,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:59:00Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50948"
          }
        ]
      },
      {
        "id": 195477,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197073,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:35:01Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197801,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:14:29Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205838,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:32:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50941,
    "subject": "APP DOC: Document how we modify role/group permissions within the DevOps tools.",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194668,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:37:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50940"
          }
        ]
      },
      {
        "id": 194669,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:39:31Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50942"
          }
        ]
      },
      {
        "id": 194672,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:40:10Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "This comes from security control PCF Inheritance Model AC.2.h.1 / 3.4.a",
            "new_value": "This comes from security control PCF Inheritance Model AC.2.h.1\r\n\r\nTo include removing developers who no longer require access."
          }
        ]
      },
      {
        "id": 195476,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197072,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:34:47Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197800,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:14:02Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205837,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:31:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50940,
    "subject": "APP DOC: Document how we validate developers are part of groups within the DevOps tools",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194662,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:36:26Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50939"
          }
        ]
      },
      {
        "id": 194667,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:37:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50941"
          }
        ]
      },
      {
        "id": 195475,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197071,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:34:32Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197799,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:13:45Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205836,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:31:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50939,
    "subject": "APP DOC: Document how we validate that no accounts are shared between team members",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194657,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:34:43Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50938"
          }
        ]
      },
      {
        "id": 194661,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:36:26Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50940"
          }
        ]
      },
      {
        "id": 195474,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197070,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:34:17Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197798,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:13:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205835,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:31:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50938,
    "subject": "APP DOC: Document how we validate that developer only see projects they are assigned to in the DevOps tools",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194651,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:32:55Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "50937"
          }
        ]
      },
      {
        "id": 194656,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:34:43Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50939"
          }
        ]
      },
      {
        "id": 195473,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197069,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:34:00Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197796,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:13:05Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205834,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:31:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50937,
    "subject": "APP DOC: Document how we validate that developer user accounts require GX authentication to PCF",
    "category": null,
    "status": "New",
    "journals": [
      {
        "id": 194650,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-05T14:32:55Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "50938"
          }
        ]
      },
      {
        "id": 195472,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:28:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197068,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-11T14:33:37Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197794,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T14:08:10Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205833,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T20:31:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      }
    ]
  },
  {
    "id": 50935,
    "subject": "BUG: Precheck (schema) conditions are displaying good and bad data",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 194632,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T14:10:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 194633,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T14:11:05Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          },
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "5"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 195429,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 196017,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:23:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n*The precheck schema conditions are returning both good and bad features for each shapefile that has a problem. Note: A shapefile can contain multiple features. When there is a condition within the shapefile, it is returning ll of the features, even if some of them are \"good.\" \r\n*In order to test this, look at the database shapefile table that is created or open the shapefile and queue GIS. There is a text field in the shapefile that shows \"good\" data or \"bad\" data. If good data is visible, it should be removed from populating.\r\n*  Compare to the report on the screen.",
            "new_value": "Acceptance Criteria:\r\n*The precheck schema exceptions are returning both good and bad features for each shapefile that has a problem. Note: A shapefile can contain multiple features. When there is a exception within the shapefile, it is returning all of the features, even if some of them are \"good.\" \r\n*In order to test this, look at the database shapefile table that is created or open the shapefile in QGIS. There is a text field in the shapefile that shows \"good\" data or \"bad\" data. If good data is visible, it should be removed from populating.\r\n*  Compare to the report on the screen.\r\n\r\n*Notes:\r\n* On the precheck screen, within the table, currently there are both good and bad features displaying. Good features should not display.*"
          }
        ]
      },
      {
        "id": 196018,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:23:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197377,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-12T20:30:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198206,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-15T15:37:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 198446,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-18T15:36:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198653,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-18T18:41:36Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199216,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-18T21:41:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 199667,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-19T15:41:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201254,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "* Ran multiple precheck datasets through GAIT and QAC and received different outputs on both tools\r\n* GAIT display only bad data and QAC still displayed good and bad data \r\n* Will follow up with which data was utilized to test the bug on 24NOV19",
        "created_on": "2019-11-22T16:01:18Z",
        "details": []
      },
      {
        "id": 201255,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-22T16:01:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201345,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-22T20:46:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201489,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-25T15:33:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 201494,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "*precheck_null_feature_error.zip:*\r\nGAIT reports: \r\n1 Null Feature Error (AAQ130, FID10)\r\n\r\nQAC reports:\r\n9 Null Features (all AAQ130)\r\n725238E9-CAEA-4177-A106-6E00526A0D48\r\n725238E9-CAEA-4177-A106-6E00526A0D53\r\n725238E9-CAEA-4177-A106-6E00526A0D49\r\n725238E9-CAEA-4177-A106-6E00526A0D52\r\n725238E9-CAEA-4177-A106-6E00526A0D47\r\n725238E9-CAEA-4177-A106-6E00526A0D50\r\n725238E9-CAEA-4177-A106-6E00526A0D54\r\n725238E9-CAEA-4177-A106-6E00526A0D51\r\n725238E9-CAEA-4177-A106-6E00526A0D46, and \r\n1 Zero-Part Area/Line\r\n725238E9-CAEA-4177-A106-6E00526A0D55_AAQ130.shp\r\n\r\nAppears QAC is reporting all AAQ130 features, though only 1 is bad.\r\n\r\n*precheck_fcode_errors.zip:*\r\nGAIT reports:\r\n4 erros, (ABJ100, expected BJ100; and, and PBH120, expected BH120)\r\n\r\nQAC reports:\r\n1 No FCODE Column (LAT030), \r\n4 Null Features\r\n4662BDDD-0E93-4BBA-9CFE-6F4B4CC66EAA_ABJ100.shp,\r\n725238E9-CAEA-4177-A106-6E00526A0G03_LAT030,\r\n725238E9-CAEA-4177-A106-6E00526A0G04_LAT030, \r\n725238E9-CAEA-4177-A106-6E00526A0G02_LAT030.shp\r\n7 Invalid FCODEs\r\n4662BDDD-0E93-4BBA-9CFE-6F4B4CC66EAA_ABJ100.shp,\r\n725238E9-CAEA-4177-A106-6E00526A0G03_LAT030,\r\n725238E9-CAEA-4177-A106-6E00526A0G04_LAT030, \r\n725238E9-CAEA-4177-A106-6E00526A0G02_LAT030.shp,\r\n2F17FCFD-FE74-48A8-A774-8DA4015301F1_PBH120,\r\n8C4A2E9E-C252-48BB-B716-C723B0E9D634_PBH120,\r\nA4A03722-CF9B-43CB-BB8F-7E45E7091E79_PBH120\r\n\r\nIt appears that QAC is finding the errors, but reporting them as bad FCODEs.\r\n\r\n*invalid_data_type_precheck.zip*\r\nGAIT reports:\r\n2 Invalid Data Type\r\nLAN010 GAN attribute (expected Real, got Integer)\r\nLAN050 GAN attribute (expected Real, got Integer)\r\n\r\nQAC reports:\r\n0 Invalid Data Types\r\nBut does report the following, which are actually allowed column names (reporting good data)\r\n3 Unrecognized Column Names (all LAN050)\r\nNAM\r\nNFI\r\nNFN\r\n\r\n*precheck_empty_invalid_shp.zip*\r\nGAIT reports:\r\n1 Empty Or Invalid Shapefile (LBI020.shp)\r\n\r\nQAC reports:\r\n0 Empty Or Invalid Shapefile (LBI020.shp),\r\nBut does report\r\n1 Blank Attribute (LBI020.shp)\r\n\r\nAppears to be working, but results are stated incorrectl:y Stated as 'Blank Attribute'.",
        "created_on": "2019-11-25T15:49:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201523,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T17:18:00Z",
        "details": [
          {
            "property": "attachment",
            "name": "5278",
            "new_value": "precheck_null_feature_error.zip"
          },
          {
            "property": "attachment",
            "name": "5279",
            "new_value": "precheck_fcode_errors.zip"
          },
          {
            "property": "attachment",
            "name": "5280",
            "new_value": "invalid_data_type_precheck.zip"
          },
          {
            "property": "attachment",
            "name": "5281",
            "new_value": "precheck_empty_invalid_shp.zip"
          }
        ]
      },
      {
        "id": 201590,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T20:32:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201591,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T20:32:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50797,
    "subject": "[TASK]: Explicit Typing",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 193884,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-01T14:36:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 194385,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:38:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n*Team needs to discuss how explicit typing will be handled within the code, Jenkins, etc.  ",
            "new_value": "Acceptance Criteria:\r\n*Team needs to discuss how explicit typing will be handled within the code, Jenkins, etc.  \r\n* Need to make sure the team agrees on the approach"
          }
        ]
      },
      {
        "id": 195448,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195887,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T14:07:50Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 197960,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:11:23Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 199575,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:06:50Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205536,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:24:10Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n*Team needs to discuss how explicit typing will be handled within the code, Jenkins, etc.  \r\n* Need to make sure the team agrees on the approach",
            "new_value": "Acceptance Criteria:\r\n*Team needs to discuss how explicit typing will be handled within the code, Jenkins, etc.  \r\n* Need to make sure the team agrees on the approach\r\n* Adding a library?\r\n* Jenkins integration?\r\n\r\nTeam Decision:\r\n* We are going to add types to the python code"
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 206915,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-20T15:24:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3825"
          }
        ]
      },
      {
        "id": 207030,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-20T20:46:30Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE: Explicit Typing",
            "new_value": "Explicit Typing"
          }
        ]
      },
      {
        "id": 207031,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-20T20:46:47Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Explicit Typing",
            "new_value": "[TASK]: Explicit Typing"
          }
        ]
      },
      {
        "id": 207032,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-20T20:47:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n*Team needs to discuss how explicit typing will be handled within the code, Jenkins, etc.  \r\n* Need to make sure the team agrees on the approach\r\n* Adding a library?\r\n* Jenkins integration?\r\n\r\nTeam Decision:\r\n* We are going to add types to the python code",
            "new_value": "Acceptance Criteria:\r\n*Implement MyPy into our codebase"
          }
        ]
      },
      {
        "id": 207232,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-30T13:24:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207250,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-30T15:25:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50787,
    "subject": "Remove shapefile schemas (input data) from the DB",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 193807,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:47:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 194382,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:37:33Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Remove User Schemas From the Database After 30 Calendar Days",
            "new_value": "Discussion Needed: Remove User Schemas from the database after a certain amount of time"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\nRemove old user schemas from the database.\r\n\r\nNOTES:\r\nThe outline of the function is already in the code, but it was not completed. Schemas are owned by the user that creates them, so cleanup when code is pushed would be nice. Any default PostgreSQL and PostGIS related schemas should not be touched.",
            "new_value": "*Acceptance Criteria:*\r\n* Remove old user schemas from the database.\r\n\r\n*NOTES:*\r\n* The outline of the function is already in the code, but it was not completed. Schemas are owned by the user that creates them, so cleanup when code is pushed would be nice. Any default PostgreSQL and PostGIS related schemas should not be touched.\r\n* Need to know what approach we want to take. "
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3270",
            "new_value": "2731"
          }
        ]
      },
      {
        "id": 195447,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 196460,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "Jen to schedule a meeting to discuss",
        "created_on": "2019-11-07T20:51:42Z",
        "details": []
      },
      {
        "id": 197952,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:09:05Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 200866,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T18:32:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 202975,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-04T14:32:23Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "52485"
          }
        ]
      },
      {
        "id": 203422,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T17:17:03Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Discussion Needed: Remove User Schemas from the database after a certain amount of time",
            "new_value": "Discussion Needed: Remove shapefil schemas (input data) from the DB"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* Remove old user schemas from the database.\r\n\r\n*NOTES:*\r\n* The outline of the function is already in the code, but it was not completed. Schemas are owned by the user that creates them, so cleanup when code is pushed would be nice. Any default PostgreSQL and PostGIS related schemas should not be touched.\r\n* Need to know what approach we want to take. ",
            "new_value": "*Acceptance Criteria:*\r\n* Remove shapefile schemas (input data) from the database as soon as the KER results are available\r\n*Use existing function to delete schemas (this function is in the database_engine.py).\r\n\r\n*NOTES:*\r\n* Any default PostgreSQL and PostGIS related schemas should not be touched."
          }
        ]
      },
      {
        "id": 203458,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:27:57Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Discussion Needed: Remove shapefil schemas (input data) from the DB",
            "new_value": "Remove shapefile schemas (input data) from the DB"
          }
        ]
      },
      {
        "id": 204026,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-12-06T16:20:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204131,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-09T14:32:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204212,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:17:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204559,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T16:19:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50574,
    "subject": "Error handling/Condition Reporting - Update 400 error to 200 response (TECH DEBT)",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 192589,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:20:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192723,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:14:26Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194642,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T14:22:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194857,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:55:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 196854,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-08T15:52:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 196954,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-08T18:31:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 197631,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T16:44:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198680,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-18T18:42:01Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 200276,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-20T14:24:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 200336,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T15:42:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 200473,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T17:51:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50569,
    "subject": "Implement KER Download Component for KER Results",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 192752,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:23:42Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193739,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:58:24Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194248,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "GIVEN the user has run KERs\r\nWHEN the user clicks the \"Download KERs\" button\r\nTHEN the user will be able to choose a .shp file, .csv file, or both\r\n\r\nAND WHEN the user clicks the \"Both .shp and .csv\" option\r\nTHEN both a .shp and .csv file download begins\r\n\r\nAND WHEN the user clicks the \".shp file only\" option\r\nTHEN a .shp file download begins\r\n\r\nAND WHEN the user clicks the \".csv file only\" option\r\nTHEN a .csv file download begins\r\n\r\nFigma: https://www.figma.com/file/DMGbDp67id3EHg4IEi1RDA/button-dropdown?node-id=0%3A1",
        "created_on": "2019-11-04T16:56:28Z",
        "details": [
          {
            "property": "attachment",
            "name": "5095",
            "new_value": "Screen Shot 2019-11-04 at 10.56.03 AM.png"
          }
        ]
      },
      {
        "id": 194379,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:30:55Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI: Create Download Functionality for UI Selection",
            "new_value": "UI: Create KER Download Functionality for UI Selection"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n1. Provide shapefile download option\r\n2. Provide .csv download option",
            "new_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?"
          }
        ]
      },
      {
        "id": 194603,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-05T13:03:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?",
            "new_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3."
          }
        ]
      },
      {
        "id": 195445,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195646,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T20:54:37Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI: Create KER Download Functionality for UI Selection",
            "new_value": "Implement KER Download Component for KER Results"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3.",
            "new_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n* Provide .shp file and .csv download option \r\n* Uses dropdown action menu button component \r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3."
          },
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 195648,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T20:55:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n* Provide .shp file and .csv download option \r\n* Uses dropdown action menu button component \r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3.",
            "new_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n* Provide .shp file and .csv download option \r\n* Uses dropdown action menu button component\r\n* Add styling (see mockup)\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3."
          }
        ]
      },
      {
        "id": 197302,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-12T17:39:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197691,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-13T19:22:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198304,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-15T18:45:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 198683,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-18T18:42:36Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199161,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T20:22:42Z",
        "details": [
          {
            "property": "attachment",
            "name": "5095",
            "old_value": "Screen Shot 2019-11-04 at 10.56.03 AM.png"
          }
        ]
      },
      {
        "id": 199164,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T20:25:27Z",
        "details": [
          {
            "property": "attachment",
            "name": "5222",
            "new_value": "sidenav-download.sketch.zip"
          }
        ]
      },
      {
        "id": 199200,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-18T21:03:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n* Provide .shp file and .csv download option \r\n* Uses dropdown action menu button component\r\n* Add styling (see mockup)\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3.",
            "new_value": "As a QAC user viewing the KER conditions\r\nI want to download a shapefile of the conditions\r\nSo that I can load it into GIS\r\n\r\nAs a QAC user viewing the KER conditions\r\nI want to download a .csv file of the conditions\r\nSo that I can load it into GIS\r\n\r\nAcceptance Criteria:\r\n* Provide shapefile download option\r\n* Provide .csv download option\r\n* Provide .shp file and .csv download option \r\n* Uses dropdown action menu button component\r\n* Add styling (see mockup)\r\n\r\nQuestion:\r\n#Do we need all three options that display in the screen shot?  Need feed back from Jeff? Does the user want to download both at the same time?\r\n\r\nAnswer: Yes to all 3.\r\n\r\nZeplin link: https://zpl.io/bzj93OM"
          }
        ]
      },
      {
        "id": 200830,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-21T17:00:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201342,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-22T20:26:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201343,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-22T20:27:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 201493,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T15:46:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201502,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-25T16:21:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201553,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-25T18:52:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50568,
    "subject": "Download Pre-check (schema) .csv file will provide a 'Save As' Option",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 192751,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:23:24Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193156,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:03:52Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI: Download Pre-check .csv File Will Provide a 'Save As' Option",
            "new_value": "Download Pre-check .csv File Will Provide a 'Save As' Option"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "\r\nAC when button is selected:\r\n1. User can choose where to save file\r\n2. User can choose what to name the file",
            "new_value": "\r\nAC when button is selected:\r\n1. User can choose where to save file\r\n2. User can choose what to name the file\r\n"
          }
        ]
      },
      {
        "id": 194378,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:27:25Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Download Pre-check .csv File Will Provide a 'Save As' Option",
            "new_value": "Download Pre-check (schema) .csv file will provide a 'Save As' Option"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "\r\nAC when button is selected:\r\n1. User can choose where to save file\r\n2. User can choose what to name the file\r\n",
            "new_value": "As a QAC user \r\nWhen I select the download precheck (schema) button a save as option displays\r\nSo that I name the file before I save it\r\n\r\nGiven I have precheck conditions\r\nWhen I select the download the .csv download precheck (schema) button\r\nThen a 'save as' dialogue box will appear\r\n\r\nAcceptance Criteria when button is selected:\r\n1. User can choose where to save file\r\n2. User can choose what to name the file\r\n"
          }
        ]
      },
      {
        "id": 195444,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 197299,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-12T17:29:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197632,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T16:44:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197641,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "Not sure about the value of this story. The \"Save as\" dialog is a function of the browser and dependent upon user settings: https://stackoverflow.com/questions/42967050/html5-a-download-force-save-as-dialogue\r\n\r\nIf the user wishes to change the filename, they can do so at an OS level from their download folder after download.\r\n\r\n-BD",
        "created_on": "2019-11-13T17:12:53Z",
        "details": []
      },
      {
        "id": 197737,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "Needs discussion whether or not this is needed. Not a defined user pattern and not consistent with cross platforms and browsers (works on edge, not chrome or IE). \r\nSee Nichole if you have questions.",
        "created_on": "2019-11-13T20:05:46Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Download Pre-check (schema) .csv file will provide a 'Save As' Option",
            "new_value": "[UX SPIKE] Download Pre-check (schema) .csv file will provide a 'Save As' Option"
          }
        ]
      },
      {
        "id": 197753,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "Determined that each browser type has settings to give user an option to save and name the file to a specific location instead of the default downloads folder. \r\n",
        "created_on": "2019-11-13T20:21:23Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "[UX SPIKE] Download Pre-check (schema) .csv file will provide a 'Save As' Option",
            "new_value": "Download Pre-check (schema) .csv file will provide a 'Save As' Option"
          }
        ]
      },
      {
        "id": 197754,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T20:21:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50566,
    "subject": "SPIKE: Investigate if there is back-end schema data that is not currently being displayed in the front-end",
    "category": "Web App team",
    "status": "Closed",
    "journals": [
      {
        "id": 192569,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:46:07Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "All Pre-check Findings Display in Output File",
            "new_value": "UI: All Pre-check Findings Display in Output File"
          }
        ]
      },
      {
        "id": 192750,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:23:08Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193738,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:57:58Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194257,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "GIVEN the user has run Schema Checks\r\nWHEN the results are displayed on screen\r\nTHEN the results appear in a table using the following headers:\r\n\r\n* Feature name\r\n* File name\r\n* FID\r\n\r\nFigma: https://www.figma.com/file/8Ko1TGQOTYCfFZAyWTiUpr/table-schema_check-default?node-id=0%3A1",
        "created_on": "2019-11-04T17:16:43Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI: All Pre-check Findings Display in Output File",
            "new_value": "UI: All Schema Check Findings Display in Schema Check Results"
          }
        ]
      },
      {
        "id": 194375,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:22:15Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI: All Schema Check Findings Display in Schema Check Results",
            "new_value": "SPIKE: Investigate if there is back-end schema data that is not currently being displayed in the front-end"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n1. Feature name, FCode, FID, condition, tolerance [meters or angle], and latitude/longitude",
            "new_value": "Questions:\r\n# Are there schema conditions that the back-end is aware of that the front-end is not displaying?\r\n# Are we missing anything when we display the schema conditions?\r\n# Discuss with Rebecca about this specific story."
          }
        ]
      },
      {
        "id": 194377,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:23:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Questions:\r\n# Are there schema conditions that the back-end is aware of that the front-end is not displaying?\r\n# Are we missing anything when we display the schema conditions?\r\n# Discuss with Rebecca about this specific story.",
            "new_value": "*Questions:*\r\n# Are there schema conditions that the back-end is aware of that the front-end is not displaying?\r\n# Are we missing anything when we display the schema conditions?\r\n# Discuss with Rebecca about this specific story.\r\n\r\n*Notes:*\r\n# If we are already displaying everything, this card may not be needed."
          }
        ]
      },
      {
        "id": 195439,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "1"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 195443,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:23:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197298,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-12T17:29:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197607,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "Yes, we are currently displaying the data we have; displaying more fields will require SQL updates",
        "created_on": "2019-11-13T15:28:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "8"
          }
        ]
      }
    ]
  },
  {
    "id": 50565,
    "subject": "[SPIKE] Incorporate Required GEOINT Header/Footer (UX)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 192566,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T15:40:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192749,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:22:49Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193155,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:00:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer"
          }
        ]
      },
      {
        "id": 193737,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:57:37Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194258,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Discussion needed with Jeff/Jacob to define what's required. ",
        "created_on": "2019-11-04T17:19:53Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "6",
            "new_value": "7"
          },
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Incorporate Required GEOINT Header/Footer (UX)",
            "new_value": "[SPIKE] Incorporate Required GEOINT Header/Footer (UX)"
          }
        ]
      },
      {
        "id": 194373,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:18:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?"
          }
        ]
      },
      {
        "id": 195438,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195637,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Pulling header and footer information from : https://gitlab.gs.mil/DevCorps/Templates/react-template/tree/master/src/components",
        "created_on": "2019-11-06T20:50:12Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 195638,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T20:50:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195639,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T20:50:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195642,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "More information needed ( Screenshot needed for design purposes ).",
        "created_on": "2019-11-06T20:51:26Z",
        "details": []
      },
      {
        "id": 196419,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-07T19:59:57Z",
        "details": [
          {
            "property": "attachment",
            "name": "5158",
            "new_value": "Screen Shot 2019-11-07 at 1.59.26 PM.png"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\nReference attached screenshot\r\n"
          }
        ]
      },
      {
        "id": 197034,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T20:35:34Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 197990,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:20:00Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834"
          }
        ]
      },
      {
        "id": 199628,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:15:49Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206335,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:33:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\nReference attached screenshot\r\n",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n\r\n"
          }
        ]
      },
      {
        "id": 206346,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T19:35:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n\r\n",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n* Reminder that the header/footer only applies to the USA web version. Word\r\n\r\n"
          }
        ]
      },
      {
        "id": 206767,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-12-19T19:00:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n* Reminder that the header/footer only applies to the USA web version. Word\r\n\r\n",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n* Reminder that the header/footer only applies to the USA web version. Word\r\n\r\n\r\nYou can use template from https://gitlab.gs.mil/DevCorps/Templates/react-template\r\n"
          }
        ]
      },
      {
        "id": 207978,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-06T13:55:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 208135,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-01-06T18:11:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n* Reminder that the header/footer only applies to the USA web version. Word\r\n\r\n\r\nYou can use template from https://gitlab.gs.mil/DevCorps/Templates/react-template\r\n",
            "new_value": "Acceptance Criteria:\r\n* Account for space\r\n* Incorporate the header and footer\r\n\r\nQuestions:\r\n# Is there standard styling that should be used?\r\n# Is there specific verbiage that should be used? \r\n# More details?\r\n\r\nNotes:\r\n* Reference attached screenshot (what is seen today).\r\n* Reminder that the header/footer only applies to the USA web version. \r\n\r\n*Update*: The portion of this story involving only displaying the banner in the appropriate environment has been moved to story #53131, because it entails making larger decisions about the application.\r\n\r\n\r\nYou can use template from https://gitlab.gs.mil/DevCorps/Templates/react-template\r\n"
          }
        ]
      },
      {
        "id": 208197,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2020-01-06T19:34:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208224,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-06T20:05:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 209085,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-08T17:53:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50563,
    "subject": "KER results page displays an information icon that is actionable",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 192555,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T15:33:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "",
            "new_value": "Acceptance Criteria:\r\n* Ideation\r\n* Wire Frames"
          }
        ]
      },
      {
        "id": 192564,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T15:40:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192571,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T15:48:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192747,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:22:12Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193735,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:56:57Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 195436,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195623,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T20:32:28Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER Result UI Design (UX)",
            "new_value": "KER Result UI Design and Implementation"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Ideation\r\n* Wire Frames",
            "new_value": "*IF* A QAC user has KER Conditions\r\n*WHEN* KERs are finished running\r\n*THEN*  The KER Conditions are displayed in a results view\r\n*AND* The KERs are displayed in a side navigation with the number of conditions for that KER \r\n*AND* Clicking on a KER in the side nav will show the conditions in a table for that KER\r\n*AND* The results view contains a table for each KER with the columns \"Feature Name\", \"FID\" and \"FCode\", and conditionally \"Tolerance\"\r\n*AND* The user can display the KERs conditions by either KER name or feature name \r\n*AND* The user can click a link to find more information about the KER\r\n*AND* The user can select the download button to download all KER Conditions by either .csv, and/or .shp\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation\r\n* Wire Frames\r\n\r\nNote:\r\nIf you have questions reach out to UX Team. \r\n\r\n**Conditional until after Ideation session. (Wireframe TBD)"
          },
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 196061,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T17:03:26Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER Result UI Design and Implementation",
            "new_value": "KER results page displays an information icon that is actionable"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*IF* A QAC user has KER Conditions\r\n*WHEN* KERs are finished running\r\n*THEN*  The KER Conditions are displayed in a results view\r\n*AND* The KERs are displayed in a side navigation with the number of conditions for that KER \r\n*AND* Clicking on a KER in the side nav will show the conditions in a table for that KER\r\n*AND* The results view contains a table for each KER with the columns \"Feature Name\", \"FID\" and \"FCode\", and conditionally \"Tolerance\"\r\n*AND* The user can display the KERs conditions by either KER name or feature name \r\n*AND* The user can click a link to find more information about the KER\r\n*AND* The user can select the download button to download all KER Conditions by either .csv, and/or .shp\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation\r\n* Wire Frames\r\n\r\nNote:\r\nIf you have questions reach out to UX Team. \r\n\r\n**Conditional until after Ideation session. (Wireframe TBD)",
            "new_value": "\r\n*\r\n*AND* The user can display the KERs conditions by either KER name or feature name. NEW (i.e. bridge, road, etc.) - Not necessary for December 15th, future request*\r\n\r\n*AND* The user can click an information icon to find more information about the KER - New\r\n\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation - completed\r\n* Wire Frames - completed\r\n* Display an information icon next to the KER condition name\r\n* The information icon can be selected\r\n* When the information icon is selected, it opens more detail below the KER name. This details is in the database (Mary - woohoo)\r\n* Match the designs\r\n\r\n*Note:\r\n*Jeff and Jen need to get the descriptions for this story.*\r\n* Backend work is needed to expose the data.\r\n\r\n**Conditional until after Ideation session. (Wireframe TBD)"
          }
        ]
      },
      {
        "id": 196062,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T17:03:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 196139,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T19:00:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "\r\n*\r\n*AND* The user can display the KERs conditions by either KER name or feature name. NEW (i.e. bridge, road, etc.) - Not necessary for December 15th, future request*\r\n\r\n*AND* The user can click an information icon to find more information about the KER - New\r\n\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation - completed\r\n* Wire Frames - completed\r\n* Display an information icon next to the KER condition name\r\n* The information icon can be selected\r\n* When the information icon is selected, it opens more detail below the KER name. This details is in the database (Mary - woohoo)\r\n* Match the designs\r\n\r\n*Note:\r\n*Jeff and Jen need to get the descriptions for this story.*\r\n* Backend work is needed to expose the data.\r\n\r\n**Conditional until after Ideation session. (Wireframe TBD)",
            "new_value": "As a QAC user viewing the KER conditions on the screen\r\nI want to see an information icon\r\nSo that I select the information icon\r\n\r\nAs a QAC user selecting the information icon on the KER conditions details page\r\nI want the information icon selection to expand the KER detailed text\r\nSo that I know the exact details of the KER displaying conditions on the screen\r\n\r\nGiven I am a QAC user \r\nWhen I select the information icon\r\nThen the KER details will expand \r\nAnd visually display on the screen\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation - completed\r\n* Wire Frames - completed\r\n* Display an information icon next to the KER condition name\r\n* The information icon can be selected\r\n* When the information icon is selected, it opens more detail below the KER name. This details is in the database (Mary - woohoo)\r\n* Match the designs\r\n\r\n*Note:\r\n*Jeff and Jen need to get the descriptions for this story.*\r\n* Backend work is needed to expose the data.\r\n\r\n**Conditional until after Ideation session. (Wireframe TBD)"
          }
        ]
      },
      {
        "id": 197383,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T20:41:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197391,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-12T21:05:24Z",
        "details": [
          {
            "property": "attachment",
            "name": "5174",
            "new_value": "Schema Check All Collapsed.png"
          },
          {
            "property": "attachment",
            "name": "5173",
            "new_value": "Schema Check All Expanded.png"
          }
        ]
      },
      {
        "id": 197392,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-12T21:06:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user viewing the KER conditions on the screen\r\nI want to see an information icon\r\nSo that I select the information icon\r\n\r\nAs a QAC user selecting the information icon on the KER conditions details page\r\nI want the information icon selection to expand the KER detailed text\r\nSo that I know the exact details of the KER displaying conditions on the screen\r\n\r\nGiven I am a QAC user \r\nWhen I select the information icon\r\nThen the KER details will expand \r\nAnd visually display on the screen\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation - completed\r\n* Wire Frames - completed\r\n* Display an information icon next to the KER condition name\r\n* The information icon can be selected\r\n* When the information icon is selected, it opens more detail below the KER name. This details is in the database (Mary - woohoo)\r\n* Match the designs\r\n\r\n*Note:\r\n*Jeff and Jen need to get the descriptions for this story.*\r\n* Backend work is needed to expose the data.\r\n\r\n**Conditional until after Ideation session. (Wireframe TBD)",
            "new_value": "As a QAC user viewing the KER conditions on the screen\r\nI want to see an information icon\r\nSo that I select the information icon\r\n\r\nAs a QAC user selecting the information icon on the KER conditions details page\r\nI want the information icon selection to expand the KER detailed text\r\nSo that I know the exact details of the KER displaying conditions on the screen\r\n\r\nGiven I am a QAC user \r\nWhen I select the information icon\r\nThen the KER details will expand \r\nAnd visually display on the screen\r\n\r\nAdditional Acceptance Criteria:\r\n* Ideation - completed\r\n* Wire Frames - completed\r\n* Display an information icon next to the KER condition name\r\n* The information icon can be selected\r\n* When the information icon is selected, it opens more detail below the KER name. This details is in the database (Mary - woohoo)\r\n* Match the designs\r\n\r\n*Note:\r\n*Jeff and Jen need to get the descriptions for this story.*\r\n* Backend work is needed to expose the data.\r\n\r\nUSWDS documentation: https://designsystem.digital.gov/components/icons/"
          }
        ]
      },
      {
        "id": 197393,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-12T21:08:03Z",
        "details": [
          {
            "property": "attachment",
            "name": "5174",
            "old_value": "Schema Check All Collapsed.png"
          }
        ]
      },
      {
        "id": 197394,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-12T21:08:07Z",
        "details": [
          {
            "property": "attachment",
            "name": "5173",
            "old_value": "Schema Check All Expanded.png"
          }
        ]
      },
      {
        "id": 197395,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-12T21:09:22Z",
        "details": [
          {
            "property": "attachment",
            "name": "5176",
            "new_value": "Schema Check All Collapsed.png"
          },
          {
            "property": "attachment",
            "name": "5175",
            "new_value": "Schema Check All Expanded.png"
          }
        ]
      },
      {
        "id": 198692,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-18T18:43:18Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 201233,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-22T15:10:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 201262,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-22T16:23:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 201297,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-22T17:40:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50561,
    "subject": "SPIKE: Return Shapefile(s) With KER Conditions",
    "category": "Feedback needed",
    "status": "Done",
    "journals": [
      {
        "id": 192549,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:21:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2731"
          }
        ]
      },
      {
        "id": 192739,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:20:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193697,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T18:22:30Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Return Shapefile(s) With Conditions",
            "new_value": "Return Shapefile(s) With KER Conditions (Story Writing Discussion Needed)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "AC:\r\n1. Feature name, FCode, FID, condition, tolerance [meters or angle], and latitude/longitude",
            "new_value": "Acceptance Criteria:\r\n* Feature name, FCode, FID, condition, tolerance [meters or angle], and latitude/longitude\r\n* This will change per KER"
          }
        ]
      },
      {
        "id": 193698,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T18:25:40Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Return Shapefile(s) With KER Conditions (Story Writing Discussion Needed)",
            "new_value": "SPIKE: Return Shapefile(s) With KER Conditions"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* Feature name, FCode, FID, condition, tolerance [meters or angle], and latitude/longitude\r\n* This will change per KER",
            "new_value": "*Acceptance Criteria:*\r\n* What should be returned per each KER?\r\n* Do we need a story per each KER?\r\n* Research Geom\r\n\r\nNotes:\r\nResponse should return with this data?\r\n* Feature name, FCode, FID, condition, tolerance [meters or angle], and Geom"
          }
        ]
      },
      {
        "id": 194368,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:12:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* What should be returned per each KER?\r\n* Do we need a story per each KER?\r\n* Research Geom\r\n\r\nNotes:\r\nResponse should return with this data?\r\n* Feature name, FCode, FID, condition, tolerance [meters or angle], and Geom",
            "new_value": "*Acceptance Criteria:*\r\n* What is the format for each KER shapefile? Are we returning the entire feature or the localized condition within the entire feature? Is it valuable to return everything first, then return only a portion/localized condition?\r\n* Research Geom\r\n\r\n*Notes:*\r\nResponse should return with this data?\r\n* Feature name, FCode, FID, condition, tolerance [meters or angle], and Geom"
          },
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "497"
          }
        ]
      },
      {
        "id": 195435,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 196058,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:48:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*Acceptance Criteria:*\r\n* What is the format for each KER shapefile? Are we returning the entire feature or the localized condition within the entire feature? Is it valuable to return everything first, then return only a portion/localized condition?\r\n* Research Geom\r\n\r\n*Notes:*\r\nResponse should return with this data?\r\n* Feature name, FCode, FID, condition, tolerance [meters or angle], and Geom",
            "new_value": "*Acceptance Criteria:*\r\n* What is the format for each KER shapefile? \r\n* This will only apply to the KERs already implemented and the 10 in the backlog. \r\n\r\n*Notes:*\r\nSee attached documentation for each KER."
          }
        ]
      },
      {
        "id": 196059,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:48:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50556,
    "subject": "UI: Build File Upload Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 192493,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192537,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:19:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192728,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:15:57Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193730,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:54:43Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194347,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "GIVEN The user needs to run Schema Checks\r\nWHEN the user uploads a file to QAC.\r\nTHEN the user should see: \r\n\r\n* An ability to choose/upload a .zip file \r\n* A button to continue to the Schema Check which is disabled until a file is uploaded\r\n\r\nFigma: https://www.figma.com/file/0mSSXYqU54ztwW2nRXxuf3/file-upload-input?node-id=0%3A1",
        "created_on": "2019-11-04T19:01:46Z",
        "details": [
          {
            "property": "attachment",
            "name": "5098",
            "new_value": "Screen Shot 2019-11-04 at 1.01.27 PM.png"
          }
        ]
      },
      {
        "id": 195430,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195601,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T20:01:13Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "File Upload UI Design",
            "new_value": "UI: Build File Upload Component"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n*Ideation\r\n*Wire Frames ",
            "new_value": "*As a* QAC user who wants to process a file\r\n*I want* to be able to select a Zip file\r\n*So that* I can run a QAC\r\n\r\n*Given* I want to upload a file\r\n*When* I am on the Start a New QAC page\r\n*Then* I want to choose a file\r\n*And* not be able to click the \"Run Schema Check\" button if a file is not selected\r\n*And* click the \"Run Schema Check\" button if a file is selected\r\n\r\nAdditional Acceptance Criteria:\r\n*Ideation\r\n*Wire Frames "
          },
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "496"
          }
        ]
      },
      {
        "id": 196021,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:26:27Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who wants to process a file\r\n*I want* to be able to select a Zip file\r\n*So that* I can run a QAC\r\n\r\n*Given* I want to upload a file\r\n*When* I am on the Start a New QAC page\r\n*Then* I want to choose a file\r\n*And* not be able to click the \"Run Schema Check\" button if a file is not selected\r\n*And* click the \"Run Schema Check\" button if a file is selected\r\n\r\nAdditional Acceptance Criteria:\r\n*Ideation\r\n*Wire Frames ",
            "new_value": "*As a* QAC user who wants to process a file\r\n*I want* to be able to select a Zip file\r\n*So that* I can run a QAC\r\n\r\n*Given* I want to upload a file\r\n*When* I am on the Start a New QAC page\r\n*Then* I want to choose a file\r\n*And* not be able to click the \"Run Schema Check\" button if a file is not selected\r\n*And* click the \"Run Schema Check\" button if a file is selected\r\n\r\nAdditional Acceptance Criteria:\r\n*Ideation\r\n*Wire Frames \r\n*Build component \r\n*Replace existing file upload with component"
          }
        ]
      },
      {
        "id": 196023,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:27:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who wants to process a file\r\n*I want* to be able to select a Zip file\r\n*So that* I can run a QAC\r\n\r\n*Given* I want to upload a file\r\n*When* I am on the Start a New QAC page\r\n*Then* I want to choose a file\r\n*And* not be able to click the \"Run Schema Check\" button if a file is not selected\r\n*And* click the \"Run Schema Check\" button if a file is selected\r\n\r\nAdditional Acceptance Criteria:\r\n*Ideation\r\n*Wire Frames \r\n*Build component \r\n*Replace existing file upload with component",
            "new_value": "*As a* QAC user who wants to process a file\r\n*I want* to be able to select a Zip file\r\n*So that* I can run a QAC\r\n\r\n*Given* I want to upload a file\r\n*When* I am on the Start a New QAC page\r\n*Then* I want to choose a file\r\n*And* not be able to click the \"Run Schema Check\" button if a file is not selected\r\n*And* click the \"Run Schema Check\" button if a file is selected\r\n\r\nAdditional Acceptance Criteria:\r\n*Ideation - COMPLETE\r\n*Wire Frames - COMPLETE\r\n*Build component \r\n*Replace existing file upload with component"
          }
        ]
      },
      {
        "id": 196025,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:27:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 196152,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-07T19:15:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197930,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "*Note:* Due to browser compatibility issues we can not consistently style the file upload button so it will look different across browsers.",
        "created_on": "2019-11-14T17:24:42Z",
        "details": []
      },
      {
        "id": 197937,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-11-14T17:49:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 198447,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-18T15:36:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198699,
        "user": {
          "id": 3847,
          "name": "Todd.Matthew.1408688295"
        },
        "notes": "",
        "created_on": "2019-11-18T18:43:33Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "511"
          }
        ]
      },
      {
        "id": 199766,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T19:41:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 200335,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T15:42:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 200364,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-20T16:14:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50555,
    "subject": "Standardize Drop Down Button Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 192494,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192536,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:19:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192727,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:15:36Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193728,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:54:23Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194457,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-04T22:31:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 196852,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-08T15:51:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* ",
            "new_value": "Acceptance Criteria:\r\n* There is a component that outputs a button with a dropdown menu\r\n* The button has the default button class from USWDS set so there is styling already applied when the component is used\r\n* It should allow for additional classes to be passed through\r\n* It should require display text for the button\r\n* It should allow functions to be passed through the onClick attribute on the button\r\n* It should display the menu when the button is clicked\r\n* It should hide the dropdown menu when a menu item is clicked"
          }
        ]
      },
      {
        "id": 197110,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-11T22:24:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 197130,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "Ready for PO Approval",
        "created_on": "2019-11-11T23:35:11Z",
        "details": []
      },
      {
        "id": 197670,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T18:35:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 197762,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T20:31:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50554,
    "subject": "Standardize Generic Button React Component",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 192495,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192535,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:19:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192726,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:15:18Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193727,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:54:08Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194167,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-04T14:56:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 196151,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-07T19:14:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 196843,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-08T15:07:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 196844,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-08T15:10:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 196846,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-08T15:42:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n* ",
            "new_value": "Acceptance Criteria:\r\n* There is a button component that output a basic button\r\n* It has the default button class from USWDS set so there is styling already applied when use\r\n* It should allow for additional classes to be passed through\r\n* It should require display text\r\n* It should allow functions to be passed through the onClick attribute on the button."
          }
        ]
      },
      {
        "id": 196851,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-08T15:48:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50553,
    "subject": "Setup USWDS Library in Front-end and SASS",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 192496,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192499,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 192534,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:19:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192599,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:29:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 192722,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:14:10Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193149,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-10-30T14:56:41Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3834",
            "new_value": "3844"
          }
        ]
      },
      {
        "id": 193327,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-10-30T21:40:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 193804,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:39:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 193805,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:39:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 194021,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-01T20:35:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194022,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-01T20:36:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 194456,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-04T22:31:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50552,
    "subject": "Run application locally (technical debt)",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 192497,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192533,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:19:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192567,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-10-29T15:42:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n",
            "new_value": "Acceptance Criteria:\r\n\r\nRun backend and frontend locally:\r\n\r\ncd qac_fullstaq/backend\r\n./build_and_start_backend.sh\r\n\r\ncd qac_fullstaq/frontend\r\nnpm start\r\n\r\nRun Tests using local code:\r\n\r\ncd qac_fullstaq\r\n./run_tests_locally.sh"
          }
        ]
      },
      {
        "id": 192572,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-10-29T15:53:22Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Acceptance Criteria:\r\n\r\nRun backend and frontend locally:\r\n\r\ncd qac_fullstaq/backend\r\n./build_and_start_backend.sh\r\n\r\ncd qac_fullstaq/frontend\r\nnpm start\r\n\r\nRun Tests using local code:\r\n\r\ncd qac_fullstaq\r\n./run_tests_locally.sh",
            "new_value": "Acceptance Criteria:\r\n\r\nGIVEN I am a dev\r\nWHEN I make a change to the backend or frontend code\r\nTHEN I can see the changes\r\n\r\nRun backend and frontend locally:\r\n\r\ncd qac_fullstaq/backend\r\n./build_and_start_backend.sh\r\n\r\ncd qac_fullstaq/frontend\r\nnpm start\r\n\r\nRun Tests using local code:\r\n\r\ncd qac_fullstaq\r\n./run_tests_locally.sh"
          }
        ]
      },
      {
        "id": 192598,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:29:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 192721,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:13:54Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 195191,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2019-11-06T15:52:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 196848,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-08T15:45:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 196853,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-08T15:52:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50551,
    "subject": "Combing through Gitlab issues",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 192498,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T14:50:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 192517,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:10:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 192529,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "we did the following for this story\r\n- closed a few gitlab issues that were already completed but not marked closed\r\n- moved some dependencies in frontend to devDependencies section\r\n* done as two commits directly on dev branch\r\n\r\nno application code was changed.",
        "created_on": "2019-10-29T15:16:44Z",
        "details": []
      },
      {
        "id": 192584,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:15:22Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193263,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T19:52:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50466,
    "subject": "EXPORT KER SHAPEFILE",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 191929,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-25T18:49:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 192267,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-28T15:48:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance user\r\nI want to download a shapefile\r\nSo that I can load it into my GIS \r\n\r\n*Acceptance Criteria:*\r\n* Select button to export\r\n* Basic shapefile is returned with one feature\r\n* File is properly formatted, which requires these extensions: .shp, .shx, and .dbf\r\n* Frontend engineer can help create button\r\n* no file validation with this story\r\n\r\nQuestion:\r\n# Do we need a zip file containing the shapefile?",
            "new_value": "As a quality assurance user\r\nI want to download a shapefile\r\nSo that I can load it into my GIS \r\n\r\n*Acceptance Criteria:*\r\n* Select button to export\r\n* Basic shapefile is returned with one feature\r\n* File is properly formatted, which requires these extensions: .shp, .shx, and .dbf\r\n* Frontend engineer can help create button\r\n* no file validation with this story\r\n\r\nQuestion:\r\n# Do we need a zip file containing the shapefile?\r\nA: No, export all results to a single folder"
          }
        ]
      },
      {
        "id": 192504,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-29T15:00:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 192581,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:14:52Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193802,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:39:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 193806,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:39:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50465,
    "subject": "KER CSV FILE FORMAT WITH HEADERS ",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 191924,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-25T18:44:09Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER CSV FILE FORMAT WITH CONDITIONS (ERRORS)",
            "new_value": "KER CSV FILE FORMAT WITH HEADERS "
          }
        ]
      },
      {
        "id": 191925,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-25T18:44:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 191928,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "Kaesberg.Jennifer.1572613875 wrote:\r\n> As a quality assurance tester\r\n> I want to download a KER CSV file format with headers\r\n> So that I know what title the headers in the file will be\r\n> \r\n> *Acceptance Criteria:*\r\n> * Currently, this is an automatic download of the CSV (will need to add button)\r\n> * Add headers to file: (name, file, feature ID, and location)\r\n\r\n",
        "created_on": "2019-10-25T18:48:43Z",
        "details": []
      },
      {
        "id": 192261,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-28T15:45:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance tester\r\nI want to download a KER CSV file with conditions (errors)\r\nSo that I know what issues I have with the CSV file\r\n\r\n*Acceptance Criteria:*\r\n* Currently, this is an automatic download of the CSV (will need to add button)\r\n* Add headers to file: (name, file, feature ID, and location)\r\n\r\n\r\n",
            "new_value": "As a quality assurance tester\r\nI want to download a KER CSV file with conditions (errors)\r\nSo that I know what issues I have with the CSV file\r\n\r\n*Acceptance Criteria:*\r\n* Currently, this is an automatic download of the CSV (will need to add button)\r\n* Add headers to file: (feature name, fcode, feature ID, tolerance [meters or angle], and latitude/longitude)\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 192263,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-28T15:46:31Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance tester\r\nI want to download a KER CSV file with conditions (errors)\r\nSo that I know what issues I have with the CSV file\r\n\r\n*Acceptance Criteria:*\r\n* Currently, this is an automatic download of the CSV (will need to add button)\r\n* Add headers to file: (feature name, fcode, feature ID, tolerance [meters or angle], and latitude/longitude)\r\n\r\n\r\n",
            "new_value": "As a quality assurance tester\r\nI want to download a KER CSV file with conditions (errors)\r\nSo that I know what issues I have with the CSV file\r\n\r\n*Acceptance Criteria:*\r\n* Currently, this is an automatic download of the CSV (will need to add button)\r\n* Add headers to file: (feature name, fcode, feature ID, condition, tolerance [meters or angle], and latitude/longitude)\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 192586,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:16:10Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193176,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:26:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a quality assurance tester\r\nI want to download a KER CSV file with conditions (errors)\r\nSo that I know what issues I have with the CSV file\r\n\r\n*Acceptance Criteria:*\r\n* Currently, this is an automatic download of the CSV (will need to add button)\r\n* Add headers to file: (feature name, fcode, feature ID, condition, tolerance [meters or angle], and latitude/longitude)\r\n\r\n\r\n",
            "new_value": "As a quality assurance tester\r\nI want to download a KER CSV file with conditions (errors)\r\nSo that I know what issues I have with the CSV file\r\n\r\n*Acceptance Criteria:*\r\n* Need to add a button in order to download the CSV\r\n* Add headers to file: (feature name, fcode, feature ID, condition, tolerance [meters or angle], and latitude/longitude)\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 193814,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-01T12:28:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 193817,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-01T12:30:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 193885,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-01T14:37:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194316,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-04T18:01:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50464,
    "subject": "Download CSV file (prechecks) - only when button is selected",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 191922,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-25T18:39:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 192585,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:15:35Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194222,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-04T16:00:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194317,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-04T18:01:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 50463,
    "subject": "Update front-end to handle unexpected errors",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 191920,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-25T18:37:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 192505,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-29T15:00:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 192582,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:15:07Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193803,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:39:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 41464,
    "subject": "Refactor .csv schema check download button to USWDS standards",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 149014,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T13:17:10Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "41297"
          }
        ]
      },
      {
        "id": 149015,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T13:17:19Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2891",
            "new_value": "2731"
          }
        ]
      },
      {
        "id": 149016,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T13:17:26Z",
        "details": [
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 149017,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T13:17:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 149421,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-24T13:28:51Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 150179,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-29T15:45:32Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 150989,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:57:49Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Download Button for Pre-check Results",
            "new_value": "UI: Download Button for Pre-check Results"
          }
        ]
      },
      {
        "id": 192544,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:20:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192737,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:19:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193150,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T14:57:08Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "494"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 194366,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:58:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check errors\r\n*I want* to be able to select a download button\r\n*So that* I can have save the Pre-check results for later viewing\r\n\r\n*Given* I have Pre-check errors\r\n*When* I click on the download results button\r\n*Then* a .csv file containing the Pre-check errors is downloaded\r\n\r\nSee Designs here:  https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Pre-check results\r\n\r\n*Given* I have Pre-check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Pre-check conditions is downloaded\r\n\r\nAcceptance Criteria:\r\n* See FIGMA mockups for color and placement information (details)\r\n\r\nSee Designs here:  https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n"
          }
        ]
      },
      {
        "id": 195434,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195609,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-06T20:09:08Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI: Download Button for Pre-check Results",
            "new_value": "Implement Download Button for Schema Check Results using the Button Component"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Pre-check results\r\n\r\n*Given* I have Pre-check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Pre-check conditions is downloaded\r\n\r\nAcceptance Criteria:\r\n* See FIGMA mockups for color and placement information (details)\r\n\r\nSee Designs here:  https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\nAdditional information:\r\n\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n"
          },
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "494"
          }
        ]
      },
      {
        "id": 196049,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:41:43Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Implement Download Button for Schema Check Results using the Button Component",
            "new_value": "Refactor .csv schema check download button to USWDS standards"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\nAdditional information:\r\n\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n"
          }
        ]
      },
      {
        "id": 196050,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:41:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197129,
        "user": {
          "id": 3844,
          "name": "Duebelbeis.Robert.1507284481"
        },
        "notes": "",
        "created_on": "2019-11-11T23:32:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197325,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T18:53:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have Ker Check conditions\r\n*When* I click on the download Ker report button\r\n*Then* a .csv file containing the Ker conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click the new dataset button\r\n*Then* I am returned to the upload screen\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click on the continue button\r\n*Then* my kers are processed \r\n*And* I am taken to the Ker result page\r\n*And* the button is using the button component\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n"
          }
        ]
      },
      {
        "id": 197328,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T18:54:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have Ker Check conditions\r\n*When* I click on the download Ker report button\r\n*Then* a .csv file containing the Ker conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click the new dataset button\r\n*Then* I am returned to the upload screen\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click on the continue button\r\n*Then* my kers are processed \r\n*And* I am taken to the Ker result page\r\n*And* the button is using the button component\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n**Given* I have Ker Check conditions\r\n*When* I click on the download Ker report button\r\n*Then* a .csv file containing the Ker conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click the new dataset button\r\n*Then* I am returned to the upload screen\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click on the continue button\r\n*Then* my kers are processed \r\n*And* I am taken to the Ker result page\r\n*And* the button is using the button component***\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n"
          }
        ]
      },
      {
        "id": 197330,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T19:03:47Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n**Given* I have Ker Check conditions\r\n*When* I click on the download Ker report button\r\n*Then* a .csv file containing the Ker conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click the new dataset button\r\n*Then* I am returned to the upload screen\r\n*And* the button is using the button component.\r\n\r\n*Given* I have uploaded a valid zip file\r\n*When* I click on the continue button\r\n*Then* my kers are processed \r\n*And* I am taken to the Ker result page\r\n*And* the button is using the button component***\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\nGiven I have Ker Check conditions\r\nWhen I click on the download Ker report button\r\nThen a .csv file containing the Ker conditions is downloaded\r\nAnd the button is using the button component.\r\n\r\nGiven I have uploaded a valid zip file\r\nWhen I click the new dataset button\r\nThen I am returned to the upload screen\r\nAnd the button is using the button component.\r\n\r\nGiven I have uploaded a valid zip file\r\nWhen I click on the continue button\r\nThen my kers are processed\r\nAnd I am taken to the Ker result page\r\nAnd the button is using the button component\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n"
          }
        ]
      },
      {
        "id": 197331,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T19:11:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\nGiven I have Ker Check conditions\r\nWhen I click on the download Ker report button\r\nThen a .csv file containing the Ker conditions is downloaded\r\nAnd the button is using the button component.\r\n\r\nGiven I have uploaded a valid zip file\r\nWhen I click the new dataset button\r\nThen I am returned to the upload screen\r\nAnd the button is using the button component.\r\n\r\nGiven I have uploaded a valid zip file\r\nWhen I click on the continue button\r\nThen my kers are processed\r\nAnd I am taken to the Ker result page\r\nAnd the button is using the button component\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* to be able to select a download button\r\n*So that* I can download the Schema Check results\r\n\r\n*Given* I have Schema Check conditions\r\n*When* I select on the download results button\r\n*Then* a .csv file containing the Schema Check conditions is downloaded\r\n*And* the button is using the button component.\r\n\r\n*Given* I have Ker Check conditions\r\nWhen I click on the download Ker report button\r\nThen a .csv file containing the Ker conditions is downloaded\r\nAnd the button is using the button component.\r\n\r\nGiven I have uploaded a valid zip file\r\nWhen I click the new dataset button\r\nThen I am returned to the upload screen\r\nAnd the button is using the button component.\r\n\r\nGiven I have uploaded a valid zip file\r\nWhen I click on the continue button\r\nThen my kers are processed\r\nAnd I am taken to the Ker result page\r\nAnd the button is using the button component\r\n\r\n*Given* I have ker conditions\r\n*When* I select on the download ker shapefiles button\r\n*Then* a zipfile is downloaded\r\n*And* the button is using the button component.\r\n\r\nAdditional information:\r\nSee Designs here:  https://zpl.io/VY1lQnm\r\n\r\nAcceptance Criteria:\r\n* refactor to the USWDS standards\r\n"
          }
        ]
      },
      {
        "id": 197381,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T20:40:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 197382,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-12T20:40:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 197630,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T16:43:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 197671,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T18:40:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 197674,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T18:47:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 41435,
    "subject": "UI KERs: Table Format",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 148844,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T20:12:29Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI APP: KER Table",
            "new_value": "UI KERs: Table Format"
          }
        ]
      },
      {
        "id": 148845,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T20:13:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has Pre-check errors\r\nI want to see Pre-check results in a table\r\nSo That I can easily see information about Pre-check errors\r\n\r\nGiven I have Pre-check errors\r\nWhen I am on the Pre-check errors page\r\nThen display Pre-check file name if and only if Pre-check file name exists\r\nAnd Then display Pre-check column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER errors\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER errors\r\n\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen display KER file name if and only if KER file name exists\r\nAnd Then display KER column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 148850,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T20:16:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER errors\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER errors\r\n\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen display KER file name if and only if KER file name exists\r\nAnd Then display KER column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER errors\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER errors\r\n\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen display KER file name if and only if KER file name exists\r\nAnd Then display KER column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\nAnd Then display Description if and only if Description exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 149422,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-24T13:29:20Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 149424,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-04-24T13:30:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2645"
          }
        ]
      },
      {
        "id": 150152,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-29T15:13:52Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 176060,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-08-20T14:15:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 176061,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-08-20T14:16:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 192502,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-29T14:59:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 192506,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-10-29T15:00:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 192511,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-10-29T15:07:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 192531,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:19:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192691,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T17:35:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 192720,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:13:21Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193165,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:18:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER errors\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER errors\r\n\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen display KER file name if and only if KER file name exists\r\nAnd Then display KER column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\nAnd Then display Description if and only if Description exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists\r\nAnd Then display KER column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\nAnd Then display Description if and only if Description exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 193167,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:20:14Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists\r\nAnd Then display KER column name if and only if column name exists\r\nAnd Then display FID if and only if FID exists\r\nAnd Then display Description if and only if Description exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists\r\nAnd Then display Description if and only if Description exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 193168,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:21:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists\r\nAnd Then display Description if and only if Description exists\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 193169,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:21:35Z",
        "details": [
          {
            "property": "attachment",
            "name": "5065",
            "new_value": "Copy of MGCP KER Descriptions_15Oct2019.xlsx"
          }
        ]
      },
      {
        "id": 193170,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:22:04Z",
        "details": [
          {
            "property": "attachment",
            "name": "5065",
            "old_value": "Copy of MGCP KER Descriptions_15Oct2019.xlsx"
          }
        ]
      },
      {
        "id": 193175,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:24:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nAcceptance Criteria:\r\n* Create a table that includes shapefile  name, KER short name, FID, and Description. \r\n* Will add mockup for this requirement\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 194435,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T20:59:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194856,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:55:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 194872,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T19:02:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 194873,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T19:03:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 195205,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T16:01:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 195209,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T16:07:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 195527,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T18:45:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 195578,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Table should return shapefile name, FID, and Description of KER (see screen capture for what is seen on return currently).",
        "created_on": "2019-11-06T19:38:31Z",
        "details": [
          {
            "property": "attachment",
            "name": "5126",
            "new_value": "Capture.JPG"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nAcceptance Criteria:\r\n* Create a table that includes shapefile  name, KER short name, FID, and Description. \r\n* Will add mockup for this requirement\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nAcceptance Criteria:\r\n* Create a table that includes shapefile  name, KER short name, FID, and Description. \r\n* Will add mockup for this requirement\r\n\r\n\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 195579,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-06T19:38:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 196454,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-07T20:41:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nAcceptance Criteria:\r\n* Create a table that includes shapefile  name, KER short name, FID, and Description. \r\n* Will add mockup for this requirement\r\n\r\n\r\n\r\nNotes:\r\nColumn sorting will come in a later story.",
            "new_value": "As a QAC user who has KER conditions\r\nI want to see KER results in a table\r\nSo That I can easily see information about KER conditions\r\n\r\nGiven I have KER conditions\r\nWhen I am on the KER conditions page\r\nThen display KER file name if and only if KER file name exists (shapefile name)\r\nAnd Then display KER column name if and only if column name exists (name of the KER)\r\nAnd Then display FID if and only if FID exists (FID = Feature ID)\r\nAnd Then display Description if and only if Description exists (the long description of what the KER is looking for)\r\n\r\nAcceptance Criteria:\r\n* Create a table that includes shapefile  name, KER short name, and FID. \r\n* Will add mockup for this requirement\r\n\r\n\r\n\r\nNotes:\r\nColumn sorting will come in a later story."
          }
        ]
      },
      {
        "id": 196455,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-07T20:41:45Z",
        "details": [
          {
            "property": "attachment",
            "name": "5126",
            "old_value": "Capture.JPG"
          }
        ]
      },
      {
        "id": 196457,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-07T20:41:55Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 41299,
    "subject": "UI APP: 0 Pre-check Conditions (UI and Front-End)",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 148468,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T15:55:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "edit:\r\n\r\nAs a QAC user who has pre-check errors\r\nI want to download a pre-check errors report\r\nSo that I can have a record of my pre-check errors outside of QAC\r\n\r\nAC #1\r\nGiven I have pre-check errors\r\nWhen I am on the pre-check errors page\r\nThen I see a 'Download Pre-Check Report' button",
            "new_value": "edit:\r\n\r\n*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\nAC #1\r\nGiven I have pre-check errors\r\nWhen I am on the pre-check errors page\r\nThen I see a 'Download Pre-Check Report' button"
          }
        ]
      },
      {
        "id": 148483,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T16:05:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "edit:\r\n\r\n*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\nAC #1\r\nGiven I have pre-check errors\r\nWhen I am on the pre-check errors page\r\nThen I see a 'Download Pre-Check Report' button",
            "new_value": "edit:\r\n\r\n*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification banner stating there were 0 Pre-check errors\r\n\r\nSee Design:\r\n"
          }
        ]
      },
      {
        "id": 148500,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T16:07:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "edit:\r\n\r\n*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification banner stating there were 0 Pre-check errors\r\n\r\nSee Design:\r\n",
            "new_value": "*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification banner stating there were 0 Pre-check errors\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n"
          }
        ]
      },
      {
        "id": 148521,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T16:10:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification banner stating there were 0 Pre-check errors\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check errors\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n"
          }
        ]
      },
      {
        "id": 148544,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T16:40:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2891"
          }
        ]
      },
      {
        "id": 149431,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-24T13:33:03Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 191908,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-25T18:27:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 191913,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-25T18:28:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 192547,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:21:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192730,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:16:30Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193141,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T14:51:35Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2891",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 193694,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T18:13:37Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI APP: 0 Pre-check Errors",
            "new_value": "UI APP: 0 Pre-check Errors (UI and Front-End)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check errors\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check errors\r\n\r\nAcceptance Criteria:\r\n* When there are not any conditions within the KER check, we need to create messaging for the user to understand that they did not have any conditions in the KER check.\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n"
          }
        ]
      },
      {
        "id": 193731,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T19:55:05Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "496"
          }
        ]
      },
      {
        "id": 194358,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:41:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who does not have Pre-check errors\r\n*I want* a notice stating no Pre-check errors were found\r\n*So that* I know there were 0 Pre-check errors\r\n\r\n*Given* I do not have Pre-check errors\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check errors\r\n\r\nAcceptance Criteria:\r\n* When there are not any conditions within the KER check, we need to create messaging for the user to understand that they did not have any conditions in the KER check.\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who does not have Pre-check conditions\r\n*I want* a notice stating no Pre-check conditions were found\r\n*So that* I know there were 0 Pre-check conditions\r\n\r\n*Given* I do not have Pre-check conditions\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check conditions\r\n\r\nAcceptance Criteria:\r\n* When there are not any conditions within the pre-check, we need to create messaging for the user to understand that they did not have any conditions in the precheck.\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n"
          }
        ]
      },
      {
        "id": 194359,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:43:15Z",
        "details": [
          {
            "property": "attachment",
            "name": "5100",
            "new_value": "Screen Shot of Zero Errors in UI.JPG"
          }
        ]
      },
      {
        "id": 194629,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T14:01:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 194635,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-05T14:16:11Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI APP: 0 Pre-check Errors (UI and Front-End)",
            "new_value": "UI APP: 0 Pre-check Conditions (UI and Front-End)"
          }
        ]
      },
      {
        "id": 195248,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T17:08:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 195577,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T19:37:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 195582,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-06T19:40:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 195915,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-07T14:56:07Z",
        "details": [
          {
            "property": "attachment",
            "name": "5150",
            "new_value": "Screen Shot 2019-11-04 at 1.15.54 PM.png"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who does not have Pre-check conditions\r\n*I want* a notice stating no Pre-check conditions were found\r\n*So that* I know there were 0 Pre-check conditions\r\n\r\n*Given* I do not have Pre-check conditions\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check conditions\r\n\r\nAcceptance Criteria:\r\n* When there are not any conditions within the pre-check, we need to create messaging for the user to understand that they did not have any conditions in the precheck.\r\n\r\nSee Design: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who does not have Pre-check conditions\r\n*I want* a notice stating no Pre-check conditions were found\r\n*So that* I know there were 0 Pre-check conditions\r\n\r\n*Given* I do not have Pre-check conditions\r\n*When* the Pre-checks have finished running\r\n*Then* I should see a notification stating there were 0 Pre-check conditions\r\n\r\nAcceptance Criteria:\r\n* When there are not any conditions within the pre-check, we need to create messaging for the user to understand that they did not have any conditions in the precheck.\r\n\r\nSee Design: https://zpl.io/a3d4zel\r\n"
          }
        ]
      },
      {
        "id": 195916,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "",
        "created_on": "2019-11-07T14:56:19Z",
        "details": [
          {
            "property": "attachment",
            "name": "5100",
            "old_value": "Screen Shot of Zero Errors in UI.JPG"
          }
        ]
      }
    ]
  },
  {
    "id": 41298,
    "subject": "Download KER results as .csv",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 148442,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T15:35:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user who has KER errors\r\nI want to see the number of errors each Pre-check has\r\nSo that I know the total number of errors for each particular pre-check\r\nGiven I have pre-check errors\r\nWhen upon the pre-check page load\r\nThen I see a label with the total number or errors next to the pre-check in the navigation bar\r\nSee Designs here:\r\n",
            "new_value": "*As a* QAC user who has KER errors\r\n*I want* to be able to download the KER results\r\n*So that* I know the errors for each particular KER\r\n\r\n*Given* I have KER errors\r\n*When* I click on the download results button\r\n*Then* a .csv file containing the KER errors is downloaded\r\n"
          }
        ]
      },
      {
        "id": 148451,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T15:40:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has KER errors\r\n*I want* to be able to download the KER results\r\n*So that* I know the errors for each particular KER\r\n\r\n*Given* I have KER errors\r\n*When* I click on the download results button\r\n*Then* a .csv file containing the KER errors is downloaded\r\n",
            "new_value": "*As a* QAC user who has KER errors\r\n*I want* to be able to download the KER results\r\n*So that* I know the errors for each particular KER\r\n\r\n*Given* I have KER errors\r\n*When* I click on the download results button\r\n*Then* a .csv file containing the KER errors is downloaded\r\n\r\nSee Designs here:  https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n"
          }
        ]
      },
      {
        "id": 148460,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T15:46:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2891"
          }
        ]
      },
      {
        "id": 149210,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T17:58:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has KER errors\r\n*I want* to be able to download the KER results\r\n*So that* I know the errors for each particular KER\r\n\r\n*Given* I have KER errors\r\n*When* I click on the download results button\r\n*Then* a .csv file containing the KER errors is downloaded\r\n\r\nSee Designs here:  https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n",
            "new_value": "*As a* QAC user who has KER errors\r\n*I want* to the KER results downloaded to a .csv report\r\n*So that* I have documentation of the errors for each particular KER\r\n\r\nAC: #1\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen a .csv file containing the KER errors can be downloaded\r\n\r\nAC #2:\r\nGiven I do not have KER errors\r\nWhen I am on the KER errors page\r\nThen no report is downloaded."
          }
        ]
      },
      {
        "id": 149211,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T17:58:18Z",
        "details": [
          {
            "property": "attr",
            "name": "tracker_id",
            "old_value": "7",
            "new_value": "6"
          },
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE!  Download KER results as .csv",
            "new_value": "Download KER results as .csv"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2891",
            "new_value": "2731"
          }
        ]
      },
      {
        "id": 149432,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-24T13:34:10Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 150184,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-29T15:51:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has KER errors\r\n*I want* to the KER results downloaded to a .csv report\r\n*So that* I have documentation of the errors for each particular KER\r\n\r\nAC: #1\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen a .csv file containing the KER errors can be downloaded\r\n\r\nAC #2:\r\nGiven I do not have KER errors\r\nWhen I am on the KER errors page\r\nThen no report is downloaded.",
            "new_value": "*As a* QAC user who has KER errors\r\n*I want* the KER results downloaded to a .csv report\r\n*So that* I have documentation of the errors for each particular KER\r\n\r\nAC: #1\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen a .csv file containing the KER errors can be downloaded\r\n\r\nAC #2:\r\nGiven I do not have KER errors\r\nWhen I am on the KER errors page\r\nThen no report is downloaded."
          }
        ]
      },
      {
        "id": 150992,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T15:12:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has KER errors\r\n*I want* the KER results downloaded to a .csv report\r\n*So that* I have documentation of the errors for each particular KER\r\n\r\nAC: #1\r\nGiven I have KER errors\r\nWhen I am on the KER errors page\r\nThen a .csv file containing the KER errors can be downloaded\r\n\r\nAC #2:\r\nGiven I do not have KER errors\r\nWhen I am on the KER errors page\r\nThen no report is downloaded.",
            "new_value": "*As a* QAC user who has KER errors\r\n*I want* the KER results downloaded to a .csv report\r\n*So that* I have documentation of the errors for each particular KER\r\n\r\nAC: #1\r\n*Given* I have KER errors\r\n*When* I am on the KER errors page\r\n*Then* a .csv file containing the KER errors can be downloaded\r\n\r\nAC #2:\r\n*Given* I do not have KER errors\r\n*When* I am on the KER errors page\r\n*Then* no report is downloaded."
          }
        ]
      },
      {
        "id": 191907,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-25T18:27:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 191912,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-25T18:28:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 192546,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:20:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192729,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:16:13Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193144,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T14:52:12Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 193188,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-30T15:35:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has KER errors\r\n*I want* the KER results downloaded to a .csv report\r\n*So that* I have documentation of the errors for each particular KER\r\n\r\nAC: #1\r\n*Given* I have KER errors\r\n*When* I am on the KER errors page\r\n*Then* a .csv file containing the KER errors can be downloaded\r\n\r\nAC #2:\r\n*Given* I do not have KER errors\r\n*When* I am on the KER errors page\r\n*Then* no report is downloaded.",
            "new_value": "*As a* QAC user who has KER conditions\r\n*I want* the KER conditions downloaded to a .csv report\r\n*So that* I have documentation of the conditions for each particular KER\r\n\r\nAC: #1\r\n*Given* I have KER conditions\r\n*When* I am on the KER conditions page\r\n*Then* a .csv file containing the KER conditions can be downloaded\r\n\r\nAC #2:\r\n*Given* I do not have KER conditions\r\n*When* I am on the KER conditions page\r\n*Then* a report is not available\r\n\r\nAcceptance Criteria:\r\nDisplay conditions in UI (different story)\r\nDisplay conditions in .csv file when downloaded"
          }
        ]
      },
      {
        "id": 193693,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T18:08:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has KER conditions\r\n*I want* the KER conditions downloaded to a .csv report\r\n*So that* I have documentation of the conditions for each particular KER\r\n\r\nAC: #1\r\n*Given* I have KER conditions\r\n*When* I am on the KER conditions page\r\n*Then* a .csv file containing the KER conditions can be downloaded\r\n\r\nAC #2:\r\n*Given* I do not have KER conditions\r\n*When* I am on the KER conditions page\r\n*Then* a report is not available\r\n\r\nAcceptance Criteria:\r\nDisplay conditions in UI (different story)\r\nDisplay conditions in .csv file when downloaded",
            "new_value": "*As a* QAC user who has KER conditions\r\n*I want* the KER conditions downloaded to a .csv report\r\n*So that* I have documentation of the conditions for each particular KER\r\n\r\nAC: #1\r\n*Given* I have KER conditions\r\n*When* I am on the KER conditions page and I select the button\r\n*Then* a .csv file containing the KER conditions can be downloaded\r\n\r\nAC #2:\r\n*Given* I do not have KER conditions\r\n*When* I am on the KER conditions page\r\n*Then* the .csv cannot be downloaded\r\n\r\nAcceptance Criteria:\r\n* Display conditions in UI (different story)\r\n* Display conditions in .csv file when downloaded\r\n* The KER conditions in the .csv will contain the headers and data (verify fields and contents of file)\r\n\r\nNotes:\r\nNeed to determine what will happen when there are not any KER conditions (should we disable the button, etc.)?"
          }
        ]
      },
      {
        "id": 193985,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-01T17:08:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 193987,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "Roy and Erik.",
        "created_on": "2019-11-01T17:09:12Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "449",
            "new_value": "3857"
          }
        ]
      },
      {
        "id": 194020,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "QUESTIONS:\r\n\r\n1. Do we need success notification(style and verbiage) \r\n2. Do we need error notification(style and verbiage) \r\n3. Should we disable/hide download button and or create spinner during csv download\r\n4. When no ker data is present should the button be disabled or hidden\r\n\r\nCallout:\r\nWe had a turnaround to discuss the size of this story. We feel that we should have a discussion about breaking this story into multiple stories given the amount of work involved in completing the ACs as written. Possibly we could complete this story by just including currently accessible ker data in the csv(fcode, fid).",
        "created_on": "2019-11-01T20:30:05Z",
        "details": []
      },
      {
        "id": 197220,
        "user": {
          "id": 3848,
          "name": "Ali.Yasir.1262049333"
        },
        "notes": "QUESTION Regarding CSV Data Format:\r\nHow do we display data for a case where there are multiple FIDs for a given condition?  Do we store data in CSV the same way as it is displayed on the KER Results page - multiple FIDs per condition? OR should it be a separate row for each FID?",
        "created_on": "2019-11-12T16:23:58Z",
        "details": []
      },
      {
        "id": 197629,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T16:43:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 198088,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-14T20:58:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 198095,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-14T21:01:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 40766,
    "subject": "SIDE NAV: Reformat Schema Check Names being sent to Front End",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 146033,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-10T13:56:58Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Reformat Pre-check names",
            "new_value": "UI SIDE NAV: Reformat Pre-check names"
          }
        ]
      },
      {
        "id": 146058,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-10T14:27:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a*\r\n*I want*\r\n*So That*\r\n \r\n*Given*\r\n*When*\r\n*Then*\r\n",
            "new_value": "*As a* QAC user who has pre-check errors\r\n*I want*\r\n*So That*\r\n \r\n*Given* I have pre-check errors on the pre-checks page\r\n*When*\r\n*Then*\r\n"
          }
        ]
      },
      {
        "id": 146077,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-10T15:04:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has pre-check errors\r\n*I want*\r\n*So That*\r\n \r\n*Given* I have pre-check errors on the pre-checks page\r\n*When*\r\n*Then*\r\n",
            "new_value": "*As a* QAC user who has Pre-check errors\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have errors\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n"
          }
        ]
      },
      {
        "id": 146078,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-10T15:05:14Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI SIDE NAV: Reformat Pre-check names",
            "new_value": "UI SIDE NAV: Reformat Pre-check Names"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check errors\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have errors\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n",
            "new_value": "*As a* QAC user who has Pre-check errors\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have errors\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n"
          },
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 146079,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-10T15:06:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2891"
          }
        ]
      },
      {
        "id": 146084,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-10T15:13:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check errors\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have errors\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n",
            "new_value": "*As a* QAC user who has Pre-check errors\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have errors\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n"
          }
        ]
      },
      {
        "id": 146453,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-11T13:36:07Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 150161,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-29T15:19:28Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 192542,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:20:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192735,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:18:42Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193148,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T14:56:38Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "494"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2891",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 194364,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:54:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check errors\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have errors\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n",
            "new_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\nQuestions:\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores?\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n"
          }
        ]
      },
      {
        "id": 194607,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "NOTE",
        "created_on": "2019-11-05T13:12:30Z",
        "details": [
          {
            "property": "attachment",
            "name": "5104",
            "new_value": "MGCP Pre-checks.xlsx"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\nQuestions:\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores?\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n",
            "new_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\nQuestions:\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores?\r\n\r\nAnswer:\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n"
          }
        ]
      },
      {
        "id": 195187,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T15:44:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\nQuestions:\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores?\r\n\r\nAnswer:\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n",
            "new_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\n*Notes: \r\nDiscussion with Matt Van Slyke: In the prechecks, there is a \"false\" and \"true\" column identifier when a precheck has a condition. Can this be used versus just not displaying any \"positive\" conditions? For the UI, we need all of the columns to display, even if there aren't conditions. Please chat with Matt Van Slyke if there are questions.*\r\n\r\n*Questions:*\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores\r\n\r\nAnswer:\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n"
          }
        ]
      },
      {
        "id": 195431,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 195594,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T19:53:10Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI SIDE NAV: Reformat Pre-check Names",
            "new_value": "SIDE NAV: Reformat Pre-check Names being sent to Front End"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-check\r\n*When* I am on the Pre-check page\r\n*Then* display the Pre-checks without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\n*Notes: \r\nDiscussion with Matt Van Slyke: In the prechecks, there is a \"false\" and \"true\" column identifier when a precheck has a condition. Can this be used versus just not displaying any \"positive\" conditions? For the UI, we need all of the columns to display, even if there aren't conditions. Please chat with Matt Van Slyke if there are questions.*\r\n\r\n*Questions:*\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores\r\n\r\nAnswer:\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n\r\nNOTES:\r\nStyle Guide: https://designsystem.digital.gov/components/typography/\r\nDesign: https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=339%3A3\r\n",
            "new_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-checks\r\n*When* I am on the Pre-check page\r\n*Then* return the Pre-check names without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\n*Notes: \r\nDiscussion with Matt Van Slyke: In the prechecks, there is a \"false\" and \"true\" column identifier when a precheck has a condition. Can this be used versus just not displaying any \"positive\" conditions? For the UI, we need all of the columns to display, even if there aren't conditions. Please chat with Matt Van Slyke if there are questions.*\r\n\r\n*Questions:*\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores\r\n\r\n*Answer:*\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n"
          },
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "494"
          }
        ]
      },
      {
        "id": 195610,
        "user": {
          "id": 3835,
          "name": "Huffman.Nichole.1572628627"
        },
        "notes": "",
        "created_on": "2019-11-06T20:09:48Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SIDE NAV: Reformat Pre-check Names being sent to Front End",
            "new_value": "SIDE NAV: Reformat Schema Check Names being sent to Front End"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Pre-check conditions\r\n*I want* readable Pre-check names in the Pre-check page side nav\r\n*So That* I can recognize which Pre-checks have conditions\r\n \r\n*Given* I have Pre-checks\r\n*When* I am on the Pre-check page\r\n*Then* return the Pre-check names without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Pre-checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\n*Notes: \r\nDiscussion with Matt Van Slyke: In the prechecks, there is a \"false\" and \"true\" column identifier when a precheck has a condition. Can this be used versus just not displaying any \"positive\" conditions? For the UI, we need all of the columns to display, even if there aren't conditions. Please chat with Matt Van Slyke if there are questions.*\r\n\r\n*Questions:*\r\n# Can we get a list of the precheck names so Jeff can scan them to validate the only thing changing is removing the underscores\r\n\r\n*Answer:*\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n",
            "new_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* readable Schema Check names in the Schema Check page side nav\r\n*So That* I can recognize which Schema Checks have conditions\r\n \r\n*Given* I have Schema Checks\r\n*When* I am on the Schema Check page\r\n*Then* return the Schema Check names without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Schema Checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\n*Notes: \r\nDiscussion with Matt Van Slyke: In the Schema Checks, there is a \"false\" and \"true\" column identifier when a Schema Check has a condition. Can this be used versus just not displaying any \"positive\" conditions? For the UI, we need all of the columns to display, even if there aren't conditions. Please chat with Matt Van Slyke if there are questions.*\r\n\r\n*Questions:*\r\n# Can we get a list of the Schema Check names so Jeff can scan them to validate the only thing changing is removing the underscores\r\n\r\n*Answer:*\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n"
          }
        ]
      },
      {
        "id": 196038,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:35:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check conditions\r\n*I want* readable Schema Check names in the Schema Check page side nav\r\n*So That* I can recognize which Schema Checks have conditions\r\n \r\n*Given* I have Schema Checks\r\n*When* I am on the Schema Check page\r\n*Then* return the Schema Check names without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Schema Checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.\r\n\r\n*Notes: \r\nDiscussion with Matt Van Slyke: In the Schema Checks, there is a \"false\" and \"true\" column identifier when a Schema Check has a condition. Can this be used versus just not displaying any \"positive\" conditions? For the UI, we need all of the columns to display, even if there aren't conditions. Please chat with Matt Van Slyke if there are questions.*\r\n\r\n*Questions:*\r\n# Can we get a list of the Schema Check names so Jeff can scan them to validate the only thing changing is removing the underscores\r\n\r\n*Answer:*\r\nPlease use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).\r\n",
            "new_value": "*As a* QAC user who has Schema Check exceptions\r\n*I want* readable Schema Check names in the Schema Check page side nav\r\n*So That* I can recognize which Schema Checks have exceptions\r\n \r\n*Given* I have Schema Checks\r\n*When* I am on the Schema Check page\r\n*Then* return the Schema Check names without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Schema Checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.* *** See the spreadsheet attached for the exact names that should be used.*\r\n\r\n*Please use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).*\r\n"
          }
        ]
      },
      {
        "id": 196041,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:36:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has Schema Check exceptions\r\n*I want* readable Schema Check names in the Schema Check page side nav\r\n*So That* I can recognize which Schema Checks have exceptions\r\n \r\n*Given* I have Schema Checks\r\n*When* I am on the Schema Check page\r\n*Then* return the Schema Check names without underscores \r\n*And* in title case.\r\n\r\nFor example: Currently Schema Checks are displayed with underscores: “filename_geometry_mismatch”.  We want to display as: “Filename Geometry Mismatch”.* *** See the spreadsheet attached for the exact names that should be used.*\r\n\r\n*Please use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).*\r\n",
            "new_value": "*As a* QAC user who has Schema Check exceptions\r\n*I want* readable Schema Check names in the Schema Check page side nav\r\n*So That* I can recognize which Schema Checks have exceptions\r\n \r\n*Given* I have Schema Checks\r\n*When* I am on the Schema Check page\r\n*Then* return the Schema Check names without underscores \r\n*And* in title case.\r\n\r\n*** See the spreadsheet attached for the exact names that should be used.*\r\n\r\n*Please use the Schema/Pre-check names from the attached spreadsheet (MGCP Pre-checks.xlsx).*\r\n"
          }
        ]
      },
      {
        "id": 196051,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-07T16:42:11Z",
        "details": [
          {
            "property": "attachment",
            "name": "5104",
            "old_value": "MGCP Pre-checks.xlsx"
          }
        ]
      },
      {
        "id": 196052,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-07T16:42:27Z",
        "details": [
          {
            "property": "attachment",
            "name": "5155",
            "new_value": "MGCP Pre-checks_07Nov2019.xlsx"
          }
        ]
      },
      {
        "id": 196053,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:42:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 197304,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-12T17:39:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 198051,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-14T19:44:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 198087,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-14T20:56:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 40519,
    "subject": "Setup Staging Environment",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 144893,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T15:53:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 145055,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T20:54:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Task:\r\n\r\nSet up Staging Environment in Ops-East that gets as close as possible to production",
            "new_value": "Task:\r\n\r\nSet up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins\r\n\r\nA"
          }
        ]
      },
      {
        "id": 145056,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T20:54:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Task:\r\n\r\nSet up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins\r\n\r\nA",
            "new_value": "Task:\r\n\r\nSet up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins\r\n\r\n"
          }
        ]
      },
      {
        "id": 146460,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-11T13:39:15Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 147079,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-15T14:37:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Task:\r\n\r\nSet up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins\r\n\r\n",
            "new_value": "Set up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins\r\n\r\n"
          }
        ]
      },
      {
        "id": 148688,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T13:38:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2731"
          }
        ]
      },
      {
        "id": 148692,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T13:42:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 148693,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T13:42:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 150181,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-29T15:47:42Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Set up Staging Environment on Ops-East",
            "new_value": "Set up Staging Environment on Ops-East (edit as a Story)"
          }
        ]
      },
      {
        "id": 192545,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:20:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192736,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:19:01Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193695,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T18:17:47Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Set up Staging Environment on Ops-East (edit as a Story)",
            "new_value": "Set up Staging Environment"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Set up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins\r\n\r\n",
            "new_value": "Set up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins.\r\n\r\nAcceptance Criteria:\r\n* There are credentials in Jenkins\r\n\r\n"
          }
        ]
      },
      {
        "id": 193696,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-31T18:20:44Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Set up Staging Environment",
            "new_value": "Setup Staging Environment"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Set up Staging Environment in Ops-East that gets as close as possible to production, and can be manually promoted in Jenkins.\r\n\r\nAcceptance Criteria:\r\n* There are credentials in Jenkins\r\n\r\n",
            "new_value": "Acceptance Criteria:\r\n* There are credentials in Jenkins\r\n\r\n"
          }
        ]
      },
      {
        "id": 194365,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:55:14Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731",
            "new_value": "1657"
          }
        ]
      },
      {
        "id": 195433,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:22:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 196047,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:37:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 196048,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-07T16:38:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 40423,
    "subject": "UI SIDE NAV: Number of Errors per Pre-check AND Kers",
    "category": "Web App team",
    "status": "Done",
    "journals": [
      {
        "id": 144280,
        "user": {
          "id": 1510,
          "name": "Pilz.Chelsea.1400208421"
        },
        "notes": "",
        "created_on": "2019-04-04T19:48:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* user who has pre-check errors\r\n*I want* to see a label next to the Pre-check name\r\n*So that* I know the total number of errors for that particular pre-check\r\n\r\n*Given* I am on the pre-check page\r\n*When* I have pre-check errors\r\n*Then* I see a label with the total next to the pre-check name\r\n\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n\r\n*Notes:*\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n",
            "new_value": "*As a* user who has pre-check errors\r\n*I want* to see a label with the total number of errors next to the Pre-check name\r\n*So that* I know the total number of errors for that particular pre-check\r\n\r\n*Given* I am on the pre-check page\r\n*When* I have pre-check errors\r\n*Then* I see a label with the total next to the pre-check name\r\n\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n\r\n*Notes:*\r\n* If  KER has multiple parts than the \"total\" is the sum off all of the parts\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n"
          }
        ]
      },
      {
        "id": 144864,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T14:41:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2891"
          }
        ]
      },
      {
        "id": 144877,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T15:27:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* user who has pre-check errors\r\n*I want* to see a label with the total number of errors next to the Pre-check name\r\n*So that* I know the total number of errors for that particular pre-check\r\n\r\n*Given* I am on the pre-check page\r\n*When* I have pre-check errors\r\n*Then* I see a label with the total next to the pre-check name\r\n\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n\r\n*Notes:*\r\n* If  KER has multiple parts than the \"total\" is the sum off all of the parts\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n",
            "new_value": "*As a* QAC user who has pre-check errors\r\n*I want* to see the number of errors each Pre-check has\r\n*So that* I know the total number of errors for each particular pre-check\r\n \r\n*Given* I have pre-check errors\r\n*When* upon the pre-check page load\r\n*Then* I see a label with the total number or errors next to the pre-check in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n"
          }
        ]
      },
      {
        "id": 144885,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T15:36:50Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "[PM] User sees a 'label' with the total errors next to the pre-check",
            "new_value": "UI APP: Display number of errors next to each pre-check "
          }
        ]
      },
      {
        "id": 144977,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T18:33:22Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 145047,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T20:39:41Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI APP: Display number of errors next to each pre-check ",
            "new_value": "UI SIDE NAV: :Number or Errors per Pre-check "
          }
        ]
      },
      {
        "id": 145048,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T20:40:00Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI SIDE NAV: :Number or Errors per Pre-check ",
            "new_value": "UI SIDE NAV: Number or Errors per Pre-check "
          }
        ]
      },
      {
        "id": 146456,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-11T13:37:11Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 147572,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-16T17:24:37Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI SIDE NAV: Number or Errors per Pre-check ",
            "new_value": "UI SIDE NAV: Number of Errors per Pre-check "
          }
        ]
      },
      {
        "id": 192541,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:20:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 192734,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:18:16Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193145,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T14:53:01Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2891",
            "new_value": "449"
          }
        ]
      },
      {
        "id": 193147,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-30T14:54:03Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "494"
          }
        ]
      },
      {
        "id": 194361,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:49:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has pre-check errors\r\n*I want* to see the number of errors each Pre-check has\r\n*So that* I know the total number of errors for each particular pre-check\r\n \r\n*Given* I have pre-check errors\r\n*When* upon the pre-check page load\r\n*Then* I see a label with the total number or errors next to the pre-check in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n",
            "new_value": "*As a* QAC user who has pre-check conditions\r\n*I want* to see the number of each conditions Pre-check has\r\n*So that* I know the total number of conditions for each particular pre-check\r\n \r\n*Given* I have pre-check conditions\r\n*When* upon the pre-check page load\r\n*Then* I see a label with the total number of conditions next to the pre-check in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n"
          }
        ]
      },
      {
        "id": 194362,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-04T19:51:31Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has pre-check conditions\r\n*I want* to see the number of each conditions Pre-check has\r\n*So that* I know the total number of conditions for each particular pre-check\r\n \r\n*Given* I have pre-check conditions\r\n*When* upon the pre-check page load\r\n*Then* I see a label with the total number of conditions next to the pre-check in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts\r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n",
            "new_value": "*As a* QAC user who has pre-check conditions\r\n*I want* to see the number of each conditions Pre-check has\r\n*So that* I know the total number of conditions for each particular pre-check\r\n \r\n*Given* I have pre-check conditions\r\n*When* the pre-check page loads\r\n*Then* I see a label with the total number of conditions next to the pre-check in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts (*this note is more for the KERS totals*). \r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n"
          }
        ]
      },
      {
        "id": 194631,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-11-05T14:08:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 195206,
        "user": {
          "id": 3823,
          "name": "Riggs.Arianna.1572616262"
        },
        "notes": "Figma link: https://www.figma.com/file/XZzZMzP2rz17XieovZOZjQ/Schema-check-side-nav?node-id=0%3A1\r\n\r\nScreenshot attached.",
        "created_on": "2019-11-06T16:01:39Z",
        "details": [
          {
            "property": "attachment",
            "name": "5111",
            "new_value": "Screen Shot 2019-11-06 at 10.01.20 AM.png"
          }
        ]
      },
      {
        "id": 196832,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-11-08T14:14:27Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "UI SIDE NAV: Number of Errors per Pre-check ",
            "new_value": "UI SIDE NAV: Number of Errors per Pre-check AND Kers"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user who has pre-check conditions\r\n*I want* to see the number of each conditions Pre-check has\r\n*So that* I know the total number of conditions for each particular pre-check\r\n \r\n*Given* I have pre-check conditions\r\n*When* the pre-check page loads\r\n*Then* I see a label with the total number of conditions next to the pre-check in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts (*this note is more for the KERS totals*). \r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n",
            "new_value": "*As a* QAC user who has pre-check conditions\r\n*I want* to see the number of each exceptions/conditions Pre-check and Kers has\r\n*So that* I know the total number of conditions for each particular pre-check and Ker\r\n \r\n*Given* I have pre-check conditions\r\n*When* the pre-check page loads\r\n*Then* I see a label with the total number of conditions next to the pre-check in the navigation bar\r\n\r\n*Given* I have Ker conditions\r\n*When* the Ker page loads\r\n*Then* I see a label with the total number of conditions next to the Ker in the navigation bar\r\n*See Designs here:*\r\n* https://www.figma.com/file/GJHlW6USIwySfwe0F7T4Z5/NGA-Slices?node-id=635%3A2165\r\n \r\n*Notes:*\r\n* If we use the same logic for KERS as we are writing for pre-checks, keep in mind -  if KER has multiple parts than the \"total\" is the sum off all of the parts (*this note is more for the KERS totals*). \r\n* The label does not truncate\r\n* The label is a fixed distance from the dividing line (i.e. if the column width is adjusted the tag will stay fixed to the right)\r\n* Government style guide does have a 'label' element\r\n \r\nGovernment Style Guide:\r\nhttps://designsystem.digital.gov/components/sidenav/\r\n\r\n"
          }
        ]
      },
      {
        "id": 197182,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-11-12T15:05:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 197660,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T18:21:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 197669,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-13T18:33:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 40351,
    "subject": "ZIP FOLDER STRUCTURE",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 144094,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:00:02Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "40308"
          }
        ]
      },
      {
        "id": 144098,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:04:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a user with access to the database\r\nI want to see all single-part KERs from the Master Crosswalk in the database\r\nso that I can make query updates to it if needed\r\n\r\nNote: We are adding only completed (as of 4/3/2019) single-part KERs in this story. A single-part KER is defined as any KER with only one part. Completed is defined as query written, with badger test data, and is added to QAC.\r\n\r\n\r\nMULTIPARTA\r\nANY_SAMEID\r\n\r\nAcceptance Criteria 2: \r\n\r\nGiven I release a new version of QAC \r\nAnd I have changed any single-part KER query\r\nWhen the new version is deployed\r\nThen I see the original Master Crosswalk single-part KER queries\r\n\r\n",
            "new_value": "Given I am a QAC user\r\nI want to upload a zip file nested one level\r\nso that I can run the app without a zip file error\r\n\r\n\r\nGiven I upload a zip\r\nAnd I have changed any single-part KER query\r\nWhen the new version is deployed\r\nThen I see the original Master Crosswalk single-part KER queries\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 144099,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:05:05Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "40358"
          }
        ]
      },
      {
        "id": 144111,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:07:00Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "ZIP",
            "new_value": "ZIP next one level"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I am a QAC user\r\nI want to upload a zip file nested one level\r\nso that I can run the app without a zip file error\r\n\r\n\r\nGiven I upload a zip\r\nAnd I have changed any single-part KER query\r\nWhen the new version is deployed\r\nThen I see the original Master Crosswalk single-part KER queries\r\n\r\n\r\n\r\n",
            "new_value": "Given I am a QAC user\r\nI want to upload a zip file nested one level\r\nso that I can run the app without an upload error\r\n\r\n\r\nGiven I upload a zip file\r\nAnd the files are nested on level less\r\nWhen I run QAC\r\nThen I see not get an upload error\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 144112,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:10:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Given I am a QAC user\r\nI want to upload a zip file nested one level\r\nso that I can run the app without an upload error\r\n\r\n\r\nGiven I upload a zip file\r\nAnd the files are nested on level less\r\nWhen I run QAC\r\nThen I see not get an upload error\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file\r\nSo that I can run the tool against that file\r\n\r\nGiven I upload a zip file\r\nAnd the files are nested one level or less\r\nWhen I run QAC\r\nThen I should not get an upload error\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 144150,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-04T15:35:34Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 144153,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:36:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file\r\nSo that I can run the tool against that file\r\n\r\nGiven I upload a zip file\r\nAnd the files are nested one level or less\r\nWhen I run QAC\r\nThen I should not get an upload error\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          },
          {
            "property": "attr",
            "name": "parent_id",
            "old_value": "32364"
          }
        ]
      },
      {
        "id": 144157,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:36:47Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "40308"
          }
        ]
      },
      {
        "id": 144159,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T15:36:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "40358"
          }
        ]
      },
      {
        "id": 144163,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-04-04T15:38:18Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 144256,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-04T19:08:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\n\r\nNotes: \r\n1) Ignore any files outside the nested folder.\r\n2) Assuming there will be one level folder in the zip file.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 144822,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T12:55:29Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "ZIP next one level",
            "new_value": "ZIP FOLDER STRUCTURE: Upload zip file to QAC"
          }
        ]
      },
      {
        "id": 145000,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T18:56:24Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 145054,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-08T20:52:01Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "ZIP FOLDER STRUCTURE: Upload zip file to QAC",
            "new_value": "ZIP FOLDER STRUCTURE"
          }
        ]
      },
      {
        "id": 147605,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-16T19:02:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "2891"
          }
        ]
      },
      {
        "id": 147932,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-17T15:40:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 149214,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "Notes to help devs (THEY MAY BE OUT OF DATE OR COMPLETELY WRONG)\r\n\r\nHi Roy and Marc!!! Hopefully this is helpful :)\r\n\r\n1. These changes will be in the backend (python code)\r\n2. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n3. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n4. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n5. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n6. If you get lost, add debug points and step through the flow.",
        "created_on": "2019-04-23T18:06:28Z",
        "details": []
      },
      {
        "id": 149218,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:30:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\n\r\nNotes: \r\n1) Ignore any files outside the nested folder.\r\n2) Assuming there will be one level folder in the zip file.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles inside the folder\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\n\r\nNOTES:\r\nMultiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\nNotes: \r\n1) Ignore any files outside the nested folder.\r\n2) Assuming there will be one level folder in the zip file.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 149219,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:34:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles inside the folder\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\n\r\nNOTES:\r\nMultiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\nNotes: \r\n1) Ignore any files outside the nested folder.\r\n2) Assuming there will be one level folder in the zip file.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that '\r\n\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 149223,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-04-23T18:46:05Z",
        "details": [
          {
            "property": "attachment",
            "name": "4300",
            "new_value": "IMG_4140.JPG"
          }
        ]
      },
      {
        "id": 149417,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-04-24T13:27:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 149531,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-24T20:13:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that '\r\n\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that 'QAC was not know which folder to select. Please put shapefiles in a single folder.'\r\n\r\nAC#5\r\nIf there are shapefiles not nested in a folder\r\nThen QAC shall state that 'Please put shapefiles in a single folder.'\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 149536,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-24T20:52:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that 'QAC was not know which folder to select. Please put shapefiles in a single folder.'\r\n\r\nAC#5\r\nIf there are shapefiles not nested in a folder\r\nThen QAC shall state that 'Please put shapefiles in a single folder.'\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that 'Multiple folders are not acceptable.'\r\n\r\nAC#5\r\nIf there are shapefiles not nested in a folder\r\nThen QAC shall state that 'Please put shapefiles in a single folder.'\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 149614,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-25T14:11:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that 'Multiple folders are not acceptable.'\r\n\r\nAC#5\r\nIf there are shapefiles not nested in a folder\r\nThen QAC shall state that 'Please put shapefiles in a single folder.'\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for prechecks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for kers: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "new_value": "As a QAC user\r\nI want to upload a zip file to QAC\r\nSo that I can run the tool against that file\r\n\r\nGiven I have a zip file nested one level\r\nAnd the files in the folder are QAC-related \r\nWhen I upload a zip file to QAC\r\nThen the files should be uploaded to QAC\r\n\r\nAC#1:\r\nIf there are shapefiles outside of the folder with the same name\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#2:\r\nIf there are shapefiles outside of the folder with different names\r\nThen QAC shall only recognize those contained within the folder.\r\n\r\nAC#3:\r\nIf there are shapefiles nested in a folder contained by the shapefile folder\r\nThen QAC shall only recognize those contained within the outer folder.\r\n\r\nAC#4:\r\nIf there are shapefiles nested in two separate folders at the same level\r\nThen QAC shall state that 'Multiple folders are not acceptable.'\r\n\r\nAC#5\r\nIf there are shapefiles not nested in a folder\r\nThen QAC shall state that 'Please put shapefiles in a single folder.'\r\n\r\nAC#6\r\nIf there is an empty folder with no shapefiles\r\nThen QAC shall not continue (error out) and state that 'Please put shapefiles in the folder.'\r\n\r\nNotes: \r\n1. Ignore any files outside the nested folder.\r\n2. Assuming there will be one level folder in the zip file.\r\n\r\n3. These changes will be in the backend (python code)\r\n4. Make sure to add tests to precheck.feature and ker.feature. Use a test file with a nested structure. (You could probably make this yourself by unzipping one of the existing test zips and adding a nested folder)\r\n5. Current flow for pre-checks: prechecks() in api/precheck.py -> run_prechecks() in PrecheckEngine.py -> open_zip() in PrecheckEngine.py\r\n6. Current flow for KERs: check_kers() in api/ker.py -> ingest() in IngestionEngine.py -> shapefile_to_db() in IngestionEngine.py\r\n7. We currently use helper functions to unzip a zip and get shapefiles from a directory in IngestionEngineHelpers.py\r\n8. If you get lost, add debug points and step through the flow.\r\n\r\n9. Multiple folder capability will be required for Boundary/Edgematching to be accomplished.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      },
      {
        "id": 191451,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-10-23T14:02:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 192580,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:14:23Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193801,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-01T10:39:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 37950,
    "subject": "KER: VVTERR3WAY Single Feature Meeting 3 Specific Specifications (needs edit)",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 130742,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:40:33Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37949"
          }
        ]
      },
      {
        "id": 130745,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:41:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 130897,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T21:41:08Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37975"
          }
        ]
      },
      {
        "id": 130999,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-21T13:36:47Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135171,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T18:48:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR3WAY errors.\r\n\r\nGiven a data set without VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR3WAY errors\r\n\r\nNotes: \r\nIdentify (1) features with the same NFI and NFN attributes but with different NAM attributes, (2) features from different feature classes with identical NFI, NFN, and NAM, (3) point features from the same feature class with identical NFI, NFN, and NAM.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR3WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR3WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that meet the requirements described by all of the primary, secondary and tertiary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, each specification will be applied to a different feature.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for all three participants.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR3WAY errors.\r\n\r\nGiven a data set without VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR3WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify (1) features with the same NFI and NFN attributes but with different NAM attributes, (2) features from different feature classes with identical NFI, NFN, and NAM, (3) point features from the same feature class with identical NFI, NFN, and NAM.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR3WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR3WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that meet the requirements described by all of the primary, secondary and tertiary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, each specification will be applied to a different feature.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for all three participants.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 138134,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T20:44:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR3WAY errors.\r\n\r\nGiven a data set without VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR3WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify (1) features with the same NFI and NFN attributes but with different NAM attributes, (2) features from different feature classes with identical NFI, NFN, and NAM, (3) point features from the same feature class with identical NFI, NFN, and NAM.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR3WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR3WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that meet the requirements described by all of the primary, secondary and tertiary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, each specification will be applied to a different feature.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for all three participants.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR3WAY errors.\r\n\r\nGiven a data set without VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR3WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) features with the same NFI and NFN attributes but with different NAM attributes, (2) features from different feature classes with identical NFI, NFN, and NAM, (3) point features from the same feature class with identical NFI, NFN, and NAM.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR3WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR3WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that meet the requirements described by all of the primary, secondary and tertiary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, each specification will be applied to a different feature.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for all three participants.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 147242,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-15T19:28:50Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY)",
            "new_value": "KER: VVTERR3WAY Single Feature Meeting 3 Specific Specifications (needs edit)"
          }
        ]
      },
      {
        "id": 192633,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:55:41Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "940",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195404,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:24Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198533,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:24:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR3WAY errors.\r\n\r\nGiven a data set without VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR3WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) features with the same NFI and NFN attributes but with different NAM attributes, (2) features from different feature classes with identical NFI, NFN, and NAM, (3) point features from the same feature class with identical NFI, NFN, and NAM.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR3WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR3WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that meet the requirements described by all of the primary, secondary and tertiary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, each specification will be applied to a different feature.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for all three participants.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 3 Specific Specifications KER with report (VVTERR3WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR3WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR3WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR3WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) features with the same NFI and NFN attributes but with different NAM attributes, (2) features from different feature classes with identical NFI, NFN, and NAM, (3) point features from the same feature class with identical NFI, NFN, and NAM.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR3WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR3WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that meet the requirements described by all of the primary, secondary and tertiary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, each specification will be applied to a different feature.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for all three participants.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 204286,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:41:24Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204305,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:45:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  },
  {
    "id": 37949,
    "subject": "SPIKE! Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY)",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 130738,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:38:43Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37948"
          }
        ]
      },
      {
        "id": 130741,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:40:33Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37950"
          }
        ]
      },
      {
        "id": 130744,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:41:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.\r\n\r\nIn the above example, GAIT has identified instances of individual line Road features that have a specific combination of two attributes and assigned values.  This inspection instance was specified to use line Road features having attribute Road/Runway Surface Type (RST) with the value “Loose/Unpaved” as the primary participant.  The secondary participant was specified to be line Road features having attribute Weather Type Category (WTC) with the value “Fair/Dry Weather.”   GAIT applied these specifications identifying all individual line Road features that were designated as both “Unpaved” and “Fair/Dry Weather\".",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 131000,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-21T13:37:01Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 134254,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-01T19:21:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value.\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 135095,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T17:01:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n- Query needs to be written\r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 135270,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:50:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n- Query needs to be written\r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 137784,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T13:56:27Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY)",
            "new_value": "SPIKE! Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY)"
          }
        ]
      },
      {
        "id": 137998,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:52:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 143886,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:29:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 149484,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-24T15:54:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, (2) any feature with a populated VOI value and a sentinel HGT value, and, (3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify \r\n\r\n(1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any feature with a populated VOI value and a sentinel HGT value, and, \r\n\r\n\r\n\r\n(3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 151482,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger Delivered MGCP_VVTER2WAY_Test_1.zip 2019-05-02-1609\r\n\r\nSubsection breakdown:\r\n........Part....Good....Bad\r\n........1.......75991...6832\r\n........2.......220.....176\r\n........3.......2.......8\r\n________________________________________\r\n........Sum.....76213...7016",
        "created_on": "2019-05-02T21:11:01Z",
        "details": [
          {
            "property": "attachment",
            "name": "4366",
            "new_value": "MGCP45_VVTER2WAY_Test_1.zip"
          }
        ]
      },
      {
        "id": 192612,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:36:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192632,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:55:09Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195403,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198534,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:25:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify \r\n\r\n(1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any feature with a populated VOI value and a sentinel HGT value, and, \r\n\r\n\r\n\r\n(3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify \r\n\r\n(1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any feature with a populated VOI value and a sentinel HGT value, and, \r\n\r\n\r\n\r\n(3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 204287,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:42:15Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204304,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:45:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213719,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-02-05T17:57:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify \r\n\r\n(1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any feature with a populated VOI value and a sentinel HGT value, and, \r\n\r\n\r\n\r\n(3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting 2 Specific Specifications KER with report (VVTERR2WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR2WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR2WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR2WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify \r\n\r\n(1) violations of the \"\"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\"\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any feature with a populated VOI value and a sentinel HGT value, and, \r\n\r\n\r\n\r\n(3) any Sand Dune feature with a SDT != 'Unknown' and SDO != 'Not Applicable' ('-32765') or 'Unknown' ('-32767').\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR2WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR2WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify individual features that meet the requirements described by both the primary and secondary participant specifications. This use of the participant specifications is unlike that of any other GAIT inspections.  Typically, the specifications will be applied to different features.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications for both participants\r\n\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature.  Also, area feature cut-outs will not be considered by this inspection.;\r\n\r\n\r\n\r\nKER: \r\nVVTERR2WAY_1: 26 parts - completed ,  verify all attributes\r\nVVTERR2WAY_2: single : unwritten\r\nVVTERR2WAY_3: single: unwritten\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 37948,
    "subject": "SPIKE! Single Feature Meeting Specific Specification KER with report (VVTERR1WAY)",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 130735,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:36:17Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37947"
          }
        ]
      },
      {
        "id": 130737,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:38:43Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37949"
          }
        ]
      },
      {
        "id": 131001,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-21T13:37:35Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135094,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T17:01:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR1WAY errors\r\n\r\nNotes: \r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.\r\n\r\nGAIT can automatically generate an inspection specification file that can be used to identify any feature having a 3D vertex where the elevation value is greater than or equal to 46.0 m.  Unlike other automatically-generated inspection specification files where the inspection short name is part of the file name, this file is named “HGT_OVER_46m.txt”.  It can be loaded into GAIT to perform the associated inspection regardless of the schema used to create the project.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.\r\n\r\nGAIT can automatically generate an inspection specification file that can be used to identify any feature having a 3D vertex where the elevation value is greater than or equal to 46.0 m.  Unlike other automatically-generated inspection specification files where the inspection short name is part of the file name, this file is named “HGT_OVER_46m.txt”.  It can be loaded into GAIT to perform the associated inspection regardless of the schema used to create the project."
          }
        ]
      },
      {
        "id": 135271,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:51:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.\r\n\r\nGAIT can automatically generate an inspection specification file that can be used to identify any feature having a 3D vertex where the elevation value is greater than or equal to 46.0 m.  Unlike other automatically-generated inspection specification files where the inspection short name is part of the file name, this file is named “HGT_OVER_46m.txt”.  It can be loaded into GAIT to perform the associated inspection regardless of the schema used to create the project.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.\r\n\r\nGAIT can automatically generate an inspection specification file that can be used to identify any feature having a 3D vertex where the elevation value is greater than or equal to 46.0 m.  Unlike other automatically-generated inspection specification files where the inspection short name is part of the file name, this file is named “HGT_OVER_46m.txt”.  It can be loaded into GAIT to perform the associated inspection regardless of the schema used to create the project."
          }
        ]
      },
      {
        "id": 137783,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T13:56:02Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Single Feature Meeting Specific Specification KER with report (VVTERR1WAY)",
            "new_value": "SPIKE! Single Feature Meeting Specific Specification KER with report (VVTERR1WAY)"
          }
        ]
      },
      {
        "id": 137997,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:51:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.\r\n\r\nGAIT can automatically generate an inspection specification file that can be used to identify any feature having a 3D vertex where the elevation value is greater than or equal to 46.0 m.  Unlike other automatically-generated inspection specification files where the inspection short name is part of the file name, this file is named “HGT_OVER_46m.txt”.  It can be loaded into GAIT to perform the associated inspection regardless of the schema used to create the project.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 143885,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:29:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 148155,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-18T15:49:33Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "37947"
          }
        ]
      },
      {
        "id": 149483,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-24T15:50:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify (1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, (2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", (3) any area Soil Surface Region feature with SMC = \"Salt\", (4) any area Rock Formation feature with RKF = \"Pinnacle\", (5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, (6) features with TRS attributes that are not consistent with EG CR #165, (7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 173371,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "Subsection breakdown:\r\n        Part    Good    Bad\r\n        1       448     364\r\n        2       18      33\r\n        3       21      1\r\n        4       3       1\r\n        5       75991   6832\r\n        6       27590   83297\r\n        7       5       20\r\n________________________________________\r\n        Sum     104076  90548\r\n2019-08-09 - CW",
        "created_on": "2019-08-09T16:55:06Z",
        "details": [
          {
            "property": "attachment",
            "name": "4784",
            "new_value": "MGCP45_vvterr1way_Test1.zip"
          }
        ]
      },
      {
        "id": 192611,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:36:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192631,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:54:35Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195402,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198535,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:26:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 204288,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:42:31Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204303,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:45:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 209441,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-10T16:25:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211068,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-22T14:50:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211071,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-22T15:43:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211474,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-24T18:53:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 211477,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-24T18:55:51Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT,  (per Mary: this is now V7 of this spreadsheet that we should use.\r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 211735,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-27T19:18:56Z",
        "details": [
          {
            "property": "attachment",
            "name": "5484",
            "new_value": "TRS_Application_Table.xlsx"
          },
          {
            "property": "attachment",
            "name": "5485",
            "new_value": "TRS_Application_Table_README.docx"
          },
          {
            "property": "attachment",
            "name": "5486",
            "new_value": "MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx"
          },
          {
            "property": "attachment",
            "name": "5487",
            "new_value": "MGCP_NumericValueRange_V7_TRD4.xls"
          }
        ]
      },
      {
        "id": 213060,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T14:50:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 213117,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-03T16:07:50Z",
        "details": [
          {
            "property": "attachment",
            "name": "5602",
            "new_value": "QAC_8494701969312642319.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT,  (per Mary: this is now V7 of this spreadsheet that we should use.\r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT,  (per Mary: this is now V7 of this spreadsheet that we should use.\r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n*See attached .HTML file* for a set of notes regarding what has been done so far in this story. Current as of 3 Feb 2020.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection."
          }
        ]
      },
      {
        "id": 213133,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T16:22:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213718,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-02-05T17:52:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT,  (per Mary: this is now V7 of this spreadsheet that we should use.\r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n*See attached .HTML file* for a set of notes regarding what has been done so far in this story. Current as of 3 Feb 2020.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Single Feature Meeting Specific Specification KER with report (VVTERR1WAY) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing VVTERR1WAY errors.\r\n\r\nAC #2:\r\nGiven a data set without VVTERR1WAY errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no VVTERR1WAY errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n\r\nIdentify\r\n\r\n(1) violations of specifications in the \"MGCP_NumericValueRange_V5_TRD4.xls\" spreadsheet, distributed with GAIT,  (per Mary: this is now V7 of this spreadsheet that we should use.\r\n\r\n\r\n\r\n(2) any point Built-Up Area, Settlement, or Named Location feature with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \r\n\r\n\r\n\r\n(3) any area Soil Surface Region feature with SMC = \"Salt\", \r\n\r\n\r\n\r\n(4) any area Rock Formation feature with RKF = \"Pinnacle\", \r\n\r\n\r\n\r\n(5) violations of the \"MGCP_IllogicalAttributeEnumeration_V11_TRD4.xlsx\" document, distributed with GAIT, \r\n\r\n\r\n\r\n(6) features with TRS attributes that are not consistent with EG CR #165, \r\n\r\n\r\n\r\n(7) area tidal Water features with NAM = \"Unknown\", \"UNKNOWN\", \"UNK\", \"Unk\", \"unk\", \"Not Applicable\", \"NOT APPLICABLE\", \"N_A\", \"n_a\", \"NA\", or \"na\", \"Not Populated\", \"NP\", \"N_P\", \"n_p\", \"np\", \"NOT POPULATED\", \"Null\", \"N/A\", or \"NULL\".\r\n\r\n*See attached .HTML file* for a set of notes regarding what has been done so far in this story. Current as of 3 Feb 2020.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are VVTERR1WAY in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (VVTERR1WAY KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature to identify those individual features that simply meet the requirements described by the primary participant specifications. This use of the participant specifications is atypical of GAIT inspections.  Typically, the specifications are used to specify which features will have geometric relationships or other requirements applied.  As used here, the participant specifications function more like parameters to a query.  They instruct GAIT to identify single features that meet the specifications of the primary participant specifications.\r\n\r\nNote that only the first occurrence of a specific condition will be reported for each feature. Also, area feature cut-outs will not be considered by this inspection.\r\n\r\n\r\n\r\nKER:\r\nVVTERR1WAY_1: 102 Parts -  101 are written,  102 may be multipart\r\nVVTERR1WAY_2: single - unwritten\r\nVVTERR1WAY_3: single - f unwritten\r\nVVTERR1WAY_4: single -  unwritten\r\nVVTERR1WAY_5: multi parts - spreadsheet  - 3 completed\r\nVVTERR1WAY_6: multi parts- CR  -  unwritten\r\nVVTERR1WAY_7: single - unwritten\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 37947,
    "subject": "KER: COVERFAIL",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 130732,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:30:31Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37888"
          }
        ]
      },
      {
        "id": 130734,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:36:17Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37948"
          }
        ]
      },
      {
        "id": 131002,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-21T13:37:52Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135093,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T17:00:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no COVERFAIL errors\r\n\r\nNotes: \r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition.  Using 0.125 as the primary tolerance, but changing the secondary tolerance from 0.1 (default value) to 0.001 produces the report illustrated below.  These settings identify very small coordinate errors.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no COVERFAIL errors\r\n\r\nNotes: \r\n- Query needs to be written\r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition.  Using 0.125 as the primary tolerance, but changing the secondary tolerance from 0.1 (default value) to 0.001 produces the report illustrated below.  These settings identify very small coordinate errors."
          }
        ]
      },
      {
        "id": 135272,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:52:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no COVERFAIL errors\r\n\r\nNotes: \r\n- Query needs to be written\r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition.  Using 0.125 as the primary tolerance, but changing the secondary tolerance from 0.1 (default value) to 0.001 produces the report illustrated below.  These settings identify very small coordinate errors.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no COVERFAIL errors\r\n\r\nNotes: \r\n*- Query is in work*\r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition.  Using 0.125 as the primary tolerance, but changing the secondary tolerance from 0.1 (default value) to 0.001 produces the report illustrated below.  These settings identify very small coordinate errors."
          }
        ]
      },
      {
        "id": 137994,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:48:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no COVERFAIL errors\r\n\r\nNotes: \r\n*- Query is in work*\r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition.  Using 0.125 as the primary tolerance, but changing the secondary tolerance from 0.1 (default value) to 0.001 produces the report illustrated below.  These settings identify very small coordinate errors.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no COVERFAIL errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition."
          }
        ]
      },
      {
        "id": 143870,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:20:22Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "100% Area Coverage Failure KER with report (COVERFAIL)",
            "new_value": "KER:  COVERFAIL (needs edit)"
          }
        ]
      },
      {
        "id": 143871,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:20:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 148133,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-18T15:24:35Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  COVERFAIL (needs edit)",
            "new_value": "KER: COVERFAIL (needs edit)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 100% Area Coverage Failure KER with report (COVERFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing COVERFAIL errors.\r\n\r\nGiven a data set without COVERFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no COVERFAIL errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\nIdentify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- Given a data set and it's going to go through the KERs and tell you if there are COVERFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (COVERFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify locations that are covered either by zero or by more than one area features described by the primary participant specification (these are the “Land Cover” class features defined in the MGCP TRD).  Violations occur when either no specified area feature or more than one specified area feature covers some portion of the project area.  Examples of both these circumstances are illustrated above (the white area corresponds to part of the project that is not covered by any area feature and the brown area between the two red lines corresponds to a part of the project that is covered by more than one land cover area feature).\r\n\r\nGAIT identifies these conditions by first forming a set consisting of each edge of the specified area features; then, it matches pairs of edges in the set.  When an edge cannot be matched by only one other edge, either a hole or an overlap must exist.  After all possible matches have been made, GAIT gathers the unmatched and overmatched (more than one match) edges into connected groups and reports one condition for each connected group.  Another unique aspect of this inspection is that multiple features almost always contribute to a single condition, and there is no single feature that defines a hole or overlap. Thus, all exported edges in one condition contribute to the same problem, but there is no feature-unique information that can be associated with the condition (e.g., feature type, layer, etc.).  Also, at least one group of unmatched edges could always exist, corresponding to the feature edges defining the outside edges of the project.  GAIT attempts to suppress reporting these unmatched edges by referencing the primary and secondary tolerances that have been specified.\r\n\r\nThe default specifications for both the primary and secondary tolerances are tailored to inspections that would be applied to a standard-production 1-degree MGCP cell.  Both settings are used in the process of suppressing reports of conditions on the extreme boundaries of the project data.  The primary tolerance provides a method to specify the latitude and longitude of the outer edges of the project.  The primary tolerance is used to specify the cell size in increments of 0.125 degrees; the default setting of 1.0 indicates that the inspection should be tailored to whole degree cells.   Using this setting, any unmatched edge that overlaps a multiple of 1.0 degrees (e.g., whole degrees) in latitude or longitude will not be reported as a condition.  The secondary tolerance is used to define acceptable proximity to the latitudes and longitudes determined by the primary tolerance.  If any area feature perimeter edge is within the secondary tolerance (in meters) to a line of latitude or longitude defined by the primary tolerance, and that line of latitude or longitude is an outer edge of the project, then no 100% Area Coverage Failure condition will be reported based on that edge. \r\n \r\nThese tolerance specifications can be used to isolate small coordinate mismatches in production regions smaller than an entire 1-degree cell.  When the default tolerances are used, conditions will likely be reported all around the sub-degree cell extreme boundary, since no area feature edges are within 0.1 meters of a whole degree of latitude or longitude.  However, the tolerance specifications can be changed to better suit the production cell.  As an example, if data is being produced in 1/8 degree increments, the primary tolerance can be set to 0.125 to suppress condition reports around the 1/8 degree cell boundary.  In this case, no area feature edge within 0.1 meters of any multiple of 1/8 degree in latitude or longitude, that also defines an outer edge of the project data, will be reported as a condition.",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see ???? errors for the COVERFAIL ker, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n**Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n** For any features listed in the acceptance criteria, insert specific FID\r\n** Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 148151,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-18T15:49:15Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: COVERFAIL (needs edit)",
            "new_value": "KER: COVERFAIL "
          }
        ]
      },
      {
        "id": 148153,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-18T15:49:29Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "37888"
          }
        ]
      },
      {
        "id": 148154,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-18T15:49:33Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "37948"
          }
        ]
      },
      {
        "id": 148593,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-19T19:36:46Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: COVERFAIL ",
            "new_value": "KER: COVERFAIL (needs geobadger #)"
          }
        ]
      },
      {
        "id": 148853,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T20:23:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see ???? errors for the COVERFAIL ker, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n**Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n** For any features listed in the acceptance criteria, insert specific FID\r\n** Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see ???? errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n**Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n** For any features listed in the acceptance criteria, insert specific FID\r\n** Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 149564,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered MGCP45_COVERFAIL_Test_1.zip 2019-04-24-2052. There should be 66 errors.",
        "created_on": "2019-04-25T01:53:10Z",
        "details": [
          {
            "property": "attachment",
            "name": "4306",
            "new_value": "MGCP45_COVERFAIL_Test_1.zip"
          }
        ]
      },
      {
        "id": 149591,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-25T13:25:05Z",
        "details": [
          {
            "property": "attachment",
            "name": "4310",
            "new_value": "MGCP45_COVERFAIL_Test_1.zip"
          }
        ]
      },
      {
        "id": 149592,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-25T13:25:19Z",
        "details": [
          {
            "property": "attachment",
            "name": "4306",
            "old_value": "MGCP45_COVERFAIL_Test_1.zip"
          }
        ]
      },
      {
        "id": 150560,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-30T15:45:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see ???? errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n**Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n** For any features listed in the acceptance criteria, insert specific FID\r\n** Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n**Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n** For any features listed in the acceptance criteria, insert specific FID\r\n** Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 150978,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:29:42Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: COVERFAIL (needs geobadger #)",
            "new_value": "KER: COVERFAIL (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n**Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n** For any features listed in the acceptance criteria, insert specific FID\r\n** Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 150982,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:39:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\nGiven I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\nThen I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\n*Given* I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\n*Then* I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 161506,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T19:02:32Z",
        "details": [
          {
            "property": "attachment",
            "name": "4614",
            "new_value": "MGCP45_COVERFAIL_Test_1.zip"
          },
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: COVERFAIL (needs geobadger)",
            "new_value": "KER: COVERFAIL"
          }
        ]
      },
      {
        "id": 192610,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:33:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192630,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:54:08Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195401,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198536,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:27:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\n*Given* I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\n*Then* I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\n*Given* I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\n*Then* I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number,\r\nAND,\r\nThen the KER shall return shapefile(s) with location.\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 204289,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:42:47Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204302,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:45:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213709,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-02-05T16:55:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\n*Given* I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\n*Then* I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number,\r\nAND,\r\nThen the KER shall return shapefile(s) with location.\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set\r\n*I want* to run an inspection on COVERFAIL\r\n*So that* I am notified if COVERFAIL has any errors\r\n\r\nAC #1\r\n*Given* I have a data set with COVERFAIL errors\r\n*When* an Inspection is run on COVERFAIL\r\n*Then* I expect to see an error if there are any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n\r\nFor testing purposes:\r\nWe expect to see 66 errors for the COVERFAIL KER, as specified by Geobadger test data.\r\n\r\nAC #2\r\n*Given* I have a test dataset without errors\r\n*When* I run an inspection on COVERFAIL\r\n*Then* I expect to see 0 COVERFAIL errors in my output\r\n\r\nAC #3\r\n*Given* I am in the QAC app\r\n*When* I load a data set with COVERFAIL errors\r\n*Then* I see COVERFAIL displayed by its full name: “100% Area Coverage Failure”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number,\r\nAND,\r\nThen the KER shall return shapefile(s) with location.\r\n\r\nProduct notes:\r\n- Identify any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features.  Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- Specify the number of expected errors to get for testing for each KER part\r\n\r\n\r\nKER:\r\nKER unwritten\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 37888,
    "subject": "Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA)",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 130188,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-19T15:37:37Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37887"
          }
        ]
      },
      {
        "id": 130237,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-19T16:46:44Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 130731,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-20T15:30:31Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37947"
          }
        ]
      },
      {
        "id": 135092,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:59:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERLA errors\r\n\r\nNotes: \r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 135273,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:53:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 137782,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T13:55:24Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA)",
            "new_value": "SPIKE! Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA)"
          }
        ]
      },
      {
        "id": 137990,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:45:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 143884,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:29:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 148152,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-18T15:49:29Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "37947"
          }
        ]
      },
      {
        "id": 148744,
        "user": {
          "id": 2695,
          "name": "Black.Christopher.1402659340"
        },
        "notes": "GeoBadger data delivered via .io RocketChat",
        "created_on": "2019-04-22T15:54:07Z",
        "details": []
      },
      {
        "id": 149212,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:02:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify: (1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, (2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, (3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*29 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*39 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 149213,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:03:05Z",
        "details": [
          {
            "property": "attachment",
            "name": "4299",
            "new_value": "MGCP45_ANOCOVERLA_Test)91.zip"
          }
        ]
      },
      {
        "id": 161504,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Errors per part:\r\n\r\nThe part number is listed in the TXT field\r\n\r\nPart 1: 29\r\nPart 2: 39\r\nPart 3: 30\r\n\r\nSubsection breakdown:\r\n........Part....Good....Bad\r\n........1.......4.......2\r\n........2.......2.......2\r\n........3.......4.......2\r\n........4.......3.......3\r\n........5.......2.......2\r\n........6.......4.......2\r\n........7.......1.......1\r\n........8.......357.....1592\r\n........9.......2.......4\r\n........10......2.......2\r\n........11......6.......48\r\n........12......90......840\r\n........13......6.......84\r\n________________________________________\r\n........Sum.....483.....2584",
        "created_on": "2019-06-18T19:00:24Z",
        "details": []
      },
      {
        "id": 192609,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:32:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192629,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:53:35Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195400,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198537,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:28:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*29 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*39 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*29 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*39 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 204290,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:43:00Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204301,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:45:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 207494,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:39:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 209264,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T18:44:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*29 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*39 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*29 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*39 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 209483,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-10T19:51:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 209484,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-10T19:52:00Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE! Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA)",
            "new_value": "Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA)"
          }
        ]
      },
      {
        "id": 211283,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-24T14:29:07Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*29 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*39 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 211285,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-24T14:36:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n*30 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n-30 errors- getting new dataset, will need to determine number of errors\r\n\r\n*Remaining work for ANOCOVERLA* (as of 24 Jan 2020)\r\n\r\n• Update Part 3 SQL for proper distance measurements, if needed (see PLLPROXFAIL)\r\n• Refactor ‘unionMissingColumns’ code in the build_out_input_permutations method ker_wrapper.py. this code is very similar to the ‘union’ code in the same method.\r\n• Get additional test data for part 3 when layer A is filled (within tolerance) but not touching but another feature from the same layer\r\n> * This has already been requested via the geobadger channel in rocketchat\r\n• Once the additional data is requested, the final part of the SQL of part 3 will need to be updated to check for good cases from the previous bullet\r\n> * _NOTE_, if the data is significantly different from existing test data set, the expected number of conditions may change\r\n• _NOTE_: the expected number of conditions in the story are wrong. With the existing dataset, I would trust the expected number of conditions in the Behave tests. The story can be updated as needed. Of course, we need to make sure that the POs agree with the numbers that we came up with.\r\n\r\n\r\n\r\n+Existing Notes+\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 211390,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-24T17:48:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n-30 errors- getting new dataset, will need to determine number of errors\r\n\r\n*Remaining work for ANOCOVERLA* (as of 24 Jan 2020)\r\n\r\n• Update Part 3 SQL for proper distance measurements, if needed (see PLLPROXFAIL)\r\n• Refactor ‘unionMissingColumns’ code in the build_out_input_permutations method ker_wrapper.py. this code is very similar to the ‘union’ code in the same method.\r\n• Get additional test data for part 3 when layer A is filled (within tolerance) but not touching but another feature from the same layer\r\n> * This has already been requested via the geobadger channel in rocketchat\r\n• Once the additional data is requested, the final part of the SQL of part 3 will need to be updated to check for good cases from the previous bullet\r\n> * _NOTE_, if the data is significantly different from existing test data set, the expected number of conditions may change\r\n• _NOTE_: the expected number of conditions in the story are wrong. With the existing dataset, I would trust the expected number of conditions in the Behave tests. The story can be updated as needed. Of course, we need to make sure that the POs agree with the numbers that we came up with.\r\n\r\n\r\n\r\n+Existing Notes+\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n-30 errors- getting new dataset, will need to determine number of errors\r\n\r\n*Remaining work for ANOCOVERLA* (as of 24 Jan 2020)\r\n\r\n• Update Part 3 SQL for proper distance measurements, if needed (see PLLPROXFAIL)\r\n• Refactor ‘unionMissingColumns’ code in the build_out_input_permutations method ker_wrapper.py. this code is very similar to the ‘union’ code in the same method.\r\n• Get additional test data for part 3 when layer A is filled (within tolerance) but not touching but another feature from the same layer\r\n> * This has already been requested via the geobadger channel in rocketchat\r\n• Once the additional data is requested, the final part of the SQL of part 3 will need to be updated to check for good cases from the previous bullet\r\n> * _NOTE_, if the data is significantly different from existing test data set, the expected number of conditions may change\r\n• _NOTE_: the expected number of conditions in the story are wrong. With the existing dataset, I would trust the expected number of conditions in the Behave tests. The story can be updated as needed. Of course, we need to make sure that the POs agree with the numbers that we came up with.\r\n* +Finally+, cut a new story to get this KER moved into the DB\r\n\r\n\r\n+Existing Notes+\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 211391,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-24T17:49:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n-30 errors- getting new dataset, will need to determine number of errors\r\n\r\n*Remaining work for ANOCOVERLA* (as of 24 Jan 2020)\r\n\r\n• Update Part 3 SQL for proper distance measurements, if needed (see PLLPROXFAIL)\r\n• Refactor ‘unionMissingColumns’ code in the build_out_input_permutations method ker_wrapper.py. this code is very similar to the ‘union’ code in the same method.\r\n• Get additional test data for part 3 when layer A is filled (within tolerance) but not touching but another feature from the same layer\r\n> * This has already been requested via the geobadger channel in rocketchat\r\n• Once the additional data is requested, the final part of the SQL of part 3 will need to be updated to check for good cases from the previous bullet\r\n> * _NOTE_, if the data is significantly different from existing test data set, the expected number of conditions may change\r\n• _NOTE_: the expected number of conditions in the story are wrong. With the existing dataset, I would trust the expected number of conditions in the Behave tests. The story can be updated as needed. Of course, we need to make sure that the POs agree with the numbers that we came up with.\r\n* +Finally+, cut a new story to get this KER moved into the DB\r\n\r\n\r\n+Existing Notes+\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Edge Not Covered By Area Edge Or Line Segment KER with report (ANOCOVERLA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERLA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERLA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERLA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Island feature not 100% covered (surrounded) by area Island, Tidal Water, Void Collection Area, Aqueduct, or perennial area {Canal, Ditch, Lake, Reservoir, or River} features, \r\n*-29- 38 errors*\r\n\r\n(2) any area Tidal Water feature not covered (surrounded) by area Tidal Water, Training Wall, Breakwater, Berthing Structure, Void Collection Area, Canal, Ditch, River, Aqueduct, Lake, or Reservoir features or line Training Wall, Breakwater, Berthing Structure, Land Water Boundary, Seawall features, \r\n*-39- 52 errors*\r\n\r\n(3) any area Tidal Water or perennial River, Ditch, Lake, or Reservoir cut-out not filled with an area Island, Void Collection Area, or same-feature type feature (0.1m tolerances).\r\n-30 errors- getting new dataset, will need to determine number of errors\r\n\r\n*Remaining work for ANOCOVERLA* (as of 24 Jan 2020)\r\n\r\n• Update Part 3 SQL for proper distance measurements, if needed (see PLLPROXFAIL)\r\n• Refactor ‘unionMissingColumns’ code in the build_out_input_permutations method ker_wrapper.py. this code is very similar to the ‘union’ code in the same method.\r\n• Get additional test data for part 3 when layer A is filled (within tolerance) but not touching but another feature from the same layer\r\n> * This has already been requested via the geobadger channel in rocketchat\r\n• Once the additional data is requested, the final part of the SQL of part 3 will need to be updated to check for good cases from the previous bullet\r\n> * _NOTE_, if the data is significantly different from existing test data set, the expected number of conditions may change\r\n• _NOTE_: the expected number of conditions in the story are wrong. With the existing dataset, I would trust the expected number of conditions in the Behave tests. The story can be updated as needed. Of course, we need to make sure that the POs agree with the numbers that we came up with.\r\n• +Finally+, cut a new story to get this KER moved into the DB\r\n\r\n\r\n+Existing Notes+\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERLA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERLA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area feature outer rings (primary participant specification) or area feature inner rings (“cut-outs”, the secondary participant specification) that have perimeter edges which are not within the specified tolerance (distance in meters) to a second line feature or area feature perimeter (tertiary participant specification).\r\n\r\nIn this use, “covered by” indicates that the area feature perimeter segment and comparable portion of the tertiary participant feature have coordinates that are less than the specified (tolerance) distance apart.  This inspection can be applied to features of any dimension, but the distance calculations are always performed in 2D.  The distance tolerance can be set to zero.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 213674,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-05T14:32:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 213676,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-05T14:50:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 37887,
    "subject": "Area Not Covered by Area KER with report (ANOCOVERA)",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 130186,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-19T15:34:17Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37608"
          }
        ]
      },
      {
        "id": 130187,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-19T15:37:37Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37888"
          }
        ]
      },
      {
        "id": 130238,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-19T16:47:03Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 133088,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-27T18:35:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 135091,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:59:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 135275,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:54:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 137781,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T13:54:53Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Not Covered by Area KER with report (ANOCOVERA)",
            "new_value": "SPIKE! Area Not Covered by Area KER with report (ANOCOVERA)"
          }
        ]
      },
      {
        "id": 137988,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:44:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no ANOCOVERA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 143883,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:29:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 147390,
        "user": {
          "id": 2695,
          "name": "Black.Christopher.1402659340"
        },
        "notes": "Delivered GeoBadger Data in Rocket Chat\r\n",
        "created_on": "2019-04-16T13:40:39Z",
        "details": []
      },
      {
        "id": 148670,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T12:39:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\nIdentify: (1) any area Stopway feature that is not completely inside an area Aerodrome feature, (2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  (3) any area Rapids feature not completely inside an area River feature, (4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, (5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, (6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, (7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge, and, (8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Stopway feature that is not completely inside an area Aerodrome feature, \r\n*2 errors*\r\n\r\n(2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  \r\n*12 errors*\r\n\r\n(3) any area Rapids feature not completely inside an area River feature, \r\n*2 errors*\r\n\r\n(4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, \r\n*4 errors*\r\n\r\n(5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, \r\n*2 errors*\r\n\r\n(6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, \r\n*2 errors*\r\n\r\n(7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge,\r\n*2 errors*\r\n\r\n(8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n*2 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 148671,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-22T12:39:21Z",
        "details": [
          {
            "property": "attachment",
            "name": "4277",
            "new_value": "MGCP45_ANOCOVERA_Test_01.zip"
          }
        ]
      },
      {
        "id": 161505,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Errors per part:\r\n\r\nPart 1: 2\r\nPart 2: 12\r\nPart 3: 2\r\nPart 4: 4\r\nPart 5: 2\r\nPart 6: 2\r\npart 7: 2\r\npart 8: 2",
        "created_on": "2019-06-18T19:01:00Z",
        "details": []
      },
      {
        "id": 192608,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:32:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192628,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:53:12Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195399,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198538,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:28:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Stopway feature that is not completely inside an area Aerodrome feature, \r\n*2 errors*\r\n\r\n(2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  \r\n*12 errors*\r\n\r\n(3) any area Rapids feature not completely inside an area River feature, \r\n*2 errors*\r\n\r\n(4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, \r\n*4 errors*\r\n\r\n(5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, \r\n*2 errors*\r\n\r\n(6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, \r\n*2 errors*\r\n\r\n(7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge,\r\n*2 errors*\r\n\r\n(8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n*2 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Stopway feature that is not completely inside an area Aerodrome feature, \r\n*2 errors*\r\n\r\n(2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  \r\n*12 errors*\r\n\r\n(3) any area Rapids feature not completely inside an area River feature, \r\n*2 errors*\r\n\r\n(4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, \r\n*4 errors*\r\n\r\n(5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, \r\n*2 errors*\r\n\r\n(6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, \r\n*2 errors*\r\n\r\n(7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge,\r\n*2 errors*\r\n\r\n(8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n*2 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 204291,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:43:11Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204300,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:45:05Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 207493,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:39:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 209263,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T18:44:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Stopway feature that is not completely inside an area Aerodrome feature, \r\n*2 errors*\r\n\r\n(2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  \r\n*12 errors*\r\n\r\n(3) any area Rapids feature not completely inside an area River feature, \r\n*2 errors*\r\n\r\n(4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, \r\n*4 errors*\r\n\r\n(5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, \r\n*2 errors*\r\n\r\n(6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, \r\n*2 errors*\r\n\r\n(7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge,\r\n*2 errors*\r\n\r\n(8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n*2 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Covered by Area KER with report (ANOCOVERA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing ANOCOVERA errors.\r\n\r\nAC #2:\r\nGiven a data set without ANOCOVERA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no ANOCOVERA errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#4\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\nIdentify: \r\n(1) any area Stopway feature that is not completely inside an area Aerodrome feature, \r\n*2 errors*\r\n\r\n(2) any area Runway, Taxiway or Apron feature not completely inside an area Aerodrome or Heliport feature,  \r\n*12 errors*\r\n\r\n(3) any area Rapids feature not completely inside an area River feature, \r\n*2 errors*\r\n\r\n(4) any area Forest Clearing feature not completely inside an area Wood or Thicket feature, \r\n*4 errors*\r\n\r\n(5) any area Aqueduct with LOC = 'Above Surface' not completely inside an area Bridge, \r\n*2 errors*\r\n\r\n(6) any area Aqueduct with LOC = 'Below Ground Surface' not completely inside an area Tunnel, \r\n*2 errors*\r\n\r\n(7) any area Canal with LOC = 'Above Surface' not completely inside an area Bridge,\r\n*2 errors*\r\n\r\n(8) any area Canal with LOC = 'Below Ground Surface' not completely inside an area Tunnel\r\n*2 errors*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are ANOCOVERA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (ANOCOVERA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify area features (described by the primary participant specification) that are not fully contained (in 2D) by a single instance of a second area feature (described by the secondary participant specification).  This inspection can be applied to features of any dimension, but the containment determination is always made using 2D calculations.   Any point inside or along an edge of the primary participant that is not contained in a single instance of the secondary participant will result in a condition.  That is, if two or more area features satisfy the secondary participant requirements and together, as a group, they fully cover the primary participant area feature, GAIT will report a condition unless a single secondary participant, by itself, fully covers the primary participant.\r\n"
          }
        ]
      },
      {
        "id": 209335,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-09T19:46:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 209482,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-10T19:47:45Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE! Area Not Covered by Area KER with report (ANOCOVERA)",
            "new_value": "Area Not Covered by Area KER with report (ANOCOVERA)"
          }
        ]
      },
      {
        "id": 210223,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-16T14:33:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 212684,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-29T20:10:15Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "37608"
          }
        ]
      }
    ]
  },
  {
    "id": 37608,
    "subject": "SPIKE! Two Lines Overlap (Coincident Segments) KER with report (SHARESEG)",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 128880,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:29:41Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37605"
          }
        ]
      },
      {
        "id": 129019,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:35:30Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 130185,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-19T15:34:17Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37887"
          }
        ]
      },
      {
        "id": 135090,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:58:18Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no SHARESEG errors\r\n\r\nNotes: \r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no SHARESEG errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 135279,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:56:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no SHARESEG errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no SHARESEG errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 137780,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T13:54:09Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Two Lines Overlap (Coincident Segments) KER with report (SHARESEG)",
            "new_value": "SPIKE! Two Lines Overlap (Coincident Segments) KER with report (SHARESEG)"
          }
        ]
      },
      {
        "id": 137986,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:41:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no SHARESEG errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 143882,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:29:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 148935,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered test data 2019-04-22-1659\r\n\r\n<pre>\r\nSubsection breakdown:\r\n        Part    Good    Bad\r\n        1       4       2\r\n        2       2       2\r\n        3       4       2\r\n        4       3       3\r\n        5       2       2\r\n        6       4       2\r\n        7       1       1\r\n        8       357     1592\r\n        9       2       4\r\n        10      2       2\r\n        11      6       48\r\n        12      90      840\r\n        13      6       84\r\n________________________________________\r\n        Sum     483     2584\r\n</pre>",
        "created_on": "2019-04-22T21:59:34Z",
        "details": []
      },
      {
        "id": 148939,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "",
        "created_on": "2019-04-22T22:07:22Z",
        "details": [
          {
            "property": "attachment",
            "name": "4287",
            "new_value": "MGCP_45_SHARESEG_Test_01.zip"
          }
        ]
      },
      {
        "id": 149215,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:11:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n- Identify: (1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); (2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; (3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; (4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; (5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; (6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, (7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, (8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, (9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, (10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, (11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, (12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, (13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n\r\n\r\n- Identify: \r\n(1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); \r\n*2 errors*\r\n\r\n\r\n(2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; \r\n*2 errors*\r\n\r\n\r\n(3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; \r\n*3 errors*\r\n\r\n\r\n(5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, \r\n*2 errors*\r\n\r\n\r\n(7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, \r\n*1 error*\r\n\r\n\r\n(8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n*1592 errors*\r\n\r\n\r\n(9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, \r\n*4 errors*\r\n\r\n\r\n(10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, \r\n*2 errors*\r\n\r\n\r\n(11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, \r\n*48 errors*\r\n\r\n\r\n(12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, \r\n*840 errors*\r\n\r\n\r\n(13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n*84 errors*\r\n\r\n\r\n.Part....Good....Bad\r\nSum.....483.....2584\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 192607,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:31:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192627,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:52:45Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195393,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:20:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 199090,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T19:10:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n\r\n\r\n- Identify: \r\n(1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); \r\n*2 errors*\r\n\r\n\r\n(2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; \r\n*2 errors*\r\n\r\n\r\n(3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; \r\n*3 errors*\r\n\r\n\r\n(5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, \r\n*2 errors*\r\n\r\n\r\n(7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, \r\n*1 error*\r\n\r\n\r\n(8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n*1592 errors*\r\n\r\n\r\n(9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, \r\n*4 errors*\r\n\r\n\r\n(10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, \r\n*2 errors*\r\n\r\n\r\n(11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, \r\n*48 errors*\r\n\r\n\r\n(12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, \r\n*840 errors*\r\n\r\n\r\n(13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n*84 errors*\r\n\r\n\r\n.Part....Good....Bad\r\nSum.....483.....2584\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nAC #2:\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUIDs, Feature Names, FCODEs and location.\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n\r\n\r\n- Identify: \r\n(1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); \r\n*2 errors*\r\n\r\n\r\n(2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; \r\n*2 errors*\r\n\r\n\r\n(3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; \r\n*3 errors*\r\n\r\n\r\n(5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, \r\n*2 errors*\r\n\r\n\r\n(7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, \r\n*1 error*\r\n\r\n\r\n(8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n*1592 errors*\r\n\r\n\r\n(9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, \r\n*4 errors*\r\n\r\n\r\n(10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, \r\n*2 errors*\r\n\r\n\r\n(11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, \r\n*48 errors*\r\n\r\n\r\n(12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, \r\n*840 errors*\r\n\r\n\r\n(13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n*84 errors*\r\n\r\n\r\n.Part....Good....Bad\r\nSum.....483.....2584\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 204295,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:44:05Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204296,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:44:28Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 212682,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-29T20:10:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "37605"
          }
        ]
      },
      {
        "id": 212683,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-29T20:10:15Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "37887"
          }
        ]
      },
      {
        "id": 213708,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-02-05T16:54:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nAC #2:\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUIDs, Feature Names, FCODEs and location.\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n\r\n\r\n- Identify: \r\n(1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); \r\n*2 errors*\r\n\r\n\r\n(2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; \r\n*2 errors*\r\n\r\n\r\n(3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; \r\n*3 errors*\r\n\r\n\r\n(5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, \r\n*2 errors*\r\n\r\n\r\n(7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, \r\n*1 error*\r\n\r\n\r\n(8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n*1592 errors*\r\n\r\n\r\n(9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, \r\n*4 errors*\r\n\r\n\r\n(10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, \r\n*2 errors*\r\n\r\n\r\n(11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, \r\n*48 errors*\r\n\r\n\r\n(12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, \r\n*840 errors*\r\n\r\n\r\n(13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n*84 errors*\r\n\r\n\r\n.Part....Good....Bad\r\nSum.....483.....2584\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Two Lines Overlap (Coincident Segments) KER with report (SHARESEG) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nAC #1:\r\nGiven a data set with SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing SHARESEG errors.\r\n\r\nAC #2:\r\nGiven a data set without SHARESEG errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no SHARESEG errors\r\n\r\nAC #3:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUIDs, Feature Names, FCODEs and location.\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n\r\n\r\n- Identify: \r\n(1) any line Bridge feature coincident with a line Road or Cart Track feature where the Bridge feature has a WID less than the Road or Cart Track feature's WD1 value (only values between 0m and 900m are considered); \r\n*2 errors*\r\n\r\n\r\n(2) any line Bridge feature coincident with a Road or Cart Track feature where the Bridge feature and the Road or Cart Track feature have WD1 values between 0m and 900m but the values are not the same; \r\n*2 errors*\r\n\r\n\r\n(3) any line Road or Railway without LOC = 'Below Ground Surface' not inside an area Building coincident with a Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(4) any line Road, Railway, or Pipeline without LOC = 'Above Surface' coincident with a line Bridge feature; \r\n*3 errors*\r\n\r\n\r\n(5) any line Road or Cart Track feature with ACC = 'Accurate' coincident with a line Tunnel feature; \r\n*2 errors*\r\n\r\n\r\n(6) any line Cart Track or Trail feature without WTC = \"Fair-weather\" coincident with a line River feature but not coincident with a line Ford or Bridge feature, \r\n*2 errors*\r\n\r\n\r\n(7) any line Bridge feature that does not have FUN = \"Destroyed\" that is coincident with a line Road feature that has a different FUN than the line Bridge feature, \r\n*1 error*\r\n\r\n\r\n(8) all specifications in the \"MGCP_IllogicalSharedLines_V13_TRD4.xls\" spreadsheet, distributed with GAIT, \r\n*1592 errors*\r\n\r\n\r\n(9) any line Bridge feature coincident with a line Road or Cart Track feature where one of the features has WD1=-32767 and the other does not, \r\n*4 errors*\r\n\r\n\r\n(10) any line railway Bridge feature with WD1 not equal to the GAW a coincident line Railway or Railway Sidetrack feature, \r\n*2 errors*\r\n\r\n\r\n(11) any line Tunnel, Dam, Cut, Causeway Structure, Embankment, or Bridge with TRS = \"Not Applicable\" that overlaps a line Road, Railway, Railway Sidetrack, Cart Track, Trail, Aqueduct, Canal, or Pipeline feature, \r\n*48 errors*\r\n\r\n\r\n(12) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature without TRS= \"Other\" overlapping a carried feature that does not correspond to the assigned TRS, \r\n*840 errors*\r\n\r\n\r\n(13) any line Bridge, Causeway Structure, Tunnel, Dam, Embankment, or Cut feature with TRS= \"Other\" overlapping exactly one carried feature type.\r\n*84 errors*\r\n\r\n\r\n.Part....Good....Bad\r\nSum.....483.....2584\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are SHARESEG in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (SHARESEG KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\n\r\nKER:\r\nSQL statements unwritten\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 37605,
    "subject": "KER:  LLNONODEINT",
    "category": "KER team",
    "status": "In Progress",
    "journals": [
      {
        "id": 128877,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:18:06Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37576"
          }
        ]
      },
      {
        "id": 128879,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:29:41Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37608"
          }
        ]
      },
      {
        "id": 128902,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:41:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 129018,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:35:08Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135088,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:56:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 135284,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:58:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 137984,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:40:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LLNONODEINT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LLNONODEINT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 143847,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:54:37Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT)",
            "new_value": "KER:  LLNONODEINT (needs edit) (needs UTM converter)"
          }
        ]
      },
      {
        "id": 143850,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:55:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 145335,
        "user": {
          "id": 2695,
          "name": "Black.Christopher.1402659340"
        },
        "notes": "GeoBadger test data delivered via RocketChat 04/09/2019",
        "created_on": "2019-04-09T18:01:20Z",
        "details": []
      },
      {
        "id": 150798,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-30T21:07:19Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  LLNONODEINT (needs edit) (needs UTM converter)",
            "new_value": "KER:  LLNONODEINT (needs geobadger) (needs UTM converter)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LLNONODEINT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n-Identify <any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features. Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.>\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n¬¬\r\n\r\n\r\n====\r\nAs a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LLNONODEINT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 150801,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-30T21:10:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n-Identify <any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features. Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.>\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n¬¬\r\n\r\n\r\n====\r\nAs a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LLNONODEINT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LLNONODEINT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LLNONODEINT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\n====\r\nAs a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LLNONODEINT errors\r\n\r\nNotes: \r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n     To detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 150802,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-30T21:11:48Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  LLNONODEINT (needs geobadger) (needs UTM converter)",
            "new_value": "KER:  LLNONODEINT (needs geobadger) (needs UTM)"
          }
        ]
      },
      {
        "id": 150803,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-30T21:13:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\n====\r\nAs a Geospatial Data Analyst\r\nI want to run the Feature - Feature Intersection Not At Connecting Node KER with report (LLNONODEINT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LLNONODEINT errors.\r\n\r\nGiven a data set without LLNONODEINT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LLNONODEINT errors\r\n\r\nNotes: \r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n     To detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 150805,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-30T21:14:01Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "37576"
          }
        ]
      },
      {
        "id": 152200,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:17:07Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  LLNONODEINT (needs geobadger) (needs UTM)",
            "new_value": "KER:  LLNONODEINT (needs geobadger)"
          }
        ]
      },
      {
        "id": 161502,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Should fail 120 rows.",
        "created_on": "2019-06-18T18:55:35Z",
        "details": [
          {
            "property": "attachment",
            "name": "4613",
            "new_value": "MGCP45_LLNONODEINT_Test_1.zip"
          },
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  LLNONODEINT (needs geobadger)",
            "new_value": "KER:  LLNONODEINT"
          }
        ]
      },
      {
        "id": 192606,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:31:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192626,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:52:18Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195398,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198539,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:29:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 204292,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:43:26Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204299,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:44:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 207492,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:39:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 208366,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-07T16:06:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208367,
        "user": {
          "id": 1657,
          "name": "Pickens.Timothy.1260651192"
        },
        "notes": "",
        "created_on": "2020-01-07T16:06:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 209250,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T17:12:11Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\nAC#5\r\n*Given* a KER is currently running\r\n*When* I see the progress page within the web app\r\n*Then* I see the KER name with a short description from the master crosswalk document\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 209253,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T17:16:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\nAC#5\r\n*Given* a KER is currently running\r\n*When* I see the progress page within the web app\r\n*Then* I see the KER name with a short description from the master crosswalk document\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LLNONODEINT\r\n*So that* I am notified if LLNONODEINT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see an error if any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LLNONODEINT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LLNONODEINT errors\r\n*When* I run an inspection on LLNONODEINT\r\n*Then* I expect to see 0 LLNONODEINT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LLNONODEINT errors\r\n*Then* I see LLNONODEINT displayed by its full name: “Feature Intersection Not At Connecting Node”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Names, and FCODEs,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUIDs, Feature Names, FCODEs and location.\r\n\r\nAC#5\r\n*Given* a KER is currently running\r\n*When* I see the progress page within the web app\r\n*Then* I see the KER name with a short description from the master crosswalk document\r\n\r\nProduct notes:\r\n\r\n*- Query is in GitLab. May be partial query. This is flagged as \"in-progress\" in GitLab.*\r\n\r\n- Identify any feature intersecting any other feature at a location where both features do not have a vertex (excludes line Cableway, Communication Line, Pipeline, Power Line, and Tunnel features). Tolerance = 0.1m.\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 210129,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2020-01-15T20:23:56Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 212681,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-29T20:10:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "37608"
          }
        ]
      },
      {
        "id": 213218,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:50:26Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "old_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1228",
            "new_value": "944"
          }
        ]
      },
      {
        "id": 213422,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-04T14:56:45Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "944",
            "new_value": "1228"
          }
        ]
      }
    ]
  },
  {
    "id": 37576,
    "subject": "KER: AREAKINK",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 128630,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:57:24Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37574"
          }
        ]
      },
      {
        "id": 128684,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:37:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 128746,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:53:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128874,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:11:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 128876,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:18:06Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37605"
          }
        ]
      },
      {
        "id": 128901,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:40:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 129017,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:34:47Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135087,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:56:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 135291,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:00:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 137982,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:37:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AREAKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 142846,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered MGCP45_AREAKINK_Test1.zip on 2019-04-01-0833 - Chris W",
        "created_on": "2019-04-01T13:33:33Z",
        "details": [
          {
            "property": "attachment",
            "name": "4135",
            "new_value": "MGCP45_AREAKINK_Test_1.zip"
          }
        ]
      },
      {
        "id": 143818,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:59:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143820,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:00:06Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Kink / Kickback KER with report (AREAKINK)",
            "new_value": "KER: AREAKINK"
          }
        ]
      },
      {
        "id": 150804,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-30T21:14:01Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "37605"
          }
        ]
      },
      {
        "id": 152195,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:13:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Kink / Kickback (AREAKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AREAKINK errors.\r\n\r\nGiven a data set without AREAKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AREAKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *XXX* errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 152196,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:13:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *XXX* errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 192601,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:30:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192625,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:51:55Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195397,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198540,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:30:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n"
          }
        ]
      },
      {
        "id": 204293,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:43:38Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204298,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:44:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213486,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-04T16:43:43Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n*From GAIT26:* \r\nThis inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\nAREAKINK:\r\nSubsection breakdown:\r\nPart.......Good.......Bad.....Total\r\n_________________________\r\n...1..........1.........1.........2\r\n_________________________\r\n.Sum..........1.........1.........2"
          }
        ]
      },
      {
        "id": 213707,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-02-05T16:49:19Z",
        "details": [
          {
            "property": "attachment",
            "name": "5608",
            "new_value": "areakink.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n*From GAIT26:* \r\nThis inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\nAREAKINK:\r\nSubsection breakdown:\r\nPart.......Good.......Bad.....Total\r\n_________________________\r\n...1..........1.........1.........2\r\n_________________________\r\n.Sum..........1.........1.........2",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAKINK\r\n*So that* I am notified if AREAKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see an error if any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 128 errors for the AREAKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAKINK errors\r\n*When* I run an inspection on AREAKINK\r\n*Then* I expect to see 0 AREAKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAKINK errors\r\n*Then* I see AREAKINK displayed by its full name: Area Kink / Kickback \r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature containing consecutive perimeter segments forming an angle >= 175 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n*From GAIT26:* \r\nThis inspection can be applied to any area feature to identify those cases where the feature (described by the primary participant specification) has a portion of its perimeter that forms a kink or kickback, as determined by applying an angular criterion.  GAIT will skip over consecutive, duplicate vertices when applying this inspection.  Consecutive duplicate vertices are considered another type of condition (Duplicate Vertices) and inappropriate for use in this test.\r\n\r\nTo detect these conditions, GAIT measures the angle between consecutive segments along the perimeter of area features (in 2D).  A condition is reported when the angle equals or exceeds the specified tolerance. This inspection can be configured to ignore conditions on the extreme boundaries of a project.  See an earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\nAREAKINK:\r\nSubsection breakdown:\r\nPart.......Good.......Bad.....Total\r\n_________________________\r\n...1..........1.........1.........2\r\n_________________________\r\n.Sum..........1.........1.........2\r\n\r\n\r\n\r\nKER:\r\nno dependencies\r\nno known issues\r\n\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 37574,
    "subject": "KER: LOOPS",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 128625,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:54:55Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37573"
          }
        ]
      },
      {
        "id": 128629,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:57:24Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37576"
          }
        ]
      },
      {
        "id": 128683,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:36:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 128743,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:52:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128873,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:10:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 128900,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:40:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 129016,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:34:26Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135084,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:55:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 135294,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:01:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 137978,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:34:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LOOPS errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LOOPS errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 142836,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:00:04Z",
        "details": [
          {
            "property": "attachment",
            "name": "4129",
            "new_value": "MGCP45_LOOPS_Test_Data_1.zip"
          }
        ]
      },
      {
        "id": 143809,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:56:01Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Loop (Self-intersecting Area Or Line Feature) KER with report (LOOPS)",
            "new_value": "KER: LOOPS"
          }
        ]
      },
      {
        "id": 143810,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:56:14Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LOOPS",
            "new_value": "KER: LOOPS - needs edit"
          }
        ]
      },
      {
        "id": 143811,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:56:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143839,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:51:06Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LOOPS - needs edit",
            "new_value": "KER: LOOPS - (needs edit)"
          }
        ]
      },
      {
        "id": 152190,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T16:16:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Loop (Self-intersecting Area Or Line Feature) (LOOPS) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing LOOPS errors.\r\n\r\nGiven a data set without LOOPS errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no LOOPS errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LOOPS in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LOOPS KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LOOPS\r\n*So that* I am notified if LOOPS has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see an error if any self-intersecting area or line feature (except line Racetrack features).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LOOPS KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see 0 LOOPS errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LOOPS errors\r\n*Then* I see LOOPS displayed by its full name: Loop (Self-intersecting Area Or Line Feature)\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 152191,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T16:17:46Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LOOPS - (needs edit)",
            "new_value": "KER: LOOPS - (needs geobadger)"
          }
        ]
      },
      {
        "id": 152192,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T16:17:56Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LOOPS - (needs geobadger)",
            "new_value": "KER: LOOPS (needs geobadger)"
          }
        ]
      },
      {
        "id": 161501,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:54:22Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LOOPS (needs geobadger)",
            "new_value": "KER: LOOPS"
          }
        ]
      },
      {
        "id": 192604,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:30:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192619,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:48:07Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1209"
          }
        ]
      },
      {
        "id": 195396,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:21:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 198541,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T17:31:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LOOPS\r\n*So that* I am notified if LOOPS has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see an error if any self-intersecting area or line feature (except line Racetrack features).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LOOPS KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see 0 LOOPS errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LOOPS errors\r\n*Then* I see LOOPS displayed by its full name: Loop (Self-intersecting Area Or Line Feature)\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LOOPS\r\n*So that* I am notified if LOOPS has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see an error if any self-intersecting area or line feature (except line Racetrack features).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LOOPS KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see 0 LOOPS errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LOOPS errors\r\n*Then* I see LOOPS displayed by its full name: Loop (Self-intersecting Area Or Line Feature)\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 204294,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:43:54Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1209",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204297,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:44:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 207495,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:40:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 208332,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2020-01-07T14:43:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 209265,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-09T18:44:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LOOPS\r\n*So that* I am notified if LOOPS has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see an error if any self-intersecting area or line feature (except line Racetrack features).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LOOPS KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see 0 LOOPS errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LOOPS errors\r\n*Then* I see LOOPS displayed by its full name: Loop (Self-intersecting Area Or Line Feature)\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LOOPS\r\n*So that* I am notified if LOOPS has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see an error if any self-intersecting area or line feature (except line Racetrack features).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LOOPS KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without LOOPS errors\r\n*When* I run an inspection on LOOPS\r\n*Then* I expect to see 0 LOOPS errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LOOPS errors\r\n*Then* I see LOOPS displayed by its full name: Loop (Self-intersecting Area Or Line Feature)\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nAC#5\r\nGiven a KER is currently running\r\nWhen I see the progress page within the web app\r\nThen I see the KER name with a short description from the master crosswalk document\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any self-intersecting area or line feature (except line Racetrack features).\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line or area feature to identify those cases where the feature (described by the primary participant specification) forms a loop by intersecting itself.  The test for self-intersection excludes possible intersections that involve the first and last vertices (end nodes) of both line and area features.  This implies that line features having either a first or last (or both) vertex that is coincident with another vertex or segment on that feature will NOT be reported by this inspection.  The related inspection Line Feature Loop (any type) will report all types of line feature loops including those involving either terminal vertex. This inspection can be applied to both 2D and 3D features, but the intersection calculation will always be made in 2D.  Note that GAIT will only report one loop condition per feature regardless of the number of loops contained in the feature.\r\n"
          }
        ]
      },
      {
        "id": 210222,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-16T14:30:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 37573,
    "subject": "KER: KICKBACK",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 128623,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:52:15Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37572"
          }
        ]
      },
      {
        "id": 128624,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:54:55Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37574"
          }
        ]
      },
      {
        "id": 128681,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:35:23Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Kickback KER with report",
            "new_value": "Line Kickback KER with report (KICKBACK)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 128740,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:51:34Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128872,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:10:26Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 128899,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:39:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 129014,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:34:06Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135083,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:55:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 135298,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:02:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 137976,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:33:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KICKBACK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no KICKBACK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 142792,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered MGCP45_KICKBACK_Test_1 - 2019-03-29-1822 - Chris W",
        "created_on": "2019-03-29T23:22:27Z",
        "details": [
          {
            "property": "attachment",
            "name": "4127",
            "new_value": "MGCP45_KICKBACK_Test_1.zip"
          }
        ]
      },
      {
        "id": 142810,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "MGCP45_LOOPS_Test_Data_1.zip uploaded 2019-03-30-1719 - Chris W",
        "created_on": "2019-03-30T22:19:18Z",
        "details": [
          {
            "property": "attachment",
            "name": "4128",
            "new_value": "MGCP45_LOOPS_Test_Data_1.zip"
          }
        ]
      },
      {
        "id": 143774,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:33:01Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Kickback KER with report (KICKBACK)",
            "new_value": "KER: KICKBACK (need to edit)"
          }
        ]
      },
      {
        "id": 143807,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:55:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143841,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:51:50Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: KICKBACK (need to edit)",
            "new_value": "KER: KICKBACK (need edit)"
          }
        ]
      },
      {
        "id": 147230,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-15T18:54:05Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: KICKBACK (need edit)",
            "new_value": "KER: KICKBACK (needs edit)"
          }
        ]
      },
      {
        "id": 151428,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T18:06:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kickback (KICKBACK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing KICKBACK errors.\r\n\r\nGiven a data set without KICKBACK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no KICKBACK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KICKBACK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KICKBACK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\n\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 151429,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T18:06:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 151430,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T18:07:18Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: KICKBACK (needs edit)",
            "new_value": "KER: KICKBACK (needs geobadger)"
          }
        ]
      },
      {
        "id": 161500,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:53:44Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: KICKBACK (needs geobadger)",
            "new_value": "KER: KICKBACK"
          }
        ]
      },
      {
        "id": 192603,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:30:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192620,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:48:35Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192765,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:34:59Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194868,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:58:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195459,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197972,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:15:10Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198465,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:50:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n"
          }
        ]
      },
      {
        "id": 199625,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:13:24Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 211756,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:16:45Z",
        "details": [
          {
            "property": "attachment",
            "name": "5497",
            "new_value": "kickback.zip"
          }
        ]
      },
      {
        "id": 212677,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-29T20:07:57Z",
        "details": [
          {
            "property": "attachment",
            "name": "5580",
            "new_value": "kickback.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KICKBACK\r\n*So that* I am notified if KICKBACK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see an error if identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KICKBACK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KICKBACK errors\r\n*When* I run an inspection on KICKBACK\r\n*Then* I expect to see 0 KICKBACK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KICKBACK errors\r\n*Then* I see KICKBACK displayed by its full name: <“Line Kickback”>\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature where consecutive line segments form an angle of 180 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (as described by the primary participant specification) forms a kickback (180° kink condition) along its own length. GAIT recognizes kickback conditions as Line Kink (Single Feature) conditions that have a magnitude of 180°; thus, there is no user-specified tolerance for the Kickback inspection.\r\nDuplicated features will not cause reports of kickbacks, even though they do form one kind of instance of this condition.  That is, when two features have overlapping segments, they could be seen as forming a kickback.  These kinds of constructions can be identified by applying the inspection Two Lines Overlap (Coincident Segments). \r\n\r\nKER:\r\nno dependencies\r\nno known issues\r\n"
          }
        ]
      }
    ]
  },
  {
    "id": 37572,
    "subject": "KER: CONTEXT_KINK",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 128621,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:48:07Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37571"
          }
        ]
      },
      {
        "id": 128622,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:52:15Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37573"
          }
        ]
      },
      {
        "id": 128680,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:33:27Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Feature Join Kink KER with report",
            "new_value": "Line Feature Join Kink KER with report (CONTEXT_KINK)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128735,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:50:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128871,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:09:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128898,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:38:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 129013,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:33:45Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135082,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:53:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 135299,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:03:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 137969,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:25:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 143805,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:54:48Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Feature Join Kink KER with report (CONTEXT_KINK)",
            "new_value": "KER: CONTEXT_KINK"
          }
        ]
      },
      {
        "id": 143806,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:54:59Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: CONTEXT_KINK",
            "new_value": "KER: CONTEXT_KINK - needs edit"
          }
        ]
      },
      {
        "id": 143808,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:55:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143840,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:51:29Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: CONTEXT_KINK - needs edit",
            "new_value": "KER: CONTEXT_KINK - (needs edit)"
          }
        ]
      },
      {
        "id": 152131,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T14:33:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature Join Kink (CONTEXT_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing CONTEXT_KINK errors.\r\n\r\nGiven a data set without CONTEXT_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no CONTEXT_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CONTEXT_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CONTEXT_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process."
          }
        ]
      },
      {
        "id": 152132,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T14:34:02Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: CONTEXT_KINK - (needs edit)",
            "new_value": "KER: CONTEXT_KINK (needs geobadger)"
          }
        ]
      },
      {
        "id": 152133,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T14:34:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process."
          }
        ]
      },
      {
        "id": 161499,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Should fail 60 rows.",
        "created_on": "2019-06-18T18:52:50Z",
        "details": [
          {
            "property": "attachment",
            "name": "4612",
            "new_value": "MGCP45_CONTEXT_KINK_Test_01.zip"
          },
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: CONTEXT_KINK (needs geobadger)",
            "new_value": "KER: CONTEXT_KINK"
          }
        ]
      },
      {
        "id": 192602,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:30:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192624,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:50:59Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192764,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:34:41Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194867,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:58:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195455,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197970,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:14:56Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198461,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:48:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process."
          }
        ]
      },
      {
        "id": 199624,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:13:05Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 211755,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:16:27Z",
        "details": [
          {
            "property": "attachment",
            "name": "5496",
            "new_value": "context_kink.zip"
          }
        ]
      },
      {
        "id": 212653,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-29T19:57:25Z",
        "details": [
          {
            "property": "attachment",
            "name": "5579",
            "new_value": "context_kink.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CONTEXT_KINK\r\n*So that* I am notified if CONTEXT_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see an error if any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CONTEXT_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CONTEXT_KINK errors\r\n*When* I run an inspection on CONTEXT_KINK\r\n*Then* I expect to see 0 CONTEXT_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CONTEXT_KINK errors\r\n*Then* I see CONTEXT_KINK displayed by its full name: Line Feature Join Kink\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any pair of joined line features other than Cableway, Communication Line, and Power Line of same feature type where the joined line segments form an angle >= 160 degrees and < 178 degrees, and there is a preceding or following angle > 45 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line features to identify those cases where the feature (described by the primary participant specification) forms a kink when it intersects with (connects to) another line feature (also described by the primary participant specification).  Also, one of the features must have two segments immediately preceding the segment participating in forming the kink and these two segments form an angle >= 45.0°.  The primary and secondary tolerances are angular measures (specified in degrees) that define a range for the kink itself (the tolerances do not influence the 45.0° heading change requirement).  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n\r\nKER :\r\nno dependencies\r\nno known issues"
          }
        ]
      }
    ]
  },
  {
    "id": 37571,
    "subject": "KER: INTERNALKINK",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 128616,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:45:42Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37570"
          }
        ]
      },
      {
        "id": 128620,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:48:07Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37572"
          }
        ]
      },
      {
        "id": 128677,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:31:01Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Kink (Single Feature) KER with report",
            "new_value": "Line Kink (Single Feature) KER with report (INTERNALKINK)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature)  (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128729,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:49:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128870,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:09:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128897,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:38:22Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 129012,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:33:26Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135079,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:53:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 135300,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:04:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 137964,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:12:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no INTERNALKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no INTERNALKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 138697,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-18T18:03:09Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 142479,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered data 2019-03-28-1356",
        "created_on": "2019-03-28T18:56:59Z",
        "details": []
      },
      {
        "id": 142505,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-03-28T20:17:44Z",
        "details": [
          {
            "property": "attachment",
            "name": "4112",
            "new_value": "MGCP45_INTERNAL_KINK_Test1.zip"
          }
        ]
      },
      {
        "id": 143792,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:45:08Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Kink (Single Feature) KER with report (INTERNALKINK)",
            "new_value": "KER: INTERNALKINK"
          }
        ]
      },
      {
        "id": 143793,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:45:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143794,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:45:58Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: INTERNALKINK",
            "new_value": "KER: INTERNALKINK (needs edit)"
          }
        ]
      },
      {
        "id": 152084,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T13:31:37Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: INTERNALKINK (needs edit)",
            "new_value": "KER: INTERNALKINK (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no INTERNALKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\nGiven I have a test data set without <LBNDUSHT> errors\r\nWhen I run an inspection on <LBNDUSHT>\r\nThen I expect to see 0 <LBNDUSHT> errors in my output\r\n\r\nAC #3:\r\nGiven I am in the QAC app\r\nWhen I load a data set with <LBNDUSHT> errors\r\nThen I see <LBNDUSHT> displayed by its full name: <“Line Boundary Undershoot”>\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n-Identify <any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features. Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.>\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n==============\r\nAs a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no INTERNALKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 152085,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T13:39:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\nGiven I have a test data set without <LBNDUSHT> errors\r\nWhen I run an inspection on <LBNDUSHT>\r\nThen I expect to see 0 <LBNDUSHT> errors in my output\r\n\r\nAC #3:\r\nGiven I am in the QAC app\r\nWhen I load a data set with <LBNDUSHT> errors\r\nThen I see <LBNDUSHT> displayed by its full name: <“Line Boundary Undershoot”>\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n-Identify <any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features. Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.>\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n==============\r\nAs a Geospatial Data Analyst\r\nI want to run the Line Kink (Single Feature) (INTERNALKINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing INTERNALKINK errors.\r\n\r\nGiven a data set without INTERNALKINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no INTERNALKINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are INTERNALKINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (INTERNALKINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process."
          }
        ]
      },
      {
        "id": 152086,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T13:40:42Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: INTERNALKINK (needs geobadger)",
            "new_value": "KER: INTERNALKINK"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 9 errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process."
          }
        ]
      },
      {
        "id": 179920,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-09-04T17:51:19Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731",
            "new_value": "3547"
          }
        ]
      },
      {
        "id": 192600,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:29:52Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192623,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:49:53Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192763,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:34:23Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194866,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:58:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195454,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:13Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197969,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:14:38Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "3547"
          }
        ]
      },
      {
        "id": 198460,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:48:02Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 9 errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 9 errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process."
          }
        ]
      },
      {
        "id": 199623,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:12:50Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 211754,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:16:14Z",
        "details": [
          {
            "property": "attachment",
            "name": "5495",
            "new_value": "internalkink.zip"
          }
        ]
      },
      {
        "id": 212629,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-29T19:34:57Z",
        "details": [
          {
            "property": "attachment",
            "name": "5578",
            "new_value": "internalkink.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 9 errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on INTERNALKINK\r\n*So that* I am notified if INTERNALKINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see an error if any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see 9 errors for the INTERNALKINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without INTERNALKINK errors\r\n*When* I run an inspection on INTERNALKINK\r\n*Then* I expect to see 0 INTERNALKINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with INTERNALKINK errors\r\n*Then* I see INTERNALKINK displayed by its full name: “Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature feature containing consecutive segments that form an angle that is >= 165 degrees and < 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) includes a kink along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, ‘Z’ Shaped Line Kink and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n\r\nKER Notes:\r\nno dependenencies\r\nno known issues"
          }
        ]
      }
    ]
  },
  {
    "id": 37570,
    "subject": " KER: Z_KINK",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 128614,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:42:03Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37568"
          }
        ]
      },
      {
        "id": 128615,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:45:42Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37571"
          }
        ]
      },
      {
        "id": 128674,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:29:03Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "'Z' shaped Line Kink KER with report",
            "new_value": "'Z' shaped Line Kink KER with report (Z_KINK)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128726,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:48:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128869,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:08:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128896,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:37:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 129011,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:33:06Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135077,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:52:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 135301,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:06:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 137859,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T15:53:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no Z_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no Z_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 138695,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-18T17:57:50Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 141897,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "MGCP45_Z_Kink_Test_1 GeoBadger data delivered 2019-03-26-1647 - Chris W",
        "created_on": "2019-03-26T21:47:53Z",
        "details": []
      },
      {
        "id": 141977,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-27T12:33:25Z",
        "details": [
          {
            "property": "attachment",
            "name": "4088",
            "new_value": "MGCP45_Z_KINK_Test_1.zip"
          }
        ]
      },
      {
        "id": 142791,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "MGCP45_Z_Kink_Test_2 GeoBadger Data delivered 2019-03-29-1729 - Chris W. Please run both sets of data through this test.",
        "created_on": "2019-03-29T22:30:09Z",
        "details": [
          {
            "property": "attachment",
            "name": "4126",
            "new_value": "MGCP45_Z_KINK_Test_2.zip"
          }
        ]
      },
      {
        "id": 143785,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:41:10Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "'Z' shaped Line Kink KER with report (Z_KINK)",
            "new_value": " KER: (Z_KINK (needs edit)"
          }
        ]
      },
      {
        "id": 143786,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:41:20Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: (Z_KINK (needs edit)",
            "new_value": " KER: Z_KINK (needs edit)"
          }
        ]
      },
      {
        "id": 143787,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:41:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 151322,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T14:20:32Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no Z_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: <“Line Boundary Undershoot”>\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n-Identify <any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features. Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.>\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n============\r\nAs a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no Z_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 151325,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T14:26:33Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: Z_KINK (needs edit)",
            "new_value": " KER: Z_KINK (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: <“Line Boundary Undershoot”>\r\n\r\nProduct notes:\r\n[extract KER definition from notes of old ticket AND GAIT specifics. Then delete rest of notes of old ticket]\r\n-Identify <any edges of Landcover Area Features that are not covered by exactly one edge of other Landcover Area Features. Edges that are closer than 0.1m to the closest whole degree line to the project boundary are not reported.>\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n============\r\nAs a Geospatial Data Analyst\r\nI want to run the 'Z' shaped Line Kink (Z_KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing Z_KINK errors.\r\n\r\nGiven a data set without Z_KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no Z_KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- Given a data set and it's going to go through the KERs and tell you if there are Z_KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (Z_KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here.)\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: “'Z' shaped Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- For any features listed in the acceptance criteria, insert specific FID.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here).\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 161498,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:50:59Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: Z_KINK (needs geobadger)",
            "new_value": " KER: Z_KINK"
          }
        ]
      },
      {
        "id": 192597,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:25:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192622,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:49:34Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192762,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:34:06Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194865,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:58:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195453,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:07Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197968,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:14:20Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198457,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:45:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: “'Z' shaped Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- For any features listed in the acceptance criteria, insert specific FID.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here).\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: “'Z' shaped Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- For any features listed in the acceptance criteria, insert specific FID.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here).\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 199622,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:12:34Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 211753,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:16:00Z",
        "details": [
          {
            "property": "attachment",
            "name": "5494",
            "new_value": "z_kink.zip"
          }
        ]
      },
      {
        "id": 212510,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-29T16:55:16Z",
        "details": [
          {
            "property": "attachment",
            "name": "5564",
            "new_value": "z_kink.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: “'Z' shaped Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- For any features listed in the acceptance criteria, insert specific FID.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here).\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on Z_KINK\r\n*So that* I am notified if Z_KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the Z_KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without Z_KINK errors\r\n*When* I run an inspection on Z_KINK\r\n*Then* I expect to see 0 Z_KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with Z_KINK errors\r\n*Then* I see Z_KINK displayed by its full name: “'Z' shaped Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where three consecutive segments form two angles that are >= 135 degrees and < 160 degrees. The value of the larger angle is reported as the magnitude of the condition.\r\n- For any features listed in the acceptance criteria, insert specific FID.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a ‘Z’ shaped kink when it connects to (end node coincidence) another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.   A ‘Z’ shaped kink is similar to two consecutive kink conditions.  A difference between this inspection and Line Kink is that a less restrictive tolerance is useful here.  (Compare the Kinks default tolerance to the tolerance range used here).\r\nThis inspection is intended to be applied simultaneously with the inspections Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.   The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n\r\n\r\nKER:\r\nno dependencies\r\nno know issues\r\n"
          }
        ]
      },
      {
        "id": 212527,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-29T17:11:52Z",
        "details": [
          {
            "property": "attachment",
            "name": "5565",
            "new_value": "z_kink.txt"
          }
        ]
      },
      {
        "id": 212528,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-29T17:12:06Z",
        "details": [
          {
            "property": "attachment",
            "name": "5564",
            "old_value": "z_kink.txt"
          }
        ]
      }
    ]
  },
  {
    "id": 37568,
    "subject": "KER: KINK",
    "category": "KER team",
    "status": "Ready to Work",
    "journals": [
      {
        "id": 128604,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:36:39Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "37567"
          }
        ]
      },
      {
        "id": 128613,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:42:03Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37570"
          }
        ]
      },
      {
        "id": 128673,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:25:58Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Kink KER with report",
            "new_value": "Line Kink KER with report (KINK)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128722,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:47:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128868,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:08:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 128895,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:37:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 129010,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:32:39Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 135076,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:52:22Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 135302,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:07:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 137854,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T15:48:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 138694,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-18T17:54:00Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 142417,
        "user": {
          "id": 2695,
          "name": "Black.Christopher.1402659340"
        },
        "notes": "The GeoBadger Kink data has been delivered in RocketChat",
        "created_on": "2019-03-28T15:57:28Z",
        "details": []
      },
      {
        "id": 142504,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-03-28T20:16:45Z",
        "details": [
          {
            "property": "attachment",
            "name": "4111",
            "new_value": "MGCP45_Z_KINK_Test_1.zip"
          }
        ]
      },
      {
        "id": 143783,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:40:32Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Kink KER with report (KINK)",
            "new_value": "KER: KINK (needs edit)"
          }
        ]
      },
      {
        "id": 143784,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:40:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 151062,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T16:45:52Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: KINK (needs edit)",
            "new_value": "KER: KINK (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Kink (KINK) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing KINK errors.\r\n\r\nGiven a data set without KINK errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no KINK errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- Given a data set and it's going to go through the KERs and tell you if there are KINK in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (KINK KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n\r\nThis inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: <“Line Kink”>\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 151064,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T16:46:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: <“Line Kink”>\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 151065,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T16:46:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 161497,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:50:28Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: KINK (needs geobadger)",
            "new_value": "KER: KINK"
          }
        ]
      },
      {
        "id": 192596,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:25:38Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192621,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:49:04Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192761,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:33:48Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194864,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:57:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195452,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197967,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:14:00Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198456,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:44:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n"
          }
        ]
      },
      {
        "id": 199621,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:12:15Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 211752,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:15:45Z",
        "details": [
          {
            "property": "attachment",
            "name": "5493",
            "new_value": "kink.zip"
          }
        ]
      },
      {
        "id": 213240,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:55:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 213675,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "KER info:\r\nno dependencies\r\ntwo original parts but description lists only one part",
        "created_on": "2020-02-05T14:47:06Z",
        "details": [
          {
            "property": "attachment",
            "name": "5606",
            "new_value": "kink.txt"
          }
        ]
      },
      {
        "id": 213686,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-02-05T15:31:51Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on KINK\r\n*So that* I am notified if KINK has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see an error if any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the KINK KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without KINK errors\r\n*When* I run an inspection on KINK\r\n*Then* I expect to see 0 KINK errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with KINK errors\r\n*Then* I see KINK displayed by its full name: “Line Kink”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (degrees to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (degrees to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any line feature or pair of joined line features of same feature type where consecutive or joined line segments form an angle >= 178 degrees.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any line feature to identify those cases where the feature (described by the primary participant specification) forms a kink at the point where either of its end nodes connect to another line feature (also described by the primary participant specification) or along its own length.  The criterion is an angular measure, specified in degrees.  Note that GAIT does not include kickbacks (180° kinks) in the conditions reported by this inspection.\r\n     This inspection is intended to be applied simultaneously with the inspections ‘Z’ Shaped Line Kink, Line Kink (Single Feature) and Line Feature Join Kink.  The default tolerance values of these four inspections have been tailored so that no single inspection will report the same condition as any of the others.  The specific conditions are sorted by magnitude and those conditions with the highest angles are presented first to aid in the review process.\r\n\r\n\r\nKER:\r\nno dependencies\r\nKER Outstanding:  original KER had two parts,  updated descriptions list only one part. "
          }
        ]
      }
    ]
  },
  {
    "id": 37567,
    "subject": "KER: PLLPROXFAIL",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 128602,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:33:59Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36330"
          }
        ]
      },
      {
        "id": 128603,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:36:39Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37568"
          }
        ]
      },
      {
        "id": 128666,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:23:47Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Point - Feature Intersection Coincidence Failure KER with report",
            "new_value": "Point - Feature Intersection Coincidence Failure KER with report (PLLPROXFAIL)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify (1) any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature; (2) any point Road Interchange feature that is not within 0.1m of an intersection of two line Road features with RST = 'Hard/Paved' and WTC = 'All Weather'.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 128719,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:46:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128866,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:07:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify (1) any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature; (2) any point Road Interchange feature that is not within 0.1m of an intersection of two line Road features with RST = 'Hard/Paved' and WTC = 'All Weather'.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app \r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify (1) any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature; (2) any point Road Interchange feature that is not within 0.1m of an intersection of two line Road features with RST = 'Hard/Paved' and WTC = 'All Weather'.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 128894,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:36:52Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify (1) any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature; (2) any point Road Interchange feature that is not within 0.1m of an intersection of two line Road features with RST = 'Hard/Paved' and WTC = 'All Weather'.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify (1) any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature; (2) any point Road Interchange feature that is not within 0.1m of an intersection of two line Road features with RST = 'Hard/Paved' and WTC = 'All Weather'.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 129009,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-02-13T13:32:16Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 133084,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-27T18:25:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify (1) any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature; (2) any point Road Interchange feature that is not within 0.1m of an intersection of two line Road features with RST = 'Hard/Paved' and WTC = 'All Weather'.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 135075,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:51:51Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 135304,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:10:14Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 137842,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T15:13:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 138682,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-18T17:45:18Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 141358,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "PLLPROXFAIL MGCP45 Test Data 1 Uploaded 2019-03-25-1615 - Chris W",
        "created_on": "2019-03-25T21:13:08Z",
        "details": []
      },
      {
        "id": 141976,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-27T12:32:53Z",
        "details": [
          {
            "property": "attachment",
            "name": "4087",
            "new_value": "MGCP45_PLLPROXFAIL_Test_1.zip"
          }
        ]
      },
      {
        "id": 143781,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:39:41Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Point - Feature Intersection Coincidence Failure KER with report (PLLPROXFAIL)",
            "new_value": "KER: PLLPROXFAIL (needs edit)"
          }
        ]
      },
      {
        "id": 143782,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:39:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 151127,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T18:33:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Point - Feature Intersection Coincidence Failure (PLLPROXFAIL) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing PLLPROXFAIL errors.\r\n\r\nGiven a data set without PLLPROXFAIL errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no PLLPROXFAIL errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are PLLPROXFAIL in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (PLLPROXFAIL KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on PLLPROXFAIL\r\n*So that* I am notified if PLLPROXFAIL has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see an error if any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the PLLPROXFAIL KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see 0 PLLPROXFAIL errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with PLLPROXFAIL errors\r\n*Then* I see PLLPROXFAIL displayed by its full name: “Point-Feature Intersection Coincidence Failure”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 151128,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T18:34:01Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: PLLPROXFAIL (needs edit)",
            "new_value": "KER: PLLPROXFAIL  (needs geobadger) (needs edit)"
          }
        ]
      },
      {
        "id": 151185,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T20:10:46Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: PLLPROXFAIL  (needs geobadger) (needs edit)",
            "new_value": "KER: PLLPROXFAIL  (needs geobadger)"
          }
        ]
      },
      {
        "id": 161496,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:49:45Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: PLLPROXFAIL  (needs geobadger)",
            "new_value": "KER: PLLPROXFAIL"
          }
        ]
      },
      {
        "id": 192595,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:25:20Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192618,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:46:55Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192760,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:33:33Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194863,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:57:45Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195451,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:51Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197966,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:13:36Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198454,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:43:55Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on PLLPROXFAIL\r\n*So that* I am notified if PLLPROXFAIL has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see an error if any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the PLLPROXFAIL KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see 0 PLLPROXFAIL errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with PLLPROXFAIL errors\r\n*Then* I see PLLPROXFAIL displayed by its full name: “Point-Feature Intersection Coincidence Failure”\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on PLLPROXFAIL\r\n*So that* I am notified if PLLPROXFAIL has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see an error if any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the PLLPROXFAIL KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see 0 PLLPROXFAIL errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with PLLPROXFAIL errors\r\n*Then* I see PLLPROXFAIL displayed by its full name: “Point-Feature Intersection Coincidence Failure”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 199620,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:11:56Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 207490,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-02T16:39:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 207512,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2020-01-02T16:56:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 207827,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2020-01-03T16:31:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208114,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-06T17:22:04Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 208341,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:13:32Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 208355,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-01-07T15:28:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 208418,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-07T17:38:53Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on PLLPROXFAIL\r\n*So that* I am notified if PLLPROXFAIL has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see an error if any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the PLLPROXFAIL KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see 0 PLLPROXFAIL errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with PLLPROXFAIL errors\r\n*Then* I see PLLPROXFAIL displayed by its full name: “Point-Feature Intersection Coincidence Failure”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on PLLPROXFAIL\r\n*So that* I am notified if PLLPROXFAIL has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see an error if any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the PLLPROXFAIL KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without PLLPROXFAIL errors\r\n*When* I run an inspection on PLLPROXFAIL\r\n*Then* I expect to see 0 PLLPROXFAIL errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with PLLPROXFAIL errors\r\n*Then* I see PLLPROXFAIL displayed by its full name: “Point-Feature Intersection Coincidence Failure”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, FCODE, and Magnitude.\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE, location, and Magnitude.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n\r\n- Identify any point Ford feature not within 0.1m of the intersection of a line Road, Cart Track, or Trail and a line Aqueduct, Canal, Ditch, or River feature.\r\n\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\n- From GAIT26: This inspection can be applied to any point features to identify those cases where the point feature (described by the primary participant specification) is more than the specified distance away from an intersection of two line or area features (specified as the secondary and tertiary participants).  The distance measurement will be made in 2D.\r\n"
          }
        ]
      },
      {
        "id": 209086,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-08T17:53:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 209136,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-08T19:12:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 36330,
    "subject": "KER: FEATOUTSIDE",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 124046,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:51:19Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36329"
          }
        ]
      },
      {
        "id": 124047,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:52:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines\r\n tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 124049,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:56:06Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36331"
          }
        ]
      },
      {
        "id": 124051,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T19:56:09Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128601,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T14:33:59Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "37567"
          }
        ]
      },
      {
        "id": 128663,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:19:25Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Feature Coordinate Outside Whole-Degree Project Boundaries KER with report",
            "new_value": "Feature Coordinate Outside Whole-Degree Project Boundaries KER with report (FEATOUTSIDE)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines.\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 128705,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:43:03Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128865,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:07:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 128893,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:36:17Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 135074,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:50:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 135305,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:12:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 137254,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-12T19:08:49Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 137838,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T15:10:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described\r\nby the primary participant specification) that lie outside the whole-degree boundaries of the\r\nproject. This inspection can be applied to either 2D or 3D features; however, the “outside” test is\r\nalways applied as a 2D test. The inspection first calculates the whole-degree latitude parallels\r\nand longitude meridians that are closest to the maximum and minimum longitude and latitude\r\ncoordinates of features included in the project. Then it compares the latitude and longitude\r\ncoordinates of each feature vertex (described by the primary participant specification) to identify\r\nthose that are (a) greater than the maximum parallel or meridian or (b) less than the minimum\r\nparallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align\r\nto whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The\r\ninspection may return unwanted results when applied to projects that are not designed to align\r\nwith whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described by the primary participant specification) that lie outside the whole-degree boundaries of the project. This inspection can be applied to either 2D or 3D features; however, the “outside” test is always applied as a 2D test. The inspection first calculates the whole-degree latitude parallels and longitude meridians that are closest to the maximum and minimum longitude and latitude coordinates of features included in the project. Then it compares the latitude and longitude coordinates of each feature vertex (described by the primary participant specification) to identify those that are (a) greater than the maximum parallel or meridian or (b) less than the minimum parallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align to whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The inspection may return unwanted results when applied to projects that are not designed to align with whole-degree lines of latitude and longitude.\r\n"
          }
        ]
      },
      {
        "id": 141237,
        "user": {
          "id": 2695,
          "name": "Black.Christopher.1402659340"
        },
        "notes": "Delivered the FEATOUTSIDE shapefiles to the .io RocketChat",
        "created_on": "2019-03-25T14:10:08Z",
        "details": []
      },
      {
        "id": 141240,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-25T14:15:53Z",
        "details": [
          {
            "property": "attachment",
            "name": "4069",
            "new_value": "MGCP45_FEATOUTSIDE_Test_1.zip"
          }
        ]
      },
      {
        "id": 142956,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T17:28:18Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "36329"
          }
        ]
      },
      {
        "id": 143361,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T18:23:45Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Feature Coordinate Outside Whole-Degree Project Boundaries KER with report (FEATOUTSIDE)",
            "new_value": "KER: FEATOUTSIDE"
          }
        ]
      },
      {
        "id": 143452,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T20:17:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Outside Whole-Degree Project Boundaries (FEATOUTSIDE) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing FEATOUTSIDE errors.\r\n\r\nGiven a data set without FEATOUTSIDE errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no FEATOUTSIDE errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n- Identify any feature coordinates that lie outside the whole degree latitude or longitude lines (tolerance = 0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are FEATOUTSIDE in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (FEATOUTSIDE KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any vertices of point, area or line features (described by the primary participant specification) that lie outside the whole-degree boundaries of the project. This inspection can be applied to either 2D or 3D features; however, the “outside” test is always applied as a 2D test. The inspection first calculates the whole-degree latitude parallels and longitude meridians that are closest to the maximum and minimum longitude and latitude coordinates of features included in the project. Then it compares the latitude and longitude coordinates of each feature vertex (described by the primary participant specification) to identify those that are (a) greater than the maximum parallel or meridian or (b) less than the minimum parallel or meridian, and are more than ‘tolerance’ distance from that parallel or meridian.\r\n\r\nThis inspection is intended for application to projects having outer boundaries that should align to whole degree lines of latitude and longitude, such as an MGCP one-degree cell. The inspection may return unwanted results when applied to projects that are not designed to align with whole-degree lines of latitude and longitude.\r\n",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on FEATOUTSIDE\r\nSo that I am notified if FEATOUTSIDE any errors \r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see 0 FEATOUTSIDE errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143453,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T20:18:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on FEATOUTSIDE\r\nSo that I am notified if FEATOUTSIDE any errors \r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see 0 FEATOUTSIDE errors in my output\r\n",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on FEATOUTSIDE\r\nSo that I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see 0 FEATOUTSIDE errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143776,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:36:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 150964,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:20:44Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: FEATOUTSIDE",
            "new_value": "KER: FEATOUTSIDE (need geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on FEATOUTSIDE\r\nSo that I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see 0 FEATOUTSIDE errors in my output\r\n",
            "new_value": "As a QAC user with a data set \r\nI want to run an inspection on FEATOUTSIDE\r\nSo that I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\nGiven I have a test data set with errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\nGiven I have a test data set without errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 150976,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:26:36Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a data set \r\nI want to run an inspection on FEATOUTSIDE\r\nSo that I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\nGiven I have a test data set with errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\nGiven I have a test data set without errors\r\nWhen I run an inspection on FEATOUTSIDE\r\nThen I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 150977,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:28:25Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: FEATOUTSIDE (need geobadger)",
            "new_value": "KER: FEATOUTSIDE (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: <“XXX”>\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 150985,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T14:42:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: <“XXX”>\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 161495,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:48:43Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: FEATOUTSIDE (needs geobadger)",
            "new_value": "KER: FEATOUTSIDE"
          }
        ]
      },
      {
        "id": 192594,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:24:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192617,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:46:25Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192759,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:33:17Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194862,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:57:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195450,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:42Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197965,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:13:17Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198452,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:42:54Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 200184,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-20T14:01:07Z",
        "details": [
          {
            "property": "attachment",
            "name": "5249",
            "new_value": "featoutside_2019-11-19.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written"
          }
        ]
      },
      {
        "id": 200186,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-20T14:01:23Z",
        "details": [
          {
            "property": "attachment",
            "name": "4069",
            "old_value": "MGCP45_FEATOUTSIDE_Test_1.zip"
          }
        ]
      },
      {
        "id": 200832,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:04:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200935,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-21T20:04:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location.\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location (geom).\r\n\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written"
          }
        ]
      },
      {
        "id": 201472,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T15:07:44Z",
        "details": [
          {
            "property": "attachment",
            "name": "5277",
            "new_value": "featoutside.txt"
          }
        ]
      },
      {
        "id": 201912,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-26T19:38:47Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: FEATOUTSIDE",
            "new_value": "KER: FEATOUTSIDE (needs UTM)"
          }
        ]
      },
      {
        "id": 201913,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-26T19:40:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 202056,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-27T14:52:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 202057,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-27T14:54:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 203467,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-05T18:48:30Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1228",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 203971,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-06T13:36:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 205522,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:06:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206061,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:26:01Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 206563,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Corrected tolerance to be > 0.1m",
        "created_on": "2019-12-18T19:18:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location (geom).\r\n\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location (geom).\r\n\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance > 0.1m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written"
          }
        ]
      },
      {
        "id": 206787,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-19T23:55:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "52952"
          }
        ]
      },
      {
        "id": 206790,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-19T23:56:50Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: FEATOUTSIDE (needs UTM)",
            "new_value": "KER: FEATOUTSIDE"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE, and location (geom).\r\n\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance > 0.1m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on FEATOUTSIDE\r\n*So that* I am notified if FEATOUTSIDE has any errors \r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see an error if any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance = 0m)\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the FEATOUTSIDE KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on FEATOUTSIDE\r\n*Then* I expect to see 0 FEATOUTSIDE errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with FEATOUTSIDE errors\r\n*Then* I see FEATOUTSIDE displayed by its full name: Feature Coordinate Outside Whole-Degree Boundary\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UID, Feature Name, FCODE, and location (geom).\r\n\r\n\r\nProduct notes:\r\n\r\n-Identify any feature coordinates lie outside the whole degree latitude or longitude lines (tolerance > 0.1m)\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nNOTES from GeoBadger:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........25........27\r\n_________________________\r\n.Sum.........25........27\r\nAs for this one, the geobadger data only contains roads - it was one of the generators we made before we started including every feature class. We can update it to include every feature class if that would be preferable, but they would just be copies of this data.\r\nI can also split this one up into a good delivery and a bad delivery, depending on how the SQL was written"
          }
        ]
      },
      {
        "id": 206894,
        "user": {
          "id": 3825,
          "name": "Damazyn.Kevin.1572614839"
        },
        "notes": "",
        "created_on": "2019-12-20T15:00:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 207819,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-03T15:37:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 207824,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-03T16:13:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 212597,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2020-01-29T19:10:52Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "36331"
          }
        ]
      }
    ]
  },
  {
    "id": 36329,
    "subject": " KER: AWITHOUTA",
    "category": "KER team",
    "status": "Done",
    "journals": [
      {
        "id": 124036,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:46:57Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36319"
          }
        ]
      },
      {
        "id": 124045,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:51:19Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36330"
          }
        ]
      },
      {
        "id": 124052,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T19:56:28Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128662,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:18:02Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Not Fully Containing Second Feature KER with report",
            "new_value": "Area Not Fully Containing Second Feature KER with report (AWITHOUTA)"
          }
        ]
      },
      {
        "id": 128694,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:40:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128863,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:06:23Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 128892,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:35:49Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 135071,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:42:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 135311,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:28:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 137227,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-12T18:50:38Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Not Fully Containing Second Feature KER with report (AWITHOUTA)",
            "new_value": "SPIKE! Area Not Fully Containing Second Feature KER with report (AWITHOUTA)"
          }
        ]
      },
      {
        "id": 137832,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T15:05:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant\r\nspecification) that does not fully contain any point, line or area features (described by the\r\nsecondary participant specification) or mask (grid) post value (described by the secondary\r\nparticipant specification and the primary and secondary tolerance specifications) inside its\r\nperimeter. This inspection can be applied to either 2D or 3D features; however, the “contain”\r\ntest is always applied as a 2D test. Also, the “contained” area feature may share some or all\r\nedges with the “containing” feature, but if any edge of the secondary participant lies outside of\r\nthe primary participant, the secondary feature is not considered to be “contained” by the primary\r\nparticipant.\r\nWhen a mask (grid geometry) has been specified as a secondary participant, the primary\r\nparticipant area feature must contain at least one mask post where the value at that post is in the\r\nrange defined by the primary and secondary tolerance specifications. This capability allows\r\nGAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask\r\npost value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant specification) that does not fully contain any point, line or area features (described by the secondary participant specification) or mask (grid) post value (described by the secondary participant specification and the primary and secondary tolerance specifications) inside its perimeter. This inspection can be applied to either 2D or 3D features; however, the “contain” test is always applied as a 2D test. Also, the “contained” area feature may share some or all edges with the “containing” feature, but if any edge of the secondary participant lies outside of the primary participant, the secondary feature is not considered to be “contained” by the primary participant. When a mask (grid geometry) has been specified as a secondary participant, the primary participant area feature must contain at least one mask post where the value at that post is in the range defined by the primary and secondary tolerance specifications. This capability allows GAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask post value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 138519,
        "user": {
          "id": 2695,
          "name": "Black.Christopher.1402659340"
        },
        "notes": "Delivered GeoBadger test data to the .io RocketChat on March 18.",
        "created_on": "2019-03-18T13:34:52Z",
        "details": []
      },
      {
        "id": 139349,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T19:18:04Z",
        "details": [
          {
            "property": "attachment",
            "name": "4034",
            "new_value": "MGCP45_AWITHOUTA_Test_1.zip"
          }
        ]
      },
      {
        "id": 142839,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:20:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; (2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; (3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, (4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant specification) that does not fully contain any point, line or area features (described by the secondary participant specification) or mask (grid) post value (described by the secondary participant specification and the primary and secondary tolerance specifications) inside its perimeter. This inspection can be applied to either 2D or 3D features; however, the “contain” test is always applied as a 2D test. Also, the “contained” area feature may share some or all edges with the “containing” feature, but if any edge of the secondary participant lies outside of the primary participant, the secondary feature is not considered to be “contained” by the primary participant. When a mask (grid geometry) has been specified as a secondary participant, the primary participant area feature must contain at least one mask post where the value at that post is in the range defined by the primary and secondary tolerance specifications. This capability allows GAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask post value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; \r\n\r\n(2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; \r\n\r\n(3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, \r\n\r\n(4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant specification) that does not fully contain any point, line or area features (described by the secondary participant specification) or mask (grid) post value (described by the secondary participant specification and the primary and secondary tolerance specifications) inside its perimeter. This inspection can be applied to either 2D or 3D features; however, the “contain” test is always applied as a 2D test. Also, the “contained” area feature may share some or all edges with the “containing” feature, but if any edge of the secondary participant lies outside of the primary participant, the secondary feature is not considered to be “contained” by the primary participant. When a mask (grid geometry) has been specified as a secondary participant, the primary participant area feature must contain at least one mask post where the value at that post is in the range defined by the primary and secondary tolerance specifications. This capability allows GAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask post value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 142853,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:45:34Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "938"
          }
        ]
      },
      {
        "id": 142856,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:46:47Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 142952,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T17:27:17Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 142954,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T17:28:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "old_value": "36319"
          }
        ]
      },
      {
        "id": 142955,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T17:28:18Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "36330"
          }
        ]
      },
      {
        "id": 143002,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T18:51:07Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE! Area Not Fully Containing Second Feature KER with report (AWITHOUTA)",
            "new_value": "Area Not Fully Containing Second Feature KER with report (AWITHOUTA)"
          }
        ]
      },
      {
        "id": 143073,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T20:24:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; \r\n\r\n(2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; \r\n\r\n(3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, \r\n\r\n(4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant specification) that does not fully contain any point, line or area features (described by the secondary participant specification) or mask (grid) post value (described by the secondary participant specification and the primary and secondary tolerance specifications) inside its perimeter. This inspection can be applied to either 2D or 3D features; however, the “contain” test is always applied as a 2D test. Also, the “contained” area feature may share some or all edges with the “containing” feature, but if any edge of the secondary participant lies outside of the primary participant, the secondary feature is not considered to be “contained” by the primary participant. When a mask (grid geometry) has been specified as a secondary participant, the primary participant area feature must contain at least one mask post where the value at that post is in the range defined by the primary and secondary tolerance specifications. This capability allows GAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask post value, a requirement of the TREx program.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; \r\n\r\n(2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; \r\n\r\n(3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, \r\n\r\n(4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are AWITHOUTA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AWITHOUTA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant specification) that does not fully contain any point, line or area features (described by the secondary participant specification) or mask (grid) post value (described by the secondary participant specification and the primary and secondary tolerance specifications) inside its perimeter. This inspection can be applied to either 2D or 3D features; however, the “contain” test is always applied as a 2D test. Also, the “contained” area feature may share some or all edges with the “containing” feature, but if any edge of the secondary participant lies outside of the primary participant, the secondary feature is not considered to be “contained” by the primary participant. When a mask (grid geometry) has been specified as a secondary participant, the primary participant area feature must contain at least one mask post where the value at that post is in the range defined by the primary and secondary tolerance specifications. This capability allows GAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask post value, a requirement of the TREx program."
          }
        ]
      },
      {
        "id": 143356,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T18:18:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Fully Containing Second Feature (AWITHOUTA) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AWITHOUTA errors.\r\n\r\nGiven a data set without AWITHOUTA errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AWITHOUTA errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n\r\n- Identify: (1) Any area Aerodrome feature with FPT = 'Major' that does not completely contain at least one area Runway feature with LEN = [910 - 12000] and RST = 'Hard/Paved'; \r\n\r\n(2) any area Aerodrome feature with FPT = 'Minor and Hard' that does not completely contain at least one area Runway feature with LEN = [10 - 910]; \r\n\r\n(3) any area Aerodrome feature with FPT = 'Minor and Soft' that does not completely contain at least one area Runway feature that is not attributed RST = 'Hard/Paved'; and, \r\n\r\n(4) any area Aerodrome feature with FPT = 'Unknown' or 'Other' that does not completely contain at least one area Runway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are AWITHOUTA in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AWITHOUTA KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n\r\n- From GAIT26: This inspection can be applied to identify any area feature (described by the primary participant specification) that does not fully contain any point, line or area features (described by the secondary participant specification) or mask (grid) post value (described by the secondary participant specification and the primary and secondary tolerance specifications) inside its perimeter. This inspection can be applied to either 2D or 3D features; however, the “contain” test is always applied as a 2D test. Also, the “contained” area feature may share some or all edges with the “containing” feature, but if any edge of the secondary participant lies outside of the primary participant, the secondary feature is not considered to be “contained” by the primary participant. When a mask (grid geometry) has been specified as a secondary participant, the primary participant area feature must contain at least one mask post where the value at that post is in the range defined by the primary and secondary tolerance specifications. This capability allows GAIT to identify Aerodrome area features that do not contain at least one appropriate Edit Mask post value, a requirement of the TREx program.",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on AWITHOUTA\r\nSo that I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to only see parts with errors related to my dataset \r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling x errors):\r\n\r\nAny area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway feature (GB055) with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAny area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway feature (GB055) with LEN = [10 - 910]\r\nAny area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway feature (GB055) that is not attributed RST = 'Hard/Paved'\r\nAny area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway feature (GB055) \r\n\r\nAC #2: \r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to see 0 AWITHOUTA errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143359,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T18:20:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on AWITHOUTA\r\nSo that I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to only see parts with errors related to my dataset \r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling x errors):\r\n\r\nAny area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway feature (GB055) with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAny area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway feature (GB055) with LEN = [10 - 910]\r\nAny area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway feature (GB055) that is not attributed RST = 'Hard/Paved'\r\nAny area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway feature (GB055) \r\n\r\nAC #2: \r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to see 0 AWITHOUTA errors in my output\r\n",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on AWITHOUTA\r\nSo that I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to only see parts with errors related to my dataset \r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling x errors):\r\n\r\nAny area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAny area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAny area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAny area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to see 0 AWITHOUTA errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143360,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T18:22:47Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Not Fully Containing Second Feature KER with report (AWITHOUTA)",
            "new_value": " KER: AWITHOUTA"
          }
        ]
      },
      {
        "id": 143420,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T19:16:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on AWITHOUTA\r\nSo that I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to only see parts with errors related to my dataset \r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling x errors):\r\n\r\nAny area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAny area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAny area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAny area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to see 0 AWITHOUTA errors in my output\r\n",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on AWITHOUTA\r\nSo that I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to only see parts with errors related to my dataset \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling x errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to see 0 AWITHOUTA errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143775,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:36:53Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 151087,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T17:23:46Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: AWITHOUTA",
            "new_value": " KER: AWITHOUTA (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on AWITHOUTA\r\nSo that I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to only see parts with errors related to my dataset \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling x errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on AWITHOUTA\r\nThen I expect to see 0 AWITHOUTA errors in my output\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 151091,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T17:25:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if my parts has any errors related to AWITHOUTA\r\n\r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 161494,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:47:26Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: AWITHOUTA (needs geobadger)",
            "new_value": " KER: AWITHOUTA"
          }
        ]
      },
      {
        "id": 192593,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:24:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192616,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:46:01Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192758,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:32:26Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194861,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:57:29Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195449,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:24:35Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197964,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:12:59Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198451,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:41:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part"
          }
        ]
      },
      {
        "id": 200787,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-21T16:08:50Z",
        "details": [
          {
            "property": "attachment",
            "name": "5267",
            "new_value": "awithouta_2019-11-20.zip"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16"
          }
        ]
      },
      {
        "id": 200788,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-21T16:08:59Z",
        "details": [
          {
            "property": "attachment",
            "name": "4034",
            "old_value": "MGCP45_AWITHOUTA_Test_1.zip"
          }
        ]
      },
      {
        "id": 200831,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:04:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 200833,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-21T17:05:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16"
          }
        ]
      },
      {
        "id": 200843,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-21T17:17:14Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below:\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\n-Specify the number of expected errors to get for testing for each KER part\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16"
          }
        ]
      },
      {
        "id": 200932,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-21T20:02:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nOther AC\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16"
          }
        ]
      },
      {
        "id": 200936,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-11-21T20:05:34Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nOther AC\r\n* This KER shall display UID, Feature Name, and FCODE.\r\n* This KER shall return UUIDs, Feature Names, FCODEs and location (geom)\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16"
          }
        ]
      },
      {
        "id": 201466,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-25T15:06:50Z",
        "details": [
          {
            "property": "attachment",
            "name": "5276",
            "new_value": "awithouta.txt"
          }
        ]
      },
      {
        "id": 202281,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-02T15:10:27Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 202379,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-02T20:21:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown:\r\nPart.......Good.......Bad\r\n_________________________\r\n...1.........20........16\r\n_________________________\r\n.Sum.........20........16",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown: \r\nPart.......Good.......Bad\r\n_________________________\r\n...1........198........20\r\n...2........799........19\r\n...3........198.........4\r\n...4.........49........15\r\n_________________________\r\n.Sum.......1244........58"
          }
        ]
      },
      {
        "id": 202380,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-02T20:22:31Z",
        "details": [
          {
            "property": "attachment",
            "name": "5291",
            "new_value": "awithouta_2019-11-22.zip"
          }
        ]
      },
      {
        "id": 203052,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-04T16:48:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown: \r\nPart.......Good.......Bad\r\n_________________________\r\n...1........198........20\r\n...2........799........19\r\n...3........198.........4\r\n...4.........49........15\r\n_________________________\r\n.Sum.......1244........58",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\n-AC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n-  I'm pretty sure we're not doing this now\r\n\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown: \r\nPart.......Good.......Bad\r\n_________________________\r\n...1........198........20\r\n...2........799........19\r\n...3........198.........4\r\n...4.........49........15\r\n_________________________\r\n.Sum.......1244........58"
          }
        ]
      },
      {
        "id": 203440,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-12-05T17:53:43Z",
        "details": [
          {
            "property": "attachment",
            "name": "5267",
            "old_value": "awithouta_2019-11-20.zip"
          }
        ]
      },
      {
        "id": 204052,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-06T18:29:47Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\n-AC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n-  I'm pretty sure we're not doing this now\r\n\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown: \r\nPart.......Good.......Bad\r\n_________________________\r\n...1........198........20\r\n...2........799........19\r\n...3........198.........4\r\n...4.........49........15\r\n_________________________\r\n.Sum.......1244........58",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AWITHOUTA\r\n*So that* I am notified if AWITHOUTA has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AWITHOUTA errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to only see parts with errors related to my data set \r\nAnd each part error will be outputted as \"AWITHOUTA_n\" where \"n\" corresponds to the part numbers below (similar to OBJECTWITHOUT in navigation):\r\n\r\n(Example: If 5 out of 10 parts have errors, display only those 5 parts on output)\r\n\r\nFor testing purposes, each part should appear on the output with the specified number of errors (totaling *XXX* errors):\r\n\r\nAWITHOUTA_1:  Any area Land Aerodrome (GB005) feature with FPT = 'Major' (1) that does not completely contain at least one area Runway (GB055) feature  with LEN = [910 - 12000] and RST = 'Hard/Paved' (1)\r\nAWITHOUTA_2:  Any area Land Aerodrome(GB005) feature with FPT = 'Minor and Hard' (2) that does not completely contain at least one area Runway (GB055) feature with LEN = [10 - 910]\r\nAWITHOUTA_3:  Any area Land Aerodrome (GB005)  feature with FPT = 'Minor and Soft' (3) that does not completely contain at least one area Runway (GB055) feature that is not attributed RST = 'Hard/Paved' (1)\r\nAWITHOUTA_4:  Any area Land Aerodrome  (GB005) feature with FPT = 'Unknown' (0) or 'Other' (999) that does not completely contain at least one area Runway (GB055) feature \r\n\r\nAC #2: \r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on AWITHOUTA\r\n*Then* I expect to see 0 AWITHOUTA errors in my output\r\n\r\n-AC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AWITHOUTA errors\r\n*Then* I see AWITHOUTA displayed by its full name: “Area Not Fully Containing Second Feature”\r\n-  I'm pretty sure we're not doing this now\r\n\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display UID, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return UUID, Feature Name, FCODE and location (geom).\r\n\r\n\r\n-\r\nProduct notes:\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n-Specify the number of expected errors to get for testing for each KER part\r\n-Need expected number of conditions for each part (?)-\r\n\r\nNOTES for GeoBadger test data:\r\nSubsection breakdown: \r\nPart.......Good.......Bad\r\n_________________________\r\n...1........198........20\r\n...2........799........19\r\n...3........198.........4\r\n...4.........49........15\r\n_________________________\r\n.Sum.......1244........58\r\n\r\n*N.B.*\r\nthe number of expected conditions listed above presume you have filtered features by part number in the SDP field of the feature data.\r\nthat is why the expected number of conditions for parts 1-3 are different here than they are in the behave tests.\r\nfor more information, see Eric S. or Chamath D."
          }
        ]
      },
      {
        "id": 204093,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-06T19:45:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204094,
        "user": {
          "id": 3413,
          "name": "Dharmasiri.Chamath.1557241830"
        },
        "notes": "",
        "created_on": "2019-12-06T19:45:57Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 204096,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-06T19:57:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 204211,
        "user": {
          "id": 3850,
          "name": "Slack.Matthew.1280265990"
        },
        "notes": "",
        "created_on": "2019-12-09T17:17:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 204646,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-12-10T18:21:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 36319,
    "subject": "[CODE REVIEW] (OBJECTWITHOUT) Area Not Containing Any Part Of Another Feature KER with report ",
    "category": null,
    "status": "Done",
    "journals": [
      {
        "id": 123947,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T16:27:53Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36316"
          }
        ]
      },
      {
        "id": 124024,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:16:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 124027,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:18:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 124028,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:19:39Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 124035,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:46:57Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36329"
          }
        ]
      },
      {
        "id": 124056,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T20:00:07Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128657,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:15:27Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Not Containing Any Part Of Another Feature KER with report",
            "new_value": "Area Not Containing Any Part Of Another Feature KER with report (OBJECTWITHOUT)"
          }
        ]
      },
      {
        "id": 128687,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:39:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 128862,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:05:51Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 128891,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:35:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 134191,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-01T16:53:00Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: (1) Any area Dam, Embankment, or Transportation Station feature with TRS = 'Railway' that does not contain a line Railway or Railway Sidetrack feature; (2) any area Dam or Embankment feature with TRS = 'Road' that does not contain a line Road or Cart Track feature; (3) any area Dam or Embankment feature with TRS = 'Aqueduct' that does not contain any part of a line or area Aqueduct feature; (4) any area Dam or Embankment feature with TRS = 'Canal' that does not contain any part of a line or area Canal feature; (5) any area Dam or Embankment feature with TRS = 'Pipeline' that does not contain a line Pipeline feature; (6) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = 'Other' that does not coincide with a line Aqueduct, Canal, Cart Track, Pipeline, Railway, Railway Sidetrack, Road, Trail, or, area Aqueduct or Canal feature; (7) any area Transportation Station feature with TRS = 'Road' not containing a line Road feature; and, (8) any area Transportation Station feature with TRS = 'Other' not containing a line Railway, Railway Sidetrack, or Road feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 135035,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T15:19:38Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "938"
          }
        ]
      },
      {
        "id": 135070,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:42:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 135312,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:30:27Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 137222,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "GAIT broke results out for each part if conditions found.",
        "created_on": "2019-03-12T18:44:35Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Area Not Containing Any Part Of Another Feature KER with report (OBJECTWITHOUT)",
            "new_value": "SPIKE! Area Not Containing Any Part Of Another Feature KER with report (OBJECTWITHOUT)"
          }
        ]
      },
      {
        "id": 137820,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T15:02:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 139488,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered data set 2019-03-19-1955",
        "created_on": "2019-03-20T00:56:02Z",
        "details": []
      },
      {
        "id": 139808,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-20T12:43:01Z",
        "details": [
          {
            "property": "attachment",
            "name": "4037",
            "new_value": "MGCP_45_OBJECTWITHOUT_TEST_1.zip"
          }
        ]
      },
      {
        "id": 141727,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-26T17:11:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 141730,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "We cannot implement this until we know if we should follow the specs that we found in gitlab or the story here. We made a spreadsheet highlighting the differences.\r\n\r\nBoth the story and the gitlab call out parts 1-5\r\nOnly the gitlab calls out 5-8\r\nOnly the story calls out 9-11\r\n\r\nFurther, for 1-5 everything is the same, EXCEPT, the story always calls out Bridges and Tunnels for layer 1 in the comparison, while the gitlab excludes bridges and tunnels.\r\n\r\nHow should we proceed?\r\n\r\nhttps://gitlab.devops.geointservices.io/sfd/QAC_Checks/blob/master/MGCP-TDS_Checks/MGCP/OBJECTWITHOUT",
        "created_on": "2019-03-26T17:37:56Z",
        "details": [
          {
            "property": "attachment",
            "name": "4077",
            "new_value": "OBJECTWITHOUT.xlsx"
          }
        ]
      },
      {
        "id": 141857,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-26T19:08:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (6) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (7) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (8) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 141858,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-26T19:13:29Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature, (6) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (7) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (8) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature; (6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature; (7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature; (8) any area Transportation Station feature with \r\nTRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature; (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10 any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 142113,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-27T17:42:27Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature, (2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature, (3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature, (4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature, (5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature; (6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature; (7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature; (8) any area Transportation Station feature with \r\nTRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature; (9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature, (10 any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature, and, (11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature; and,\r\n\r\n(11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 142114,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-27T17:45:07Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "40010"
          }
        ]
      },
      {
        "id": 142116,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-27T17:46:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 142661,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-29T17:03:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 142851,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:45:02Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 142854,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:46:14Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "938"
          }
        ]
      },
      {
        "id": 142905,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T14:45:46Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Taxiway\" that does not contain any part of a line or area Taxiway feature; and,\r\n\r\n(11) any area Bridge feature with TRS = \"Runway\" that does not contain any part of an area Runway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway or Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 142928,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T15:29:39Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 142933,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T16:00:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway or Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway, or area Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          }
        ]
      },
      {
        "id": 142949,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered MGCP45_OBJECTWITHOUT_Test_2.zip on 2019-04-01-1218 - Chris W",
        "created_on": "2019-04-01T17:19:03Z",
        "details": [
          {
            "property": "attachment",
            "name": "4143",
            "new_value": "MGCP45_OBJECTWITHOUT_Test_2.zip"
          }
        ]
      },
      {
        "id": 142953,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T17:28:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "old_value": "36329"
          }
        ]
      },
      {
        "id": 143156,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T12:30:18Z",
        "details": [
          {
            "property": "attachment",
            "name": "4037",
            "old_value": "MGCP_45_OBJECTWITHOUT_TEST_1.zip"
          }
        ]
      },
      {
        "id": 143172,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T12:57:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 161620,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-19T14:02:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 161621,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "Task for formatting for database integration.",
        "created_on": "2019-06-19T14:03:12Z",
        "details": [
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731",
            "new_value": "477"
          }
        ]
      },
      {
        "id": 192462,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T13:57:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify: Identify (1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway, or area Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Please update the current data in the tool to reflect more recent changes to the KER parts.\r\n- Output refers to both results and report\r\n- Identify: \r\n(1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway, or area Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability."
          },
          {
            "property": "attr",
            "name": "priority_id",
            "old_value": "4",
            "new_value": "6"
          }
        ]
      },
      {
        "id": 192512,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-10-29T15:08:26Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 192518,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:12:08Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 192573,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:56:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Please update the current data in the tool to reflect more recent changes to the KER parts.\r\n- Output refers to both results and report\r\n- Identify: \r\n(1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway, or area Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Area Not Containing Any Part Of Another Feature (OBJECTWITHOUT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing OBJECTWITHOUT errors.\r\n\r\nGiven a data set without OBJECTWITHOUT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no OBJECTWITHOUT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Please update the current data in the tool to reflect more recent changes to the KER parts.\r\n- Output refers to both results and report\r\n- Identify: \r\n(1) any area Bridge, Dam, Embankment, Transportation Station or Tunnel feature with TRS = \"Railway\" that does not contain a line Railway or Railway Sidetrack feature;\r\n\r\n(2) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Road\" that does not contain a line Road or Cart Track feature;\r\n\r\n(3) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Aqueduct\" that does not contain any part of a line or area Aqueduct feature;\r\n\r\n(4) any area Bridge, Dam, Embankment, or Tunnel feature with TRS = \"Canal\" that does not contain any part of a line or area Canal feature\r\n\r\n(5) any area Bridge, Dam, Embankment or Tunnel feature with TRS = \"Pipeline\" that does not contain any part of a line Pipeline feature;\r\n\r\n(6) any area Bridge Dam, Tunnel, or Embankment feature with TRS = \"Other\" that does not coincide with a line Road, Railway, Railway Sidetrack, Pipeline, Cart Track, Trail, Aqueduct, Canal, or area Canal or Aqueduct feature;\r\n\r\n(7) any area Transportation Station feature with TRS = \"Road\" not containing a line Road feature;\r\n\r\n(8) any area Transportation Station feature with TRS = \"Other\" not containing a line Road, Railway, or Railway Sidetrack feature;\r\n\r\n(9) any area Bridge, Dam, or Tunnel feature with TRS = \"Pedestrian\" that does not contain any part of a line Trail feature;\r\n\r\n(10) any area Bridge or Tunnel feature with TRS = \"Aeronautical\" that does not contain any part of a line or area Runway, or area Taxiway feature.\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are OBJECTWITHOUT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (OBJECTWITHOUT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to identify instances of area features (described by the primary participant specification) that do not include any point or part of a line or area feature (described by the secondary participant specification) inside their perimeter. This inspection can be applied to either 2D or 3D features; however, the “inside” test is always applied as a 2D test. GAIT will consider a line or area feature vertex that lies exactly on the perimeter of a qualifying area to be inside that area feature. Also, a line feature only partially inside the area feature will satisfy the requirement.\r\n\r\nThis inspection can be configured to ignore conditions on the extreme boundaries of a project. See the earlier section of this document, “Conditions on the Project Outer Edges” for more information on the operation and use of this filtering capability.\r\n\r\nGeoBadger data should have the following results:\r\nPart Good Bad\r\n1 10 5\r\n2 8 4\r\n3 4 4\r\n4 4 4\r\n5 4 4\r\n6 40 4\r\n7 1 1\r\n8 3 1\r\n9 3 3\r\n10 3 2\r\n________________________________________\r\nSum 80 32"
          }
        ]
      },
      {
        "id": 192574,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:56:15Z",
        "details": [
          {
            "property": "attachment",
            "name": "4143",
            "old_value": "MGCP45_OBJECTWITHOUT_Test_2.zip"
          }
        ]
      },
      {
        "id": 192575,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T15:56:34Z",
        "details": [
          {
            "property": "attachment",
            "name": "5059",
            "new_value": "GeoBadger_MGCP45_OBJECTWITHOUT_Test_4.zip"
          }
        ]
      },
      {
        "id": 192587,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T16:16:40Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "SPIKE! Area Not Containing Any Part Of Another Feature KER with report (OBJECTWITHOUT)",
            "new_value": "(OBJECTWITHOUT) Area Not Containing Any Part Of Another Feature KER with report "
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 193815,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-01T12:28:43Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 193816,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-11-01T12:29:01Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 193973,
        "user": {
          "id": 3848,
          "name": "Ali.Yasir.1262049333"
        },
        "notes": "",
        "created_on": "2019-11-01T16:40:50Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "(OBJECTWITHOUT) Area Not Containing Any Part Of Another Feature KER with report ",
            "new_value": "[CODE REVIEW] (OBJECTWITHOUT) Area Not Containing Any Part Of Another Feature KER with report "
          }
        ]
      },
      {
        "id": 194221,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-04T16:00:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194855,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:55:41Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "11"
          }
        ]
      },
      {
        "id": 194858,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-05T18:56:40Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "11",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 194898,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-05T19:47:48Z",
        "details": [
          {
            "property": "attachment",
            "name": "5106",
            "new_value": "GeoBadger_MGCP45_OBJECTWITHOUT_Test_4.zip"
          }
        ]
      },
      {
        "id": 195071,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-11-06T14:12:51Z",
        "details": [
          {
            "property": "attachment",
            "name": "5107",
            "new_value": "MGCP45_OBJECTWITHOUT.zip"
          }
        ]
      },
      {
        "id": 195522,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "* Received 406 error when testing the attached file titled \"MGCP45_OBJECTWITHOUT_created_on_windows.zip\"\r\n  Bug #51114 will resolve this issue\r\n\r\n* Waiting for new updates from Mary for KER descriptions",
        "created_on": "2019-11-06T18:42:12Z",
        "details": []
      },
      {
        "id": 195524,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T18:42:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "7"
          }
        ]
      },
      {
        "id": 195624,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "* Received Mary's updated KER statement and ran MGCP45_OBJECTWITHOUT_created_on_windows.zip \r\n* Story is good pending Bug #51114",
        "created_on": "2019-11-06T20:33:59Z",
        "details": []
      },
      {
        "id": 195625,
        "user": {
          "id": 3547,
          "name": "Moncayo.Miguel.1235296914"
        },
        "notes": "",
        "created_on": "2019-11-06T20:34:10Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "7",
            "new_value": "9"
          }
        ]
      }
    ]
  },
  {
    "id": 36315,
    "subject": "KER: LBNDUSHT (needs geobadger) (needs UTM)",
    "category": "KER team",
    "status": "In Progress",
    "journals": [
      {
        "id": 123941,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T16:07:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36314"
          }
        ]
      },
      {
        "id": 123942,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T16:13:40Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36316"
          }
        ]
      },
      {
        "id": 124021,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:08:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 124058,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T20:01:08Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128642,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:07:55Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Feature End Node Undershoots Project Whole-Degree Boundary KER with report",
            "new_value": "Line Feature End Node Undershoots Project Whole-Degree Boundary KER with report (LBNDUSHT)"
          }
        ]
      },
      {
        "id": 128860,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:04:39Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 128889,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:34:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 131839,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-25T18:52:14Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 134727,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-04T19:38:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 135065,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:41:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Story includes both results and report.\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 135314,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:31:35Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n- Query needs to be written\r\n- Story includes both results and report.\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Story includes both results and report.\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 137588,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered test data #1 for LBNDUSHT on 2019-03-13 at 1240 - Chris Welch",
        "created_on": "2019-03-13T17:40:30Z",
        "details": []
      },
      {
        "id": 137790,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T14:09:50Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no LBNDUSHT errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Story includes both results and report.\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see an output\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a output showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a output showing no LBNDUSHT errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 139281,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T18:39:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 139311,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T19:00:00Z",
        "details": [
          {
            "property": "attachment",
            "name": "4031",
            "new_value": "MGCP45_LBNDUSHT_Test_1.zip"
          }
        ]
      },
      {
        "id": 139809,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-20T12:44:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 139817,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-20T13:46:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "9"
          }
        ]
      },
      {
        "id": 142843,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T13:30:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "9",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 143004,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T18:51:51Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "old_value": "2"
          }
        ]
      },
      {
        "id": 143454,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T20:24:36Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Line Feature End Node Undershoots Project Whole-Degree Boundary KER with report (LBNDUSHT)",
            "new_value": "KER: LBNDUSHT"
          }
        ]
      },
      {
        "id": 143456,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-02T20:26:48Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Line Feature End Node Undershoots Project Whole-Degree Boundary (LBNDUSHT) KER in QAC and see an output\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a output showing LBNDUSHT errors.\r\n\r\nGiven a data set without LBNDUSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a output showing no LBNDUSHT errors\r\n\r\nNotes: \r\n*- Query is in work*\r\n- Output refers to both results and report\r\n- Identify disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are LBNDUSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (LBNDUSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel\r\nthan the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on LBNDUSHT\r\nSo that I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see 0 LBNDUSHT errors in my output\r\n\r\n"
          }
        ]
      },
      {
        "id": 143789,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:42:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143791,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:44:11Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LBNDUSHT",
            "new_value": "KER: LBNDUSHT needs UTM  Converter"
          }
        ]
      },
      {
        "id": 143834,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:45:07Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LBNDUSHT needs UTM  Converter",
            "new_value": "KER: LBNDUSHT (needs UTM  Converter)"
          }
        ]
      },
      {
        "id": 150997,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T15:21:09Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on LBNDUSHT\r\nSo that I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see 0 LBNDUSHT errors in my output\r\n\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\nThen I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n\r\n-Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 150998,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T15:22:08Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LBNDUSHT (needs UTM  Converter)",
            "new_value": "KER: LBNDUSHT (needs UTM)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\nThen I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n\r\n-Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\nThen I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n\r\n-Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 150999,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T15:22:21Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\nThen I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n\r\n-Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n\r\n-Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n-For any features listed in the acceptance criteria, insert specific FID"
          }
        ]
      },
      {
        "id": 151000,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T15:22:40Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: LBNDUSHT (needs UTM)",
            "new_value": "KER: LBNDUSHT (needs geobadger) (needs UTM)"
          }
        ]
      },
      {
        "id": 158221,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-04T16:31:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 199102,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T19:26:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 199104,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T19:26:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 199569,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:04:42Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204307,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:54:34Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 205530,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:16:16Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n\r\n-Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n-For any features listed in the acceptance criteria, insert specific FID",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n"
          }
        ]
      },
      {
        "id": 205761,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-13T18:54:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n",
            "new_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n"
          }
        ]
      },
      {
        "id": 210733,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:38:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211749,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:13:57Z",
        "details": [
          {
            "property": "attachment",
            "name": "5489",
            "new_value": "lbndusht.zip"
          }
        ]
      },
      {
        "id": 212185,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-28T20:53:05Z",
        "details": [
          {
            "property": "attachment",
            "name": "5553",
            "new_value": "lbndusht.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n",
            "new_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\nupload statement created\r\nNo dependencies\r\n"
          }
        ]
      },
      {
        "id": 212776,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T17:11:32Z",
        "details": [
          {
            "property": "attachment",
            "name": "4031",
            "old_value": "MGCP45_LBNDUSHT_Test_1.zip"
          }
        ]
      },
      {
        "id": 212815,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-30T20:21:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\nupload statement created\r\nNo dependencies\r\n",
            "new_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nAC #4:\r\n\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\nupload statement created\r\nNo dependencies\r\n\r\nFrom GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.\r\n"
          }
        ]
      },
      {
        "id": 212816,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-30T20:23:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nAC #4:\r\n\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\nupload statement created\r\nNo dependencies\r\n\r\nFrom GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.\r\n",
            "new_value": "Magnitude will be added in this card (magnitude (meters to the 6th decimal)).\r\n\r\n*As a* QAC user with a data set \r\n*I want* to run an inspection on LBNDUSHT\r\n*So that* I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the LBDNUSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without errors\r\n*When* I run an inspection on LBNDUSHT\r\n*Then* I expect to see 0 LBNDUSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with LBNDUSHT errors\r\n*Then* I see LBNDUSHT displayed by its full name: “Line Boundary Undershoot”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, FCODE\r\nAND,\r\nThen the KER shall return shapefile(s) with COND_TYPE, MAGNITUDE (meters), COND_NUM, FNAME_1, FCODE_1, DESCRIPTION, ORIG_GEOM, UID, SCHEMA\r\n\r\nProduct notes:\r\n* UTM = Universal Transverse Mercator (allows us to accurately measure the shape projection into meters).\r\n* Identify any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n* For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\nupload statement created\r\nNo dependencies\r\n\r\nFrom GAIT26: This inspection can be applied to any line feature (as specified by the primary participant) to detect those with end nodes (either first or last node) that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the end node is further away from the meridian or parallel then the distance specified as the primary tolerance and the end node to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify line feature end nodes with coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.\r\n"
          }
        ]
      },
      {
        "id": 213135,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T16:23:49Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213238,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:55:21Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 213940,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2020-02-06T20:52:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      }
    ]
  },
  {
    "id": 36314,
    "subject": "KER: BNDRYUNDERSHT (needs geobadger) (needs UTM)",
    "category": "KER team",
    "status": "Test",
    "journals": [
      {
        "id": 123939,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T16:04:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36313"
          }
        ]
      },
      {
        "id": 123940,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T16:07:12Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36315"
          }
        ]
      },
      {
        "id": 124018,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T19:06:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 124060,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T20:01:27Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128641,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:06:55Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Feature Coordinate Undershoots Project Whole Degree Boundary KER with report",
            "new_value": "Feature Coordinate Undershoots Project Whole Degree Boundary KER with report (BNDRYUNDERSHT)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 128859,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:04:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 128888,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:33:38Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 131833,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-25T18:45:34Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 134725,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-04T19:38:28Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 135063,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T16:40:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Story includes both results and report.\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 135315,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T20:31:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Story includes both results and report.\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Story includes both results and report.\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 136975,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "Delivered GeoBadger data for this inspection on 2019-03-12-0811 - Chris W",
        "created_on": "2019-03-12T13:12:05Z",
        "details": []
      },
      {
        "id": 137789,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T14:07:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Story includes both results and report.\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see an output\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 139148,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T14:58:11Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 139276,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T18:36:18Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 139347,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T19:14:39Z",
        "details": [
          {
            "property": "attachment",
            "name": "4032",
            "new_value": "MGCP_45_BNDRYUNDERSHT_Run_1.zip"
          }
        ]
      },
      {
        "id": 139354,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-19T19:39:53Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "old_value": "2"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see an output\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see an output\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n*- Query is In Work*\r\n- Output refers to both results and report\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 139355,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-19T19:40:06Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 139356,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-19T19:40:47Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 139362,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-19T20:11:54Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 139806,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-20T12:36:04Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 139810,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-20T12:45:14Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "5"
          }
        ]
      },
      {
        "id": 139811,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-20T12:45:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "5",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 139828,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "Blocking story on badger for now.\r\n\r\nThe dataset in rocketchat seems to only have 1 condition, they mentioned 3. We want to make sure we're not missing anything.\r\n\r\nThis dataset is also not catching between 0-.1, but 0-.14 instead. Should we change the tolerance, or try and get a dataset that falls between 0 and .1?",
        "created_on": "2019-03-20T13:53:18Z",
        "details": []
      },
      {
        "id": 140235,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-21T13:15:46Z",
        "details": [
          {
            "property": "attachment",
            "name": "4041",
            "new_value": "BNDRYUNDERSHT_Run_2_MGCP45.zip"
          }
        ]
      },
      {
        "id": 140237,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-21T13:16:17Z",
        "details": [
          {
            "property": "attachment",
            "name": "4032",
            "old_value": "MGCP_45_BNDRYUNDERSHT_Run_1.zip"
          }
        ]
      },
      {
        "id": 141731,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2019-03-26T17:38:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 143003,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T18:51:34Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "old_value": "2"
          }
        ]
      },
      {
        "id": 143765,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:00:04Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Feature Coordinate Undershoots Project Whole Degree Boundary (BNDRYUNDERSHT) KER in QAC and see an output\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing BNDRYUNDERSHT errors.\r\n\r\nGiven a data set without BNDRYUNDERSHT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no BNDRYUNDERSHT errors\r\n\r\nNotes: \r\n*- Query is In Work*\r\n- Output refers to both results and report\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 0.1m).\r\n- Bounding box buffer technique.\r\n- Given a data set and it's going to go through the KERs and tell you if there are BNDRYUNDERSHT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (BNDRYUNDERSHT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on LBNDUSHT\r\nSo that I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see 0 LBNDUSHT errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143768,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:05:32Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Feature Coordinate Undershoots Project Whole Degree Boundary KER with report (BNDRYUNDERSHT)",
            "new_value": " KER: BNDRYUNDERSHT"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on LBNDUSHT\r\nSo that I am notified if LBNDUSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on LBNDUSHT\r\nThen I expect to see 0 LBNDUSHT errors in my output\r\n",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on  BNDRYUNDERSHT\r\nSo that I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on  BNDRYUNDERSHT\r\nThen I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on BNDRYUNDERSHT\r\nThen I expect to see 0  BNDRYUNDERSHT errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143771,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:14:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on  BNDRYUNDERSHT\r\nSo that I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on  BNDRYUNDERSHT\r\nThen I expect to see an error if there are any disconnected line feature end nodes that undershoot the 1 degree latitude or longitude edges by 0.1m - 10m (Primary tolerance {coordinate equality limit} = 0.1m; secondary tolerance {boundary proximity limit} = 10m).\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on BNDRYUNDERSHT\r\nThen I expect to see 0  BNDRYUNDERSHT errors in my output\r\n",
            "new_value": "As a QAC user with a dataset \r\nI want to run an inspection on  BNDRYUNDERSHT\r\nSo that I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on  BNDRYUNDERSHT\r\nThen I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on BNDRYUNDERSHT\r\nThen I expect to see 0 BNDRYUNDERSHT errors in my output\r\n"
          }
        ]
      },
      {
        "id": 143788,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:42:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 143790,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T15:43:40Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: BNDRYUNDERSHT",
            "new_value": " KER: BNDRYUNDERSHT - needs UTM Converter"
          }
        ]
      },
      {
        "id": 143833,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:44:08Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: BNDRYUNDERSHT - needs UTM Converter",
            "new_value": " KER: BNDRYUNDERSHT - (needs UTM Converter)"
          }
        ]
      },
      {
        "id": 143852,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T16:55:35Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": " KER: BNDRYUNDERSHT - (needs UTM Converter)",
            "new_value": "KER: BNDRYUNDERSHT (needs UTM Converter)"
          }
        ]
      },
      {
        "id": 151129,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-01T18:36:50Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: BNDRYUNDERSHT (needs UTM Converter)",
            "new_value": "KER: BNDRYUNDERSHT (needs UTM)"
          }
        ]
      },
      {
        "id": 151418,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T17:00:05Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a QAC user with a dataset \r\nI want to run an inspection on  BNDRYUNDERSHT\r\nSo that I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\nGiven I have a test dataset with errors\r\nWhen I run an inspection on  BNDRYUNDERSHT\r\nThen I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nAC #2:\r\nGiven I have a test dataset without errors\r\nWhen I run an inspection on BNDRYUNDERSHT\r\nThen I expect to see 0 BNDRYUNDERSHT errors in my output\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n"
          }
        ]
      },
      {
        "id": 151419,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-02T17:00:18Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER: BNDRYUNDERSHT (needs UTM)",
            "new_value": "KER: BNDRYUNDERSHT (needs geobadger) (needs UTM)"
          }
        ]
      },
      {
        "id": 158220,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-04T16:30:40Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 199100,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T19:25:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n"
          }
        ]
      },
      {
        "id": 199101,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T19:26:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 199103,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T19:26:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 199572,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:05:14Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 204308,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-09T19:55:00Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          }
        ]
      },
      {
        "id": 210734,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-21T13:39:02Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 211750,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:15:03Z",
        "details": [
          {
            "property": "attachment",
            "name": "5490",
            "new_value": "bndryundersht.zip"
          }
        ]
      },
      {
        "id": 212193,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-28T20:58:43Z",
        "details": [
          {
            "property": "attachment",
            "name": "5554",
            "new_value": "bndryundersht.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\ndescription states .1m but distance in query is 10\r\nupload statement\r\nno dependencies\r\n\r\n"
          }
        ]
      },
      {
        "id": 212780,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T17:14:20Z",
        "details": [
          {
            "property": "attachment",
            "name": "4041",
            "old_value": "BNDRYUNDERSHT_Run_2_MGCP45.zip"
          }
        ]
      },
      {
        "id": 212782,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-30T17:15:33Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\ndescription states .1m but distance in query is 10\r\nupload statement\r\nno dependencies\r\n\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\ndescription states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?\r\nupload statement\r\nno dependencies\r\n\r\n"
          }
        ]
      },
      {
        "id": 212817,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-01-30T20:25:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\ndescription states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?\r\nupload statement\r\nno dependencies\r\n\r\n",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, FCODE\r\nAND,\r\nThen the KER shall return shapefile(s) with COND_TYPE, MAGNITUDE (meters), COND_NUM, FNAME_1, FCODE_1, DESCRIPTION, ORIG_GEOM, UID, SCHEMA\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\ndescription states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?\r\nupload statement\r\nno dependencies\r\n\r\nFrom GAIT 26: \r\nThis inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 213134,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2020-02-03T16:23:46Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 213237,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-02-03T17:55:16Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 213336,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-03T21:05:12Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 213750,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-05T22:01:42Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 0 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, FCODE\r\nAND,\r\nThen the KER shall return shapefile(s) with COND_TYPE, MAGNITUDE (meters), COND_NUM, FNAME_1, FCODE_1, DESCRIPTION, ORIG_GEOM, UID, SCHEMA\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by 0.1m or less\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\ndescription states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?\r\nupload statement\r\nno dependencies\r\n\r\nFrom GAIT 26: \r\nThis inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by -0.1m or less- a distance of between 0.1m and 10m (exclusive).\r\n\r\nFor testing purposes:\r\nWe expect to see 1 errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 1 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, FCODE\r\nAND,\r\nThen the KER shall return shapefile(s) with COND_TYPE, MAGNITUDE (meters), COND_NUM, FNAME_1, FCODE_1, DESCRIPTION, ORIG_GEOM, UID, SCHEMA\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by -0.1m or less- a distance of between 0.1m and 10m (exclusive).\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\n-description states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?-\r\nthis KER has two tolerances, a primary and a secondary\r\nupload statement\r\nno dependencies\r\n\r\n*Notes*\r\nWe spoke with Jeff on the morning of 5 February 2020 and confirmed that the implementation of this KER should match the description from GAIT pasted below. There was initially some confusion around this because the description of this KER in several different spreadsheets indicated that the KER should only have one tolerance.\r\n\r\nFrom GAIT 26: \r\nThis inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 213758,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2020-02-05T22:30:58Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by -0.1m or less- a distance of between 0.1m and 10m (exclusive).\r\n\r\nFor testing purposes:\r\nWe expect to see 1 errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 1 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, FCODE\r\nAND,\r\nThen the KER shall return shapefile(s) with COND_TYPE, MAGNITUDE (meters), COND_NUM, FNAME_1, FCODE_1, DESCRIPTION, ORIG_GEOM, UID, SCHEMA\r\n\r\nProduct notes:\r\n-Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by -0.1m or less- a distance of between 0.1m and 10m (exclusive).\r\n-For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\n-description states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?-\r\nthis KER has two tolerances, a primary and a secondary\r\nupload statement\r\nno dependencies\r\n\r\n*Notes*\r\nWe spoke with Jeff on the morning of 5 February 2020 and confirmed that the implementation of this KER should match the description from GAIT pasted below. There was initially some confusion around this because the description of this KER in several different spreadsheets indicated that the KER should only have one tolerance.\r\n\r\nFrom GAIT 26: \r\nThis inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on BNDRYUNDERSHT\r\n*So that* I am notified if BNDRYUNDERSHT has any errors  \r\n \r\nAC #1: \r\n*Given* I have a test data set with BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see an error if there are any feature coordinates that undershoot the 1 degree latitude or longitude edges by -0.1m or less- a distance of between 0.1m and 10m (exclusive).\r\n\r\nFor testing purposes:\r\nWe expect to see 1 errors for the BNDRYUNDERSHT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without BNDRYUNDERSHT errors\r\n*When* I run an inspection on BNDRYUNDERSHT\r\n*Then* I expect to see 1 BNDRYUNDERSHT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with BNDRYUNDERSHT errors\r\n*Then* I see BNDRYUNDERSHT displayed by its full name: “Feature Coordinate Undershoots Project Whole-Degree Boundary”\r\n\r\nAC #4:\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Magnitude (meters to 6th decimal), Condition Number, Feature Name, FCODE\r\nAND,\r\nThen the KER shall return shapefile(s) with COND_TYPE (kerName), MAGNITUDE (meters), -COND_NUM-, FNAME_1 (featureNam), FCODE_1 (fcode), -DESCRIPTION-, -ORIG_GEOM-, UID, -SCHEMA-\r\n\r\nProduct notes:\r\n- Identify any feature coordinates that undershoot the 1 degree latitude or longitude edges by -0.1m or less- a distance of between 0.1m and 10m (exclusive).\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n\r\nKER:\r\n-description states 0.1m but distance in query is 10 (need to validate/double-check this, should it be 0.1 and not 10)?-\r\nthis KER has two tolerances, a primary and a secondary\r\nupload statement\r\nno dependencies\r\n\r\n*Notes*\r\nWe spoke with Jeff on the morning of 5 February 2020 and confirmed that the implementation of this KER should match the description from GAIT pasted below. There was initially some confusion around this because the description of this KER in several different spreadsheets indicated that the KER should only have one tolerance.\r\n\r\nFrom GAIT 26: \r\nThis inspection can be applied to any point, line or area feature vertices (as specified by the primary participant) to detect those that are inside the minimum and maximum, whole-degree lines of longitude and latitude that define the project and are distant from that latitude or longitude by an amount that lies within the open interval defined by the primary and secondary tolerances. That is, the feature vertex is further away from the meridian or parallel then the distance specified as the primary tolerance and the vertex to closer to the meridian or parallel than the distance specified by the secondary tolerance.\r\n\r\nThis inspection is intended to compliment the inspection Feature Coordinate Outside Project Whole-Degree Boundaries (Containment group) by allowing a capability to identify feature coordinates that are very close to MGCP one-degree project boundaries, but do not exceed those boundaries."
          }
        ]
      },
      {
        "id": 213941,
        "user": {
          "id": 2645,
          "name": "Rubin.Marc.1015600469"
        },
        "notes": "",
        "created_on": "2020-02-06T20:52:30Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "11"
          }
        ]
      }
    ]
  },
  {
    "id": 36311,
    "subject": "KER:  CUT_INT",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 123930,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T15:48:02Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "36310"
          }
        ]
      },
      {
        "id": 123932,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T15:51:38Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36312"
          }
        ]
      },
      {
        "id": 124015,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T18:56:45Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory."
          }
        ]
      },
      {
        "id": 124064,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T20:02:38Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128638,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:02:54Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Cut-out Touches Parent Feature Outer Ring KER with report",
            "new_value": "Cut-out Touches Parent Feature Outer Ring KER with report (CUT_INT)"
          }
        ]
      },
      {
        "id": 128856,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:02:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory."
          }
        ]
      },
      {
        "id": 128885,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T18:32:14Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory."
          }
        ]
      },
      {
        "id": 130494,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-19T20:01:38Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 134723,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-04T19:37:30Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory."
          }
        ]
      },
      {
        "id": 135031,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T15:18:31Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 135097,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T17:03:14Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Story includes both results and report.\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory."
          }
        ]
      },
      {
        "id": 135246,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:28:08Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Story includes both results and report.\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Story includes both results and report.\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory."
          }
        ]
      },
      {
        "id": 138000,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:54:10Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no CUT_INT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Story includes both results and report.\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input\r\ndata anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features). Incidents of this anomaly are reported in the file “badhole.txt” which can be found in the project’s “attribution_errors” directory.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no CUT_INT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 143017,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T18:58:16Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "old_value": "1"
          }
        ]
      },
      {
        "id": 143877,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:23:20Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Cut-out Touches Parent Feature Outer Ring KER with report (CUT_INT)",
            "new_value": "KER:  CUT_INT (needs edit)"
          }
        ]
      },
      {
        "id": 143878,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:23:36Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 149100,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger delivered data 2019-04-23-0927 - 1 error",
        "created_on": "2019-04-23T14:28:20Z",
        "details": [
          {
            "property": "attachment",
            "name": "4293",
            "new_value": "MGCP45_CUT_INT_Test_1.zip"
          }
        ]
      },
      {
        "id": 149217,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:13:57Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no CUT_INT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no CUT_INT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n\r\n\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n*Should have one error (and zero good rows)*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 152201,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:26:44Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Cut-out Touches Parent Feature Outer Ring (CUT_INT) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing CUT_INT errors.\r\n\r\nGiven a data set without CUT_INT errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no CUT_INT errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n\r\n\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n*Should have one error (and zero good rows)*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are CUT_INT in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (CUT_INT KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see <XXX> errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n*Should have one error (and zero good rows)*\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 152202,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:27:37Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see <XXX> errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n*Should have one error (and zero good rows)*\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n*Should have one error (and zero good rows)*\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 152203,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:29:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n*Should have one error (and zero good rows)*\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 152204,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:30:16Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  CUT_INT (needs edit)",
            "new_value": "KER:  CUT_INT (needs geobadger)"
          }
        ]
      },
      {
        "id": 161493,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:43:57Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  CUT_INT (needs geobadger)",
            "new_value": "KER:  CUT_INT"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *<XXX>* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 192592,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:24:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192615,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:41:01Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192757,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:32:13Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194860,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:57:17Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195462,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:58Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197963,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:12:40Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198450,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:41:01Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features)."
          }
        ]
      },
      {
        "id": 199586,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:11:37Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 207254,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-30T16:37:23Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3270"
          }
        ]
      },
      {
        "id": 207256,
        "user": {
          "id": 3270,
          "name": "Jeffers.Rebecca.1143744830"
        },
        "notes": "",
        "created_on": "2019-12-30T16:56:31Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 211751,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-27T20:15:25Z",
        "details": [
          {
            "property": "attachment",
            "name": "5491",
            "new_value": "cut_int.zip"
          }
        ]
      },
      {
        "id": 212194,
        "user": {
          "id": 477,
          "name": "Goodman.Mary.1088805336"
        },
        "notes": "",
        "created_on": "2020-01-28T21:03:01Z",
        "details": [
          {
            "property": "attachment",
            "name": "5555",
            "new_value": "cut_int.txt"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on CUT_INT\r\n*So that* I am notified if CUT_INT has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see an error if any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature. \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* errors for the CUT_INT KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without CUT_INT errors\r\n*When* I run an inspection on CUT_INT\r\n*Then* I expect to see 0 CUT_INT errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with CUT_INT errors\r\n*Then* I see CUT_INT displayed by its full name: Cut-out Touches Parent Feature Outer Ring\r\n\r\nAC #4:\r\n\r\nGiven I have conditions\r\nWhen I view the results\r\nThen the KER shall display Condition Number, Feature Name, and FCODE,\r\nAND,\r\nThen the KER shall return shapefile(s) with UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature cut-out that intersects (is within 0.001m of) the outer boundary of the feature.\r\n\"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to any area feature to detect those features that include cut-outs (inner rings) that touch the feature outer ring. This inspection serves in conjunction with the input data anomaly analyses applied during the process of creating a GAIT project. During input data anomaly analyses, feature inner rings are inspected to identify those that have a vertex outside of the feature outer ring (or rings for multi-part area features).\r\n\r\nKER:\r\nupload statement created\r\nno dependencies"
          }
        ]
      }
    ]
  },
  {
    "id": 36307,
    "subject": "KER:  AREAUNCLOSED (Needs UTM)",
    "category": "KER team",
    "status": "Analysis",
    "journals": [
      {
        "id": 123921,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T15:39:04Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_from",
            "new_value": "35107"
          }
        ]
      },
      {
        "id": 123922,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T15:41:40Z",
        "details": [
          {
            "property": "relation",
            "name": "copied_to",
            "new_value": "36308"
          }
        ]
      },
      {
        "id": 124007,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T18:48:56Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and\r\ncompared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 124008,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-01-24T18:49:24Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and\r\ncompared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 124071,
        "user": {
          "id": 1617,
          "name": "Husgen.Joseph.1264967062"
        },
        "notes": "",
        "created_on": "2019-01-24T20:17:37Z",
        "details": [
          {
            "property": "attr",
            "name": "parent_id",
            "new_value": "32364"
          }
        ]
      },
      {
        "id": 128633,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T15:00:17Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Unclosed Area KER with report",
            "new_value": "Unclosed Area KER with report (AREAUNCLOSED)"
          }
        ]
      },
      {
        "id": 128821,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-02-12T16:38:58Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "new_value": "3"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- Someone to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\n- Simple React app\r\n- Flash as backend\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 134345,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-03-04T14:08:22Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 134373,
        "user": {
          "id": 1766,
          "name": "Pilger.Roy.1142406299"
        },
        "notes": "",
        "created_on": "2019-03-04T14:45:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "2"
          }
        ]
      },
      {
        "id": 134719,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-04T19:35:25Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 135030,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T15:18:13Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "938",
            "new_value": "941"
          }
        ]
      },
      {
        "id": 135096,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T17:02:31Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 135269,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-05T19:50:03Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n- Query is in GitLab\r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 137999,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-03-14T18:53:15Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see a report showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 143015,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-01T18:57:55Z",
        "details": [
          {
            "property": "attr",
            "name": "story_points",
            "old_value": "3"
          }
        ]
      },
      {
        "id": 143875,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:22:26Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "Unclosed Area KER with report (AREAUNCLOSED)",
            "new_value": "KER:  AREAUNCLOSED (needs edit)"
          }
        ]
      },
      {
        "id": 143876,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-04-03T17:22:44Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "2",
            "new_value": "1"
          }
        ]
      },
      {
        "id": 148966,
        "user": {
          "id": 2691,
          "name": "Welch.Christen.1118214311"
        },
        "notes": "GeoBadger provided data 2019-04-23-0219. This is only bad data with one error.",
        "created_on": "2019-04-23T07:52:12Z",
        "details": [
          {
            "property": "attachment",
            "name": "4289",
            "new_value": "MGCP45_AREAUNCLOSED_Test_1.zip"
          }
        ]
      },
      {
        "id": 149216,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-04-23T18:13:06Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n- Output refers to both results and report\r\n- Story includes both results and report.\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n\r\n\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n*Should have one error (and zero good rows)*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 152205,
        "user": {
          "id": 2891,
          "name": "Garlock.Richard.1286003580"
        },
        "notes": "",
        "created_on": "2019-05-07T17:42:38Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  AREAUNCLOSED (needs edit)",
            "new_value": "KER:  AREAUNCLOSED (needs geobadger)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "As a Geospatial Data Analyst\r\nI want to run the Unclosed Area (AREAUNCLOSED) KER in QAC and see a report\r\nSo that I know if there are errors in the data set.\r\n\r\nGiven a data set with AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing AREAUNCLOSED errors.\r\n\r\nGiven a data set without AREAUNCLOSED errors\r\nWhen an Inspection is run on this data set\r\nThen I see an output showing no AREAUNCLOSED errors\r\n\r\nNotes: \r\n*- Query is in GitLab*\r\n\r\n\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m).\r\n*Should have one error (and zero good rows)*\r\n\r\n\r\n- Given a data set and it's going to go through the KERs and tell you if there are AREAUNCLOSED in there. It's going to tell you via the report.\r\n- BaDGer to provide given data sets with and without errors.\r\n- Need to decide a way to run an inspection (AREAUNCLOSED KER).\r\n- Data does not have to be uploaded by a user, it can be manually ingested by a developer into a database.\r\nFrom GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *XXX* errors for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 161490,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-06-18T18:40:18Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  AREAUNCLOSED (needs geobadger)",
            "new_value": "KER:  AREAUNCLOSED"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *XXX* errors for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 192591,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:24:00Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 192614,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-10-29T16:40:23Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "941",
            "new_value": "1208"
          }
        ]
      },
      {
        "id": 192756,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-10-29T18:31:23Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1208",
            "new_value": "1207"
          }
        ]
      },
      {
        "id": 194859,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-05T18:57:09Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 195460,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-06T18:25:48Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "4"
          }
        ]
      },
      {
        "id": 197181,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-12T15:03:41Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), FID, Feature Name (with FCODE),\r\nAND,\r\n*Then* the KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 197962,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-14T18:12:24Z",
        "details": [
          {
            "property": "attr",
            "name": "category_id",
            "new_value": "510"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "old_value": "2731"
          }
        ]
      },
      {
        "id": 198335,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-15T20:48:37Z",
        "details": [
          {
            "property": "attachment",
            "name": "5211",
            "new_value": "Capture.JPG"
          }
        ]
      },
      {
        "id": 198449,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:39:13Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), FID, Feature Name (with FCODE),\r\nAND,\r\n*Then* the KER shall return shapefile(s) with FID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), Condition number, Feature Name (with FCODE),\r\nAND,\r\n*Then* the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 198473,
        "user": {
          "id": 2731,
          "name": "Mayo.Jeffrey.1094534468"
        },
        "notes": "",
        "created_on": "2019-11-18T15:58:12Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), Condition number, Feature Name (with FCODE),\r\nAND,\r\n*Then* the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 199585,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-11-19T15:11:19Z",
        "details": [
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1207",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 205538,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:28:04Z",
        "details": [
          {
            "property": "attr",
            "name": "subject",
            "old_value": "KER:  AREAUNCLOSED",
            "new_value": "KER:  AREAUNCLOSED (Needs UTM)"
          },
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 205539,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-12T17:28:50Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "10"
          },
          {
            "property": "attr",
            "name": "assigned_to_id",
            "new_value": "3834"
          }
        ]
      },
      {
        "id": 205959,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-16T14:25:59Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display Magnitude (in meters, to the 6th decimal), Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with Magnitude (meters to 6th decimal), UUID, Feature Name, FCODE and location.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 205986,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-16T15:28:25Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206065,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-17T13:33:37Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "10"
          }
        ]
      },
      {
        "id": 206114,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-17T15:01:20Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\n*Notes from Eric*\r\nCurrent state of this KER development:\r\nThere are a few PostGIS functions that return validity of a geom, and you can also get a reason if the geom is invalid.  I was using this approach and it works fine in pgadmin (postgres 11.5, postgis 2.5.2). however, when running the behave test as well as the app code, the query does not detect the given test data as invalid, because the same query in the app considers the test data to be valid (postgres 9.5, postgis 2.5.2). i  don't know why this is. i ran the app code with postgres 10, and got the same result, namely that the bad test data is not considered invalid geom, but it should be. at this point, i'm not sure what the best next step is.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 206115,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-17T15:02:19Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\n*Notes from Eric*\r\nCurrent state of this KER development:\r\nThere are a few PostGIS functions that return validity of a geom, and you can also get a reason if the geom is invalid.  I was using this approach and it works fine in pgadmin (postgres 11.5, postgis 2.5.2). however, when running the behave test as well as the app code, the query does not detect the given test data as invalid, because the same query in the app considers the test data to be valid (postgres 9.5, postgis 2.5.2). i  don't know why this is. i ran the app code with postgres 10, and got the same result, namely that the bad test data is not considered invalid geom, but it should be. at this point, i'm not sure what the best next step is.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\n\r\n*Current state of this KER development: (as of 17 Dec 2019, 0900)*\r\nThere are a few PostGIS functions that return validity of a geom, and you can also get a reason if the geom is invalid.  I was using this approach and it works fine in pgadmin (postgres 11.5, postgis 2.5.2). however, when running the behave test as well as the app code, the query does not detect the given test data as invalid, because the same query in the app considers the test data to be valid (postgres 9.5, postgis 2.5.2). i  don't know why this is. i ran the app code with postgres 10, and got the same result, namely that the bad test data is not considered invalid geom, but it should be. at this point, i'm not sure what the best next step is.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 206561,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-18T19:03:40Z",
        "details": [
          {
            "property": "attr",
            "name": "description",
            "old_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\n\r\n*Current state of this KER development: (as of 17 Dec 2019, 0900)*\r\nThere are a few PostGIS functions that return validity of a geom, and you can also get a reason if the geom is invalid.  I was using this approach and it works fine in pgadmin (postgres 11.5, postgis 2.5.2). however, when running the behave test as well as the app code, the query does not detect the given test data as invalid, because the same query in the app considers the test data to be valid (postgres 9.5, postgis 2.5.2). i  don't know why this is. i ran the app code with postgres 10, and got the same result, namely that the bad test data is not considered invalid geom, but it should be. at this point, i'm not sure what the best next step is.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported.",
            "new_value": "*As a* QAC user with a data set \r\n*I want* to run an inspection on AREAUNCLOSED\r\n*So that* I am notified if AREAUNCLOSED has any errors\r\n\r\nAC #1: \r\n*Given* I have a test data set with AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see an error if any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows)\"\r\n\r\nFor testing purposes:\r\nWe expect to see *1* error for the AREAUNCLOSED KER, as specified by Geobadger test data\r\n\r\nAC #2:\r\n*Given* I have a test data set without AREAUNCLOSED errors\r\n*When* I run an inspection on AREAUNCLOSED\r\n*Then* I expect to see 0 AREAUNCLOSED errors in my output\r\n\r\nAC #3:\r\n*Given* I am in the QAC app\r\n*When* I load a data set with AREAUNCLOSED errors\r\n*Then* I see AREAUNCLOSED displayed by its full name: Unclosed Area\r\n\r\nAC #4:\r\n*Given* I have conditions\r\n*When* I view the results\r\n*Then* the KER shall display -Magnitude (in meters, to the 6th decimal)-, Condition number, Feature Name, and FCODE,\r\nAND,\r\n*Then* the KER shall return shapefile(s) with -Magnitude (meters to 6th decimal),- UUID, Feature Name, FCODE and location.\r\n--> per our last story writing meeting, we're going to punt on returning magnitude since the tolerance for this KER is zero.\r\n\r\n\r\n*Updated Notes* (as of 18 Dec 2019, 1300)\r\n\r\nIt appears that the conversion of shapefiles to postgres tables via GDAL/OGR is automatically closing open polygons for us. While there are several options available to use for the PostgreSQL driver, we did not find one to use that would turn off auto-closing (see https://gdal.org/drivers/vector/pg.html#vector-pg). If you dig around a little in the source code for GDAL OGR (https://github.com/OSGeo/gdal/tree/master/gdal/ogr), you will see a parameter called AutoClose and a function called closeRings. So while there is some notion of control of that, it is well below the level of the Python bindings. We have thus concluded that we don't have control over the auto-close functionality, assuming we continue to use the Python GDAL/OGR package.\r\n\r\nFurthermore, we discussed this issue with Chris Welch and Jeff Mayo. Chris was unaware of any software package that would allow geospatial analysts to create an open polygon. He had to manually open an existing data set, and edit the binary content to even generate test data for this KER. After discussing this with Jeff, he seemed open to the idea of getting rid of this KER completely. We have (maybe) one outstanding item, which is to poll the MGCP community to see if any of them are using old geospatial software. The theory is that this 'open polygon' scenario might be possible if the analysts were using really old geospatial software. Until then, this story should not be worked.\r\n\r\n\r\n\r\nCurrent state of this KER development: (as of 17 Dec 2019, 0900)\r\nThere are a few PostGIS functions that return validity of a geom, and you can also get a reason if the geom is invalid.  I was using this approach and it works fine in pgadmin (postgres 11.5, postgis 2.5.2). however, when running the behave test as well as the app code, the query does not detect the given test data as invalid, because the same query in the app considers the test data to be valid (postgres 9.5, postgis 2.5.2). i  don't know why this is. i ran the app code with postgres 10, and got the same result, namely that the bad test data is not considered invalid geom, but it should be. at this point, i'm not sure what the best next step is.\r\n\r\nProduct notes:\r\n*- Query is in GitLab*\r\n- Identify any area feature that does not close in x, y or z (tolerance = 0.0m). \"Should have one error (and zero good rows).\" Qualifies as UTM.\r\n- For any features listed in the acceptance criteria, insert specific FID\r\n- From GAIT26: This inspection can be applied to detect any area features having first and last vertices that have different coordinates (any combination of difference in the X, Y or Z coordinate values). Note that there is a separate inspection (Area Not Closed in Z) that will detect area features whose first and last vertices differ only by their Z coordinate. Any condition detected by the Area Not Closed in Z will also be detected by the Unclosed Area inspection. When an area feature has different first and last coordinates, the distance between those coordinates is calculated and compared to the specified tolerance. This distance is measured in 3D for three dimensional features and in 2D for two dimensional features. When the measured distance is greater than the specified tolerance, a condition is reported."
          }
        ]
      },
      {
        "id": 206562,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-18T19:12:15Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "10",
            "new_value": "3"
          }
        ]
      },
      {
        "id": 206565,
        "user": {
          "id": 3787,
          "name": "Seidler.Eric.1510910490"
        },
        "notes": "",
        "created_on": "2019-12-18T20:04:19Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "3",
            "new_value": "4"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "1228",
            "new_value": "944"
          }
        ]
      },
      {
        "id": 206578,
        "user": {
          "id": 449,
          "name": "Lingwall.Jacob.1379990610"
        },
        "notes": "Could be solved by using another GDAL driver or Arcpy to view geometry in python (outside of postgis). Needs a spike to test if other drivers or arcpy close the polygon like ogr has been doing (when importing to postgis). \r\nAlso, why would a simple topological check need UTM?!",
        "created_on": "2019-12-18T21:01:02Z",
        "details": []
      },
      {
        "id": 206649,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2019-12-19T14:18:33Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "4",
            "new_value": "1"
          },
          {
            "property": "attr",
            "name": "fixed_version_id",
            "old_value": "944",
            "new_value": "1228"
          }
        ]
      },
      {
        "id": 209214,
        "user": {
          "id": 3834,
          "name": "Kaesberg.Jennifer.1572613875"
        },
        "notes": "",
        "created_on": "2020-01-09T14:31:59Z",
        "details": [
          {
            "property": "attr",
            "name": "status_id",
            "old_value": "1",
            "new_value": "4"
          }
        ]
      }
    ]
  }
]
